ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_pwr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_PWR_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_PWR_DeInit:
  27              	.LFB130:
  28              		.file 1 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c"
   1:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
   2:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
   3:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @file    stm32f4xx_hal_pwr.c
   4:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following 
   7:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Initialization and de-initialization functions
   9:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Peripheral Control functions 
  10:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         
  11:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  12:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @attention
  13:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  14:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  15:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * All rights reserved.</center></h2>
  16:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  17:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  18:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * the "License"; You may not use this file except in compliance with the
  19:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * License. You may obtain a copy of the License at:
  20:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                        opensource.org/licenses/BSD-3-Clause
  21:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  22:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  23:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */ 
  24:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  25:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  26:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #include "stm32f4xx_hal.h"
  27:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  28:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup STM32F4xx_HAL_Driver
  29:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  30:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 2


  31:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  32:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR PWR
  33:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  34:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  35:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  36:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  37:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  38:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  39:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  40:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  41:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup PWR_Private_Constants
  42:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  43:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  44:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
  45:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  46:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  47:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */     
  48:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  49:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  50:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  51:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  52:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  53:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  54:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  55:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  56:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  57:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  58:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */    
  59:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  60:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  61:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  62:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  63:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  64:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  65:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  66:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  67:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  68:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  69:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  70:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  71:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
  72:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  73:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  74:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  75:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
  76:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
  77:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
  78:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       write accesses. 
  79:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  80:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  81:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  82:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  83:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  
  84:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
  85:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  86:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  87:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 3


  88:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  89:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Deinitializes the HAL PWR peripheral registers to their default reset values.
  90:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
  91:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  92:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  93:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  29              		.loc 1 93 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  94:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  34              		.loc 1 94 3 view .LVU1
  35 0000 044B     		ldr	r3, .L2
  36 0002 1A6A     		ldr	r2, [r3, #32]
  37 0004 42F08052 		orr	r2, r2, #268435456
  38 0008 1A62     		str	r2, [r3, #32]
  95:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  39              		.loc 1 95 3 view .LVU2
  40 000a 1A6A     		ldr	r2, [r3, #32]
  41 000c 22F08052 		bic	r2, r2, #268435456
  42 0010 1A62     		str	r2, [r3, #32]
  96:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  43              		.loc 1 96 1 is_stmt 0 view .LVU3
  44 0012 7047     		bx	lr
  45              	.L3:
  46              		.align	2
  47              	.L2:
  48 0014 00380240 		.word	1073887232
  49              		.cfi_endproc
  50              	.LFE130:
  52              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  53              		.align	1
  54              		.global	HAL_PWR_EnableBkUpAccess
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	HAL_PWR_EnableBkUpAccess:
  60              	.LFB131:
  97:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  98:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  99:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC 
 100:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 101:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 102:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 103:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note The following sequence is required to bypass the delay between
 104:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit programming and the effective enabling  of the backup domain.
 105:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Please check the Errata Sheet for more details under "Possible delay
 106:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         in backup domain protection disabling/enabling after programming the
 107:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit" section.
 108:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 109:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 110:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 111:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  61              		.loc 1 111 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 4


  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66 0000 82B0     		sub	sp, sp, #8
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 8
 112:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __IO uint32_t dummyread;
  69              		.loc 1 112 3 view .LVU5
 113:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  70              		.loc 1 113 3 view .LVU6
  71              		.loc 1 113 32 is_stmt 0 view .LVU7
  72 0002 044B     		ldr	r3, .L6
  73 0004 0122     		movs	r2, #1
  74 0006 1A62     		str	r2, [r3, #32]
 114:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   dummyread = PWR->CR;
  75              		.loc 1 114 3 is_stmt 1 view .LVU8
  76              		.loc 1 114 18 is_stmt 0 view .LVU9
  77 0008 034B     		ldr	r3, .L6+4
  78 000a 1B68     		ldr	r3, [r3]
  79              		.loc 1 114 13 view .LVU10
  80 000c 0193     		str	r3, [sp, #4]
 115:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(dummyread);
  81              		.loc 1 115 3 is_stmt 1 view .LVU11
  82 000e 019B     		ldr	r3, [sp, #4]
 116:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  83              		.loc 1 116 1 is_stmt 0 view .LVU12
  84 0010 02B0     		add	sp, sp, #8
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 0
  87              		@ sp needed
  88 0012 7047     		bx	lr
  89              	.L7:
  90              		.align	2
  91              	.L6:
  92 0014 00000E42 		.word	1108213760
  93 0018 00700040 		.word	1073770496
  94              		.cfi_endproc
  95              	.LFE131:
  97              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
  98              		.align	1
  99              		.global	HAL_PWR_DisableBkUpAccess
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 104              	HAL_PWR_DisableBkUpAccess:
 105              	.LFB132:
 117:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 118:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 119:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC 
 120:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 121:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 122:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 123:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note The following sequence is required to bypass the delay between
 124:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit programming and the effective disabling  of the backup domain.
 125:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Please check the Errata Sheet for more details under "Possible delay
 126:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         in backup domain protection disabling/enabling after programming the
 127:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit" section.
 128:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 5


 129:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 130:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 131:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 106              		.loc 1 131 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 8
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0000 82B0     		sub	sp, sp, #8
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 8
 132:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __IO uint32_t dummyread;
 114              		.loc 1 132 3 view .LVU14
 133:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
 115              		.loc 1 133 3 view .LVU15
 116              		.loc 1 133 32 is_stmt 0 view .LVU16
 117 0002 044B     		ldr	r3, .L10
 118 0004 0022     		movs	r2, #0
 119 0006 1A62     		str	r2, [r3, #32]
 134:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   dummyread = PWR->CR;
 120              		.loc 1 134 3 is_stmt 1 view .LVU17
 121              		.loc 1 134 18 is_stmt 0 view .LVU18
 122 0008 034B     		ldr	r3, .L10+4
 123 000a 1B68     		ldr	r3, [r3]
 124              		.loc 1 134 13 view .LVU19
 125 000c 0193     		str	r3, [sp, #4]
 135:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(dummyread);
 126              		.loc 1 135 3 is_stmt 1 view .LVU20
 127 000e 019B     		ldr	r3, [sp, #4]
 136:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 128              		.loc 1 136 1 is_stmt 0 view .LVU21
 129 0010 02B0     		add	sp, sp, #8
 130              	.LCFI3:
 131              		.cfi_def_cfa_offset 0
 132              		@ sp needed
 133 0012 7047     		bx	lr
 134              	.L11:
 135              		.align	2
 136              	.L10:
 137 0014 00000E42 		.word	1108213760
 138 0018 00700040 		.word	1073770496
 139              		.cfi_endproc
 140              	.LFE132:
 142              		.section	.rodata.HAL_PWR_ConfigPVD.str1.4,"aMS",%progbits,1
 143              		.align	2
 144              	.LC0:
 145 0000 56656E64 		.ascii	"Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_ha"
 145      6F725F48 
 145      414C2F53 
 145      542F5354 
 145      4D333246 
 146 0033 6C5F7077 		.ascii	"l_pwr.c\000"
 146      722E6300 
 147              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 148              		.align	1
 149              		.global	HAL_PWR_ConfigPVD
 150              		.syntax unified
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 6


 151              		.thumb
 152              		.thumb_func
 154              	HAL_PWR_ConfigPVD:
 155              	.LVL0:
 156              	.LFB133:
 137:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 138:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 139:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
 140:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 141:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 142:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 143:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions 
 144:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
 145:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
 146:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 147:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 148:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 149:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 150:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      
 151:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** PVD configuration ***
 152:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =========================
 153:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 154:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 155:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 156:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
 157:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 158:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 159:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           __HAL_PWR_PVD_EXTI_ENABLE_IT() macro.
 160:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 161:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 162:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Wake-up pin configuration ***
 163:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     ================================
 164:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 165:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Wake-up pin is used to wake up the system from Standby mode. This pin is 
 166:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 167:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) There is one Wake-up pin: Wake-up Pin 1 on PA.00.
 168:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 	   (++) For STM32F446xx there are two Wake-Up pins: Pin1 on PA.00 and Pin2 on PC.13
 169:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****            (++) For STM32F410xx/STM32F412xx/STM32F413xx/STM32F423xx  there are three Wake-Up pins: 
 170:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 171:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 172:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =====================================
 173:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 174:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 175:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 176:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
 177:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           in low power mode
 178:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 179:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 180:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Sleep mode ***
 181:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ==================
 182:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 183:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 184:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLE
 185:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               functions with
 186:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 187:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 188:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 7


 189:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       -@@- The Regulator parameter is not used for the STM32F4 family 
 190:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               and is kept as parameter just to maintain compatibility with the 
 191:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               lower power families (STM32L).
 192:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 193:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any peripheral interrupt acknowledged by the nested vectored interrupt 
 194:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 195:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 196:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Stop mode ***
 197:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =================
 198:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 199:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 200:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
 201:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       are preserved.
 202:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 203:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 204:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       entering the Stop mode using the HAL_PWREx_EnableFlashPowerDown() function.
 205:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       It can be switched on again by software after exiting the Stop mode using
 206:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HAL_PWREx_DisableFlashPowerDown() function. 
 207:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 208:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 209:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****          The Stop mode is entered using the HAL_PWR_EnterSTOPMode(PWR_MAINREGULATOR_ON) 
 210:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              function with:
 211:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Main regulator ON.
 212:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Low Power regulator ON.
 213:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 214:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 215:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 216:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Standby mode ***
 217:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ====================
 218:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 219:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     (+)
 220:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 221:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled. 
 222:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 223:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 224:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 225:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       circuitry.
 226:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 227:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator is OFF.
 228:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 229:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Entry:
 230:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 231:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Exit:
 232:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wake-up,
 233:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 234:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 235:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Auto-wake-up (AWU) from low-power mode ***
 236:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =============================================
 237:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 238:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 239:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      (+) The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 240:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       Wake-up event, a tamper event or a time-stamp event, without depending on 
 241:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       an external interrupt (Auto-wake-up mode).
 242:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 243:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) RTC auto-wake-up (AWU) from the Stop and Standby modes
 244:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        
 245:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 8


 246:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 247:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 248:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 249:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 250:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                 HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 251:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                   
 252:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Wake-up event, it is necessary to
 253:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC Wake-up event using the HAL_RTCEx_SetWakeUpTime
 254:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 255:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
 256:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
 257:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 258:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 259:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 260:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 261:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
 262:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *        information for the PVD.
 263:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 264:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 265:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         detection level.
 266:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 267:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 268:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 269:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 157              		.loc 1 269 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		.loc 1 269 1 is_stmt 0 view .LVU23
 162 0000 10B5     		push	{r4, lr}
 163              	.LCFI4:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 167 0002 0446     		mov	r4, r0
 270:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 271:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 168              		.loc 1 271 3 is_stmt 1 view .LVU24
 169 0004 0368     		ldr	r3, [r0]
 170 0006 6BB1     		cbz	r3, .L13
 171              		.loc 1 271 3 is_stmt 0 discriminator 1 view .LVU25
 172 0008 202B     		cmp	r3, #32
 173 000a 0BD0     		beq	.L13
 174              		.loc 1 271 3 discriminator 2 view .LVU26
 175 000c 402B     		cmp	r3, #64
 176 000e 09D0     		beq	.L13
 177              		.loc 1 271 3 discriminator 3 view .LVU27
 178 0010 602B     		cmp	r3, #96
 179 0012 07D0     		beq	.L13
 180              		.loc 1 271 3 discriminator 4 view .LVU28
 181 0014 802B     		cmp	r3, #128
 182 0016 05D0     		beq	.L13
 183              		.loc 1 271 3 discriminator 5 view .LVU29
 184 0018 A02B     		cmp	r3, #160
 185 001a 03D0     		beq	.L13
 186              		.loc 1 271 3 discriminator 6 view .LVU30
 187 001c C02B     		cmp	r3, #192
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 9


 188 001e 01D0     		beq	.L13
 189              		.loc 1 271 3 discriminator 7 view .LVU31
 190 0020 E02B     		cmp	r3, #224
 191 0022 4CD1     		bne	.L20
 192              	.LVL1:
 193              	.L13:
 272:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 194              		.loc 1 272 3 is_stmt 1 view .LVU32
 195 0024 6368     		ldr	r3, [r4, #4]
 196 0026 A3F10112 		sub	r2, r3, #65537
 197 002a 022A     		cmp	r2, #2
 198 002c 0AD9     		bls	.L14
 199              		.loc 1 272 3 is_stmt 0 discriminator 1 view .LVU33
 200 002e 2A4A     		ldr	r2, .L22
 201 0030 9342     		cmp	r3, r2
 202 0032 07D0     		beq	.L14
 203              		.loc 1 272 3 discriminator 2 view .LVU34
 204 0034 B3F1021F 		cmp	r3, #131074
 205 0038 04D0     		beq	.L14
 206              		.loc 1 272 3 discriminator 3 view .LVU35
 207 003a 0232     		adds	r2, r2, #2
 208 003c 9342     		cmp	r3, r2
 209 003e 01D0     		beq	.L14
 210              		.loc 1 272 3 discriminator 4 view .LVU36
 211 0040 002B     		cmp	r3, #0
 212 0042 42D1     		bne	.L21
 213              	.L14:
 273:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 274:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 275:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 214              		.loc 1 275 3 is_stmt 1 view .LVU37
 215 0044 254A     		ldr	r2, .L22+4
 216 0046 1368     		ldr	r3, [r2]
 217 0048 23F0E003 		bic	r3, r3, #224
 218 004c 2168     		ldr	r1, [r4]
 219 004e 0B43     		orrs	r3, r3, r1
 220 0050 1360     		str	r3, [r2]
 276:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 277:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 278:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 221              		.loc 1 278 3 view .LVU38
 222 0052 234B     		ldr	r3, .L22+8
 223 0054 5A68     		ldr	r2, [r3, #4]
 224 0056 22F48032 		bic	r2, r2, #65536
 225 005a 5A60     		str	r2, [r3, #4]
 279:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 226              		.loc 1 279 3 view .LVU39
 227 005c 1A68     		ldr	r2, [r3]
 228 005e 22F48032 		bic	r2, r2, #65536
 229 0062 1A60     		str	r2, [r3]
 280:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 230              		.loc 1 280 3 view .LVU40
 231 0064 9A68     		ldr	r2, [r3, #8]
 232 0066 22F48032 		bic	r2, r2, #65536
 233 006a 9A60     		str	r2, [r3, #8]
 281:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 234              		.loc 1 281 3 view .LVU41
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 10


 235 006c DA68     		ldr	r2, [r3, #12]
 236 006e 22F48032 		bic	r2, r2, #65536
 237 0072 DA60     		str	r2, [r3, #12]
 282:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 283:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure interrupt mode */
 284:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 238              		.loc 1 284 3 view .LVU42
 239              		.loc 1 284 17 is_stmt 0 view .LVU43
 240 0074 6368     		ldr	r3, [r4, #4]
 241              		.loc 1 284 5 view .LVU44
 242 0076 13F4803F 		tst	r3, #65536
 243 007a 04D0     		beq	.L15
 285:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 286:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 244              		.loc 1 286 5 is_stmt 1 view .LVU45
 245 007c 184A     		ldr	r2, .L22+8
 246 007e 1368     		ldr	r3, [r2]
 247 0080 43F48033 		orr	r3, r3, #65536
 248 0084 1360     		str	r3, [r2]
 249              	.L15:
 287:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 288:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 289:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure event mode */
 290:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 250              		.loc 1 290 3 view .LVU46
 251              		.loc 1 290 17 is_stmt 0 view .LVU47
 252 0086 6368     		ldr	r3, [r4, #4]
 253              		.loc 1 290 5 view .LVU48
 254 0088 13F4003F 		tst	r3, #131072
 255 008c 04D0     		beq	.L16
 291:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 292:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 256              		.loc 1 292 5 is_stmt 1 view .LVU49
 257 008e 144A     		ldr	r2, .L22+8
 258 0090 5368     		ldr	r3, [r2, #4]
 259 0092 43F48033 		orr	r3, r3, #65536
 260 0096 5360     		str	r3, [r2, #4]
 261              	.L16:
 293:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 294:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 295:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure the edge */
 296:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 262              		.loc 1 296 3 view .LVU50
 263              		.loc 1 296 17 is_stmt 0 view .LVU51
 264 0098 6368     		ldr	r3, [r4, #4]
 265              		.loc 1 296 5 view .LVU52
 266 009a 13F0010F 		tst	r3, #1
 267 009e 04D0     		beq	.L17
 297:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 298:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 268              		.loc 1 298 5 is_stmt 1 view .LVU53
 269 00a0 0F4A     		ldr	r2, .L22+8
 270 00a2 9368     		ldr	r3, [r2, #8]
 271 00a4 43F48033 		orr	r3, r3, #65536
 272 00a8 9360     		str	r3, [r2, #8]
 273              	.L17:
 299:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 11


 300:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 301:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 274              		.loc 1 301 3 view .LVU54
 275              		.loc 1 301 17 is_stmt 0 view .LVU55
 276 00aa 6368     		ldr	r3, [r4, #4]
 277              		.loc 1 301 5 view .LVU56
 278 00ac 13F0020F 		tst	r3, #2
 279 00b0 04D0     		beq	.L12
 302:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 303:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 280              		.loc 1 303 5 is_stmt 1 view .LVU57
 281 00b2 0B4A     		ldr	r2, .L22+8
 282 00b4 D368     		ldr	r3, [r2, #12]
 283 00b6 43F48033 		orr	r3, r3, #65536
 284 00ba D360     		str	r3, [r2, #12]
 285              	.L12:
 304:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 305:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 286              		.loc 1 305 1 is_stmt 0 view .LVU58
 287 00bc 10BD     		pop	{r4, pc}
 288              	.LVL2:
 289              	.L20:
 271:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 290              		.loc 1 271 3 discriminator 8 view .LVU59
 291 00be 40F20F11 		movw	r1, #271
 292 00c2 0848     		ldr	r0, .L22+12
 293              	.LVL3:
 271:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 294              		.loc 1 271 3 discriminator 8 view .LVU60
 295 00c4 FFF7FEFF 		bl	assert_failed
 296              	.LVL4:
 297 00c8 ACE7     		b	.L13
 298              	.L21:
 272:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 299              		.loc 1 272 3 discriminator 5 view .LVU61
 300 00ca 4FF48871 		mov	r1, #272
 301 00ce 0548     		ldr	r0, .L22+12
 302 00d0 FFF7FEFF 		bl	assert_failed
 303              	.LVL5:
 304 00d4 B6E7     		b	.L14
 305              	.L23:
 306 00d6 00BF     		.align	2
 307              	.L22:
 308 00d8 01000200 		.word	131073
 309 00dc 00700040 		.word	1073770496
 310 00e0 003C0140 		.word	1073822720
 311 00e4 00000000 		.word	.LC0
 312              		.cfi_endproc
 313              	.LFE133:
 315              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 316              		.align	1
 317              		.global	HAL_PWR_EnablePVD
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	HAL_PWR_EnablePVD:
 323              	.LFB134:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 12


 306:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 307:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 308:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Power Voltage Detector(PVD).
 309:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 310:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 311:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 312:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 324              		.loc 1 312 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 313:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 329              		.loc 1 313 3 view .LVU63
 330              		.loc 1 313 33 is_stmt 0 view .LVU64
 331 0000 014B     		ldr	r3, .L25
 332 0002 0122     		movs	r2, #1
 333 0004 1A61     		str	r2, [r3, #16]
 314:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 334              		.loc 1 314 1 view .LVU65
 335 0006 7047     		bx	lr
 336              	.L26:
 337              		.align	2
 338              	.L25:
 339 0008 00000E42 		.word	1108213760
 340              		.cfi_endproc
 341              	.LFE134:
 343              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 344              		.align	1
 345              		.global	HAL_PWR_DisablePVD
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	HAL_PWR_DisablePVD:
 351              	.LFB135:
 315:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 316:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 317:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Power Voltage Detector(PVD).
 318:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 319:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 320:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 321:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 352              		.loc 1 321 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 322:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 357              		.loc 1 322 3 view .LVU67
 358              		.loc 1 322 33 is_stmt 0 view .LVU68
 359 0000 014B     		ldr	r3, .L28
 360 0002 0022     		movs	r2, #0
 361 0004 1A61     		str	r2, [r3, #16]
 323:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 362              		.loc 1 323 1 view .LVU69
 363 0006 7047     		bx	lr
 364              	.L29:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 13


 365              		.align	2
 366              	.L28:
 367 0008 00000E42 		.word	1108213760
 368              		.cfi_endproc
 369              	.LFE135:
 371              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 372              		.align	1
 373              		.global	HAL_PWR_EnableWakeUpPin
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	HAL_PWR_EnableWakeUpPin:
 379              	.LVL6:
 380              	.LFB136:
 324:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 325:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 326:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Wake-up PINx functionality.
 327:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
 328:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 329:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 330:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 331:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 332:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 333:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 334:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 335:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 381              		.loc 1 335 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		.loc 1 335 1 is_stmt 0 view .LVU71
 386 0000 10B5     		push	{r4, lr}
 387              	.LCFI5:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 14, -4
 391 0002 0446     		mov	r4, r0
 336:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 337:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 392              		.loc 1 337 3 is_stmt 1 view .LVU72
 393 0004 B0F5807F 		cmp	r0, #256
 394 0008 01D0     		beq	.L31
 395              		.loc 1 337 3 is_stmt 0 discriminator 1 view .LVU73
 396 000a 8028     		cmp	r0, #128
 397 000c 04D1     		bne	.L33
 398              	.LVL7:
 399              	.L31:
 338:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 339:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Enable the wake up pin */
 340:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 400              		.loc 1 340 3 is_stmt 1 view .LVU74
 401 000e 054B     		ldr	r3, .L34
 402 0010 5868     		ldr	r0, [r3, #4]
 403 0012 0443     		orrs	r4, r4, r0
 404              	.LVL8:
 405              		.loc 1 340 3 is_stmt 0 view .LVU75
 406 0014 5C60     		str	r4, [r3, #4]
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 14


 341:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 407              		.loc 1 341 1 view .LVU76
 408 0016 10BD     		pop	{r4, pc}
 409              	.LVL9:
 410              	.L33:
 337:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 411              		.loc 1 337 3 discriminator 2 view .LVU77
 412 0018 40F25111 		movw	r1, #337
 413 001c 0248     		ldr	r0, .L34+4
 414              	.LVL10:
 337:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 415              		.loc 1 337 3 discriminator 2 view .LVU78
 416 001e FFF7FEFF 		bl	assert_failed
 417              	.LVL11:
 418 0022 F4E7     		b	.L31
 419              	.L35:
 420              		.align	2
 421              	.L34:
 422 0024 00700040 		.word	1073770496
 423 0028 00000000 		.word	.LC0
 424              		.cfi_endproc
 425              	.LFE136:
 427              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 428              		.align	1
 429              		.global	HAL_PWR_DisableWakeUpPin
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	HAL_PWR_DisableWakeUpPin:
 435              	.LVL12:
 436              	.LFB137:
 342:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 343:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 344:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Wake-up PINx functionality.
 345:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 346:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 347:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 348:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 349:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 350:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 351:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 352:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 353:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 437              		.loc 1 353 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		.loc 1 353 1 is_stmt 0 view .LVU80
 442 0000 10B5     		push	{r4, lr}
 443              	.LCFI6:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 4, -8
 446              		.cfi_offset 14, -4
 447 0002 0446     		mov	r4, r0
 354:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 355:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));  
 448              		.loc 1 355 3 is_stmt 1 view .LVU81
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 15


 449 0004 B0F5807F 		cmp	r0, #256
 450 0008 01D0     		beq	.L37
 451              		.loc 1 355 3 is_stmt 0 discriminator 1 view .LVU82
 452 000a 8028     		cmp	r0, #128
 453 000c 05D1     		bne	.L39
 454              	.LVL13:
 455              	.L37:
 356:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 357:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Disable the wake up pin */
 358:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
 456              		.loc 1 358 3 is_stmt 1 view .LVU83
 457 000e 064B     		ldr	r3, .L40
 458 0010 5868     		ldr	r0, [r3, #4]
 459 0012 20EA0404 		bic	r4, r0, r4
 460              	.LVL14:
 461              		.loc 1 358 3 is_stmt 0 view .LVU84
 462 0016 5C60     		str	r4, [r3, #4]
 359:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 463              		.loc 1 359 1 view .LVU85
 464 0018 10BD     		pop	{r4, pc}
 465              	.LVL15:
 466              	.L39:
 355:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 467              		.loc 1 355 3 discriminator 2 view .LVU86
 468 001a 40F26311 		movw	r1, #355
 469 001e 0348     		ldr	r0, .L40+4
 470              	.LVL16:
 355:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 471              		.loc 1 355 3 discriminator 2 view .LVU87
 472 0020 FFF7FEFF 		bl	assert_failed
 473              	.LVL17:
 474 0024 F3E7     		b	.L37
 475              	.L41:
 476 0026 00BF     		.align	2
 477              	.L40:
 478 0028 00700040 		.word	1073770496
 479 002c 00000000 		.word	.LC0
 480              		.cfi_endproc
 481              	.LFE137:
 483              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 484              		.align	1
 485              		.global	HAL_PWR_EnterSLEEPMode
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 490              	HAL_PWR_EnterSLEEPMode:
 491              	.LVL18:
 492              	.LFB138:
 360:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 361:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 362:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 363:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   
 364:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, all I/O pins keep the same state as in Run mode.
 365:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * 
 366:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, the systick is stopped to avoid exit from this mode with
 367:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       systick interrupt when used as time base for Timeout 
 368:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 16


 369:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
 370:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            This parameter can be one of the following values:
 371:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 372:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 373:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This parameter is not used for the STM32F4 family and is kept as parameter
 374:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       just to maintain compatibility with the lower power families.
 375:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode in entered with WFI or WFE instruction.
 376:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 377:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 378:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 379:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 380:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 381:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 382:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 493              		.loc 1 382 1 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		.loc 1 382 1 is_stmt 0 view .LVU89
 498 0000 10B5     		push	{r4, lr}
 499              	.LCFI7:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 4, -8
 502              		.cfi_offset 14, -4
 503 0002 0C46     		mov	r4, r1
 383:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 384:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 504              		.loc 1 384 3 is_stmt 1 view .LVU90
 505 0004 0128     		cmp	r0, #1
 506 0006 0ED8     		bhi	.L48
 507              	.LVL19:
 508              	.L43:
 385:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 509              		.loc 1 385 3 view .LVU91
 510 0008 631E     		subs	r3, r4, #1
 511 000a DBB2     		uxtb	r3, r3
 512 000c 012B     		cmp	r3, #1
 513 000e 10D8     		bhi	.L49
 514              	.L44:
 386:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 387:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 388:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 515              		.loc 1 388 3 view .LVU92
 516 0010 0C4A     		ldr	r2, .L51
 517 0012 1369     		ldr	r3, [r2, #16]
 518 0014 23F00403 		bic	r3, r3, #4
 519 0018 1361     		str	r3, [r2, #16]
 389:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 390:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 391:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 520              		.loc 1 391 3 view .LVU93
 521              		.loc 1 391 5 is_stmt 0 view .LVU94
 522 001a 012C     		cmp	r4, #1
 523 001c 0FD0     		beq	.L50
 392:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 393:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 394:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 17


 395:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 396:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 397:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 398:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 399:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 524              		.loc 1 399 5 is_stmt 1 view .LVU95
 525              		.syntax unified
 526              	@ 399 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 527 001e 40BF     		sev
 528              	@ 0 "" 2
 400:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 529              		.loc 1 400 5 view .LVU96
 530              	@ 400 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 531 0020 20BF     		wfe
 532              	@ 0 "" 2
 401:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 533              		.loc 1 401 5 view .LVU97
 534              	@ 401 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 535 0022 20BF     		wfe
 536              	@ 0 "" 2
 537              		.thumb
 538              		.syntax unified
 539              	.L42:
 402:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 403:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 540              		.loc 1 403 1 is_stmt 0 view .LVU98
 541 0024 10BD     		pop	{r4, pc}
 542              	.LVL20:
 543              	.L48:
 384:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 544              		.loc 1 384 3 discriminator 1 view .LVU99
 545 0026 4FF4C071 		mov	r1, #384
 546              	.LVL21:
 384:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 547              		.loc 1 384 3 discriminator 1 view .LVU100
 548 002a 0748     		ldr	r0, .L51+4
 549              	.LVL22:
 384:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 550              		.loc 1 384 3 discriminator 1 view .LVU101
 551 002c FFF7FEFF 		bl	assert_failed
 552              	.LVL23:
 553 0030 EAE7     		b	.L43
 554              	.L49:
 385:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 555              		.loc 1 385 3 discriminator 1 view .LVU102
 556 0032 40F28111 		movw	r1, #385
 557 0036 0448     		ldr	r0, .L51+4
 558 0038 FFF7FEFF 		bl	assert_failed
 559              	.LVL24:
 560 003c E8E7     		b	.L44
 561              	.L50:
 394:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 562              		.loc 1 394 5 is_stmt 1 view .LVU103
 563              		.syntax unified
 564              	@ 394 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 565 003e 30BF     		wfi
 566              	@ 0 "" 2
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 18


 567              		.thumb
 568              		.syntax unified
 569 0040 F0E7     		b	.L42
 570              	.L52:
 571 0042 00BF     		.align	2
 572              	.L51:
 573 0044 00ED00E0 		.word	-536810240
 574 0048 00000000 		.word	.LC0
 575              		.cfi_endproc
 576              	.LFE138:
 578              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 579              		.align	1
 580              		.global	HAL_PWR_EnterSTOPMode
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 585              	HAL_PWR_EnterSTOPMode:
 586              	.LVL25:
 587              	.LFB139:
 404:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 405:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 406:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 407:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Stop mode, all I/O pins keep the same state as in Run mode.
 408:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When exiting Stop mode by issuing an interrupt or a wake-up event, 
 409:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 410:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When the voltage regulator operates in low power mode, an additional 
 411:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 412:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 413:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 414:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in Stop mode.
 415:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 416:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 417:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 418:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param STOPEntry Specifies if Stop mode in entered with WFI or WFE instruction.
 419:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 420:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
 421:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction
 422:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 423:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 424:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 425:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 588              		.loc 1 425 1 view -0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		.loc 1 425 1 is_stmt 0 view .LVU105
 593 0000 38B5     		push	{r3, r4, r5, lr}
 594              	.LCFI8:
 595              		.cfi_def_cfa_offset 16
 596              		.cfi_offset 3, -16
 597              		.cfi_offset 4, -12
 598              		.cfi_offset 5, -8
 599              		.cfi_offset 14, -4
 600 0002 0546     		mov	r5, r0
 601 0004 0C46     		mov	r4, r1
 426:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 427:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 19


 602              		.loc 1 427 3 is_stmt 1 view .LVU106
 603 0006 0128     		cmp	r0, #1
 604 0008 19D8     		bhi	.L59
 605              	.LVL26:
 606              	.L54:
 428:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 607              		.loc 1 428 3 view .LVU107
 608 000a 631E     		subs	r3, r4, #1
 609 000c DBB2     		uxtb	r3, r3
 610 000e 012B     		cmp	r3, #1
 611 0010 1BD8     		bhi	.L60
 612              	.L55:
 429:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 430:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select the regulator state in Stop mode: Set PDDS and LPDS bits according to PWR_Regulator val
 431:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, (PWR_CR_PDDS | PWR_CR_LPDS), Regulator);
 613              		.loc 1 431 3 view .LVU108
 614 0012 124A     		ldr	r2, .L62
 615 0014 1368     		ldr	r3, [r2]
 616 0016 23F00303 		bic	r3, r3, #3
 617 001a 2B43     		orrs	r3, r3, r5
 618 001c 1360     		str	r3, [r2]
 432:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 433:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 434:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 619              		.loc 1 434 3 view .LVU109
 620 001e 104A     		ldr	r2, .L62+4
 621 0020 1369     		ldr	r3, [r2, #16]
 622 0022 43F00403 		orr	r3, r3, #4
 623 0026 1361     		str	r3, [r2, #16]
 435:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 436:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 437:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 624              		.loc 1 437 3 view .LVU110
 625              		.loc 1 437 5 is_stmt 0 view .LVU111
 626 0028 012C     		cmp	r4, #1
 627 002a 14D0     		beq	.L61
 438:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 439:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 440:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 441:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 442:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 443:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 444:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 445:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 628              		.loc 1 445 5 is_stmt 1 view .LVU112
 629              		.syntax unified
 630              	@ 445 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 631 002c 40BF     		sev
 632              	@ 0 "" 2
 446:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 633              		.loc 1 446 5 view .LVU113
 634              	@ 446 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 635 002e 20BF     		wfe
 636              	@ 0 "" 2
 447:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 637              		.loc 1 447 5 view .LVU114
 638              	@ 447 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 20


 639 0030 20BF     		wfe
 640              	@ 0 "" 2
 641              		.thumb
 642              		.syntax unified
 643              	.L57:
 448:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 449:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 450:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 644              		.loc 1 450 3 view .LVU115
 645 0032 0B4A     		ldr	r2, .L62+4
 646 0034 1369     		ldr	r3, [r2, #16]
 647 0036 23F00403 		bic	r3, r3, #4
 648 003a 1361     		str	r3, [r2, #16]
 451:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 649              		.loc 1 451 1 is_stmt 0 view .LVU116
 650 003c 38BD     		pop	{r3, r4, r5, pc}
 651              	.LVL27:
 652              	.L59:
 427:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 653              		.loc 1 427 3 discriminator 1 view .LVU117
 654 003e 40F2AB11 		movw	r1, #427
 655              	.LVL28:
 427:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 656              		.loc 1 427 3 discriminator 1 view .LVU118
 657 0042 0848     		ldr	r0, .L62+8
 658              	.LVL29:
 427:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 659              		.loc 1 427 3 discriminator 1 view .LVU119
 660 0044 FFF7FEFF 		bl	assert_failed
 661              	.LVL30:
 662 0048 DFE7     		b	.L54
 663              	.L60:
 428:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 664              		.loc 1 428 3 discriminator 1 view .LVU120
 665 004a 4FF4D671 		mov	r1, #428
 666 004e 0548     		ldr	r0, .L62+8
 667 0050 FFF7FEFF 		bl	assert_failed
 668              	.LVL31:
 669 0054 DDE7     		b	.L55
 670              	.L61:
 440:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 671              		.loc 1 440 5 is_stmt 1 view .LVU121
 672              		.syntax unified
 673              	@ 440 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 674 0056 30BF     		wfi
 675              	@ 0 "" 2
 676              		.thumb
 677              		.syntax unified
 678 0058 EBE7     		b	.L57
 679              	.L63:
 680 005a 00BF     		.align	2
 681              	.L62:
 682 005c 00700040 		.word	1073770496
 683 0060 00ED00E0 		.word	-536810240
 684 0064 00000000 		.word	.LC0
 685              		.cfi_endproc
 686              	.LFE139:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 21


 688              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 689              		.align	1
 690              		.global	HAL_PWR_EnterSTANDBYMode
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 695              	HAL_PWR_EnterSTANDBYMode:
 696              	.LFB140:
 452:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 453:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 454:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Standby mode.
 455:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Standby mode, all I/O pins are high impedance except for:
 456:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - Reset pad (still available) 
 457:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 458:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 459:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 460:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.       
 461:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 462:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 463:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 464:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 697              		.loc 1 464 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 465:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Standby mode */
 466:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 702              		.loc 1 466 3 view .LVU123
 703 0000 054A     		ldr	r2, .L65
 704 0002 1368     		ldr	r3, [r2]
 705 0004 43F00203 		orr	r3, r3, #2
 706 0008 1360     		str	r3, [r2]
 467:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 468:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 469:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 707              		.loc 1 469 3 view .LVU124
 708 000a 044A     		ldr	r2, .L65+4
 709 000c 1369     		ldr	r3, [r2, #16]
 710 000e 43F00403 		orr	r3, r3, #4
 711 0012 1361     		str	r3, [r2, #16]
 470:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 471:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 472:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 473:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __force_stores();
 474:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #endif
 475:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 476:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __WFI();
 712              		.loc 1 476 3 view .LVU125
 713              		.syntax unified
 714              	@ 476 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 715 0014 30BF     		wfi
 716              	@ 0 "" 2
 477:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 717              		.loc 1 477 1 is_stmt 0 view .LVU126
 718              		.thumb
 719              		.syntax unified
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 22


 720 0016 7047     		bx	lr
 721              	.L66:
 722              		.align	2
 723              	.L65:
 724 0018 00700040 		.word	1073770496
 725 001c 00ED00E0 		.word	-536810240
 726              		.cfi_endproc
 727              	.LFE140:
 729              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 730              		.align	1
 731              		.weak	HAL_PWR_PVDCallback
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 736              	HAL_PWR_PVDCallback:
 737              	.LFB142:
 478:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 479:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 480:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief This function handles the PWR PVD interrupt request.
 481:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This API should be called under the PVD_IRQHandler().
 482:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 483:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 484:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 485:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 486:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 487:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 488:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 489:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
 490:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 491:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 492:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 493:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 494:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 495:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 496:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 497:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 498:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 499:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 500:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 501:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 502:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 738              		.loc 1 502 1 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 503:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 504:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 505:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    */ 
 506:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 743              		.loc 1 506 1 view .LVU128
 744 0000 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE142:
 748              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 749              		.align	1
 750              		.global	HAL_PWR_PVD_IRQHandler
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 23


 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 755              	HAL_PWR_PVD_IRQHandler:
 756              	.LFB141:
 485:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 757              		.loc 1 485 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761 0000 08B5     		push	{r3, lr}
 762              	.LCFI9:
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 3, -8
 765              		.cfi_offset 14, -4
 487:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 766              		.loc 1 487 3 view .LVU130
 487:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 767              		.loc 1 487 6 is_stmt 0 view .LVU131
 768 0002 064B     		ldr	r3, .L72
 769 0004 5B69     		ldr	r3, [r3, #20]
 487:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 770              		.loc 1 487 5 view .LVU132
 771 0006 13F4803F 		tst	r3, #65536
 772 000a 00D1     		bne	.L71
 773              	.L68:
 495:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 774              		.loc 1 495 1 view .LVU133
 775 000c 08BD     		pop	{r3, pc}
 776              	.L71:
 490:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 777              		.loc 1 490 5 is_stmt 1 view .LVU134
 778 000e FFF7FEFF 		bl	HAL_PWR_PVDCallback
 779              	.LVL32:
 493:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 780              		.loc 1 493 5 view .LVU135
 781 0012 024B     		ldr	r3, .L72
 782 0014 4FF48032 		mov	r2, #65536
 783 0018 5A61     		str	r2, [r3, #20]
 495:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 784              		.loc 1 495 1 is_stmt 0 view .LVU136
 785 001a F7E7     		b	.L68
 786              	.L73:
 787              		.align	2
 788              	.L72:
 789 001c 003C0140 		.word	1073822720
 790              		.cfi_endproc
 791              	.LFE141:
 793              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 794              		.align	1
 795              		.global	HAL_PWR_EnableSleepOnExit
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 800              	HAL_PWR_EnableSleepOnExit:
 801              	.LFB143:
 507:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 24


 508:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 509:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 510:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 511:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 512:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 513:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       interruptions handling.         
 514:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 515:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 516:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 517:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 802              		.loc 1 517 1 is_stmt 1 view -0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 518:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 519:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 807              		.loc 1 519 3 view .LVU138
 808 0000 024A     		ldr	r2, .L75
 809 0002 1369     		ldr	r3, [r2, #16]
 810 0004 43F00203 		orr	r3, r3, #2
 811 0008 1361     		str	r3, [r2, #16]
 520:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 812              		.loc 1 520 1 is_stmt 0 view .LVU139
 813 000a 7047     		bx	lr
 814              	.L76:
 815              		.align	2
 816              	.L75:
 817 000c 00ED00E0 		.word	-536810240
 818              		.cfi_endproc
 819              	.LFE143:
 821              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 822              		.align	1
 823              		.global	HAL_PWR_DisableSleepOnExit
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 828              	HAL_PWR_DisableSleepOnExit:
 829              	.LFB144:
 521:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 522:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 523:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 524:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 525:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 526:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 527:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 528:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 529:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 830              		.loc 1 529 1 is_stmt 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 530:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 531:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 835              		.loc 1 531 3 view .LVU141
 836 0000 024A     		ldr	r2, .L78
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 25


 837 0002 1369     		ldr	r3, [r2, #16]
 838 0004 23F00203 		bic	r3, r3, #2
 839 0008 1361     		str	r3, [r2, #16]
 532:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 840              		.loc 1 532 1 is_stmt 0 view .LVU142
 841 000a 7047     		bx	lr
 842              	.L79:
 843              		.align	2
 844              	.L78:
 845 000c 00ED00E0 		.word	-536810240
 846              		.cfi_endproc
 847              	.LFE144:
 849              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 850              		.align	1
 851              		.global	HAL_PWR_EnableSEVOnPend
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 856              	HAL_PWR_EnableSEVOnPend:
 857              	.LFB145:
 533:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 534:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 535:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 536:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 537:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 538:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 539:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 540:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 541:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 858              		.loc 1 541 1 is_stmt 1 view -0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              		@ link register save eliminated.
 542:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 543:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 863              		.loc 1 543 3 view .LVU144
 864 0000 024A     		ldr	r2, .L81
 865 0002 1369     		ldr	r3, [r2, #16]
 866 0004 43F01003 		orr	r3, r3, #16
 867 0008 1361     		str	r3, [r2, #16]
 544:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 868              		.loc 1 544 1 is_stmt 0 view .LVU145
 869 000a 7047     		bx	lr
 870              	.L82:
 871              		.align	2
 872              	.L81:
 873 000c 00ED00E0 		.word	-536810240
 874              		.cfi_endproc
 875              	.LFE145:
 877              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 878              		.align	1
 879              		.global	HAL_PWR_DisableSEVOnPend
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 884              	HAL_PWR_DisableSEVOnPend:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 26


 885              	.LFB146:
 545:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 546:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 547:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 548:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 549:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 550:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 551:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 552:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 553:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 886              		.loc 1 553 1 is_stmt 1 view -0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 554:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 555:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 891              		.loc 1 555 3 view .LVU147
 892 0000 024A     		ldr	r2, .L84
 893 0002 1369     		ldr	r3, [r2, #16]
 894 0004 23F01003 		bic	r3, r3, #16
 895 0008 1361     		str	r3, [r2, #16]
 556:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 896              		.loc 1 556 1 is_stmt 0 view .LVU148
 897 000a 7047     		bx	lr
 898              	.L85:
 899              		.align	2
 900              	.L84:
 901 000c 00ED00E0 		.word	-536810240
 902              		.cfi_endproc
 903              	.LFE146:
 905              		.text
 906              	.Letext0:
 907              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 908              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 909              		.file 4 "CMSIS/Core/Include/core_cm4.h"
 910              		.file 5 "CMSIS/Vendor_Device/ST/STM32F4xx/Include/stm32f446xx.h"
 911              		.file 6 "CMSIS/Vendor_Device/ST/STM32F4xx/Include/stm32f4xx.h"
 912              		.file 7 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h"
 913              		.file 8 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/stm32f4xx_hal_conf.h"
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccORBIMu.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_pwr.c
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:20     .text.HAL_PWR_DeInit:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:26     .text.HAL_PWR_DeInit:00000000 HAL_PWR_DeInit
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:48     .text.HAL_PWR_DeInit:00000014 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:53     .text.HAL_PWR_EnableBkUpAccess:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:59     .text.HAL_PWR_EnableBkUpAccess:00000000 HAL_PWR_EnableBkUpAccess
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:92     .text.HAL_PWR_EnableBkUpAccess:00000014 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:98     .text.HAL_PWR_DisableBkUpAccess:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:104    .text.HAL_PWR_DisableBkUpAccess:00000000 HAL_PWR_DisableBkUpAccess
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:137    .text.HAL_PWR_DisableBkUpAccess:00000014 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:143    .rodata.HAL_PWR_ConfigPVD.str1.4:00000000 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:148    .text.HAL_PWR_ConfigPVD:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:154    .text.HAL_PWR_ConfigPVD:00000000 HAL_PWR_ConfigPVD
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:308    .text.HAL_PWR_ConfigPVD:000000d8 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:316    .text.HAL_PWR_EnablePVD:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:322    .text.HAL_PWR_EnablePVD:00000000 HAL_PWR_EnablePVD
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:339    .text.HAL_PWR_EnablePVD:00000008 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:344    .text.HAL_PWR_DisablePVD:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:350    .text.HAL_PWR_DisablePVD:00000000 HAL_PWR_DisablePVD
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:367    .text.HAL_PWR_DisablePVD:00000008 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:372    .text.HAL_PWR_EnableWakeUpPin:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:378    .text.HAL_PWR_EnableWakeUpPin:00000000 HAL_PWR_EnableWakeUpPin
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:422    .text.HAL_PWR_EnableWakeUpPin:00000024 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:428    .text.HAL_PWR_DisableWakeUpPin:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:434    .text.HAL_PWR_DisableWakeUpPin:00000000 HAL_PWR_DisableWakeUpPin
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:478    .text.HAL_PWR_DisableWakeUpPin:00000028 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:484    .text.HAL_PWR_EnterSLEEPMode:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:490    .text.HAL_PWR_EnterSLEEPMode:00000000 HAL_PWR_EnterSLEEPMode
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:573    .text.HAL_PWR_EnterSLEEPMode:00000044 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:579    .text.HAL_PWR_EnterSTOPMode:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:585    .text.HAL_PWR_EnterSTOPMode:00000000 HAL_PWR_EnterSTOPMode
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:682    .text.HAL_PWR_EnterSTOPMode:0000005c $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:689    .text.HAL_PWR_EnterSTANDBYMode:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:695    .text.HAL_PWR_EnterSTANDBYMode:00000000 HAL_PWR_EnterSTANDBYMode
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:724    .text.HAL_PWR_EnterSTANDBYMode:00000018 $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:730    .text.HAL_PWR_PVDCallback:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:736    .text.HAL_PWR_PVDCallback:00000000 HAL_PWR_PVDCallback
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:749    .text.HAL_PWR_PVD_IRQHandler:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:755    .text.HAL_PWR_PVD_IRQHandler:00000000 HAL_PWR_PVD_IRQHandler
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:789    .text.HAL_PWR_PVD_IRQHandler:0000001c $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:794    .text.HAL_PWR_EnableSleepOnExit:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:800    .text.HAL_PWR_EnableSleepOnExit:00000000 HAL_PWR_EnableSleepOnExit
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:817    .text.HAL_PWR_EnableSleepOnExit:0000000c $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:822    .text.HAL_PWR_DisableSleepOnExit:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:828    .text.HAL_PWR_DisableSleepOnExit:00000000 HAL_PWR_DisableSleepOnExit
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:845    .text.HAL_PWR_DisableSleepOnExit:0000000c $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:850    .text.HAL_PWR_EnableSEVOnPend:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:856    .text.HAL_PWR_EnableSEVOnPend:00000000 HAL_PWR_EnableSEVOnPend
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:873    .text.HAL_PWR_EnableSEVOnPend:0000000c $d
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:878    .text.HAL_PWR_DisableSEVOnPend:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:884    .text.HAL_PWR_DisableSEVOnPend:00000000 HAL_PWR_DisableSEVOnPend
C:\Users\katre\AppData\Local\Temp\ccORBIMu.s:901    .text.HAL_PWR_DisableSEVOnPend:0000000c $d

UNDEFINED SYMBOLS
assert_failed
