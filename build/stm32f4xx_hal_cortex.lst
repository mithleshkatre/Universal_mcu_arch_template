ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_cortex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.HAL_NVIC_SetPriorityGrouping.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 56656E64 		.ascii	"Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_ha"
  22      6F725F48 
  22      414C2F53 
  22      542F5354 
  22      4D333246 
  23 0033 6C5F636F 		.ascii	"l_cortex.c\000"
  23      72746578 
  23      2E6300
  24              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  25              		.align	1
  26              		.global	HAL_NVIC_SetPriorityGrouping
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	HAL_NVIC_SetPriorityGrouping:
  32              	.LVL0:
  33              	.LFB130:
  34              		.file 1 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c"
   1:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
   2:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
   3:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @file    stm32f4xx_hal_cortex.c
   4:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   7:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           + Peripheral Control functions 
  10:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  11:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   @verbatim  
  12:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
  13:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
  15:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  16:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]  
  17:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     ===========================================================
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 2


  19:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]     
  20:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    
  23:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         function according to the following table.
  25:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority(). 
  26:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority. 
  28:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       
  29:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible. 
  30:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    
  32:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  
  37:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]  
  38:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     ========================================================
  40:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]
  41:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****            
  43:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        is a CMSIS function that:
  45:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value 0x0F.
  47:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     
  52:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  55:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        inside the stm32f4xx_hal_cortex.h file.
  56:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  57:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  61:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                             
  63:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    
  67:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   @endverbatim
  68:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
  69:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @attention
  70:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  71:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  72:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * All rights reserved.</center></h2>
  73:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  74:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  75:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * the "License"; You may not use this file except in compliance with the
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 3


  76:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * License. You may obtain a copy of the License at:
  77:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  78:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *
  79:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
  80:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
  81:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  82:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  83:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** #include "stm32f4xx_hal.h"
  84:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  85:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @addtogroup STM32F4xx_HAL_Driver
  86:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
  87:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
  88:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  89:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  90:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
  91:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
  92:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
  93:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  94:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  95:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
  96:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  97:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  98:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  99:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 100:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 101:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 102:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 103:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 104:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 105:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 106:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 107:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 108:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 109:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 110:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  *
 111:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** @verbatim    
 112:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 113:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 114:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 115:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]
 116:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 117:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       Systick functionalities 
 118:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 119:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** @endverbatim
 120:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 121:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 122:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 123:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 124:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 125:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 126:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         using the required unlock sequence.
 127:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length. 
 128:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 129:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 130:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    4 bits for subpriority
 131:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 132:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    3 bits for subpriority
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 4


 133:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 134:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 135:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 136:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    1 bits for subpriority
 137:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 138:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                    0 bits for subpriority
 139:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
 140:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 141:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 142:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 143:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 144:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
  35              		.loc 1 144 1 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 144 1 is_stmt 0 view .LVU1
  40 0000 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45 0002 0446     		mov	r4, r0
 145:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 146:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  46              		.loc 1 146 3 is_stmt 1 view .LVU2
  47 0004 C31E     		subs	r3, r0, #3
  48 0006 042B     		cmp	r3, #4
  49 0008 0FD8     		bhi	.L4
  50              	.LVL1:
  51              	.L2:
 147:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 148:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 149:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
  52              		.loc 1 149 3 view .LVU3
  53              	.LBB38:
  54              	.LBI38:
  55              		.file 2 "CMSIS/Core/Include/core_cm4.h"
   1:CMSIS/Core/Include/core_cm4.h **** /**************************************************************************//**
   2:CMSIS/Core/Include/core_cm4.h ****  * @file     core_cm4.h
   3:CMSIS/Core/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:CMSIS/Core/Include/core_cm4.h ****  * @version  V5.0.8
   5:CMSIS/Core/Include/core_cm4.h ****  * @date     04. June 2018
   6:CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
   7:CMSIS/Core/Include/core_cm4.h **** /*
   8:CMSIS/Core/Include/core_cm4.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:CMSIS/Core/Include/core_cm4.h ****  *
  10:CMSIS/Core/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:CMSIS/Core/Include/core_cm4.h ****  *
  12:CMSIS/Core/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:CMSIS/Core/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:CMSIS/Core/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:CMSIS/Core/Include/core_cm4.h ****  *
  16:CMSIS/Core/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:CMSIS/Core/Include/core_cm4.h ****  *
  18:CMSIS/Core/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:CMSIS/Core/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 5


  20:CMSIS/Core/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:CMSIS/Core/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:CMSIS/Core/Include/core_cm4.h ****  * limitations under the License.
  23:CMSIS/Core/Include/core_cm4.h ****  */
  24:CMSIS/Core/Include/core_cm4.h **** 
  25:CMSIS/Core/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:CMSIS/Core/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:CMSIS/Core/Include/core_cm4.h **** #elif defined (__clang__)
  28:CMSIS/Core/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:CMSIS/Core/Include/core_cm4.h **** #endif
  30:CMSIS/Core/Include/core_cm4.h **** 
  31:CMSIS/Core/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:CMSIS/Core/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:CMSIS/Core/Include/core_cm4.h **** 
  34:CMSIS/Core/Include/core_cm4.h **** #include <stdint.h>
  35:CMSIS/Core/Include/core_cm4.h **** 
  36:CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
  37:CMSIS/Core/Include/core_cm4.h ****  extern "C" {
  38:CMSIS/Core/Include/core_cm4.h **** #endif
  39:CMSIS/Core/Include/core_cm4.h **** 
  40:CMSIS/Core/Include/core_cm4.h **** /**
  41:CMSIS/Core/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:CMSIS/Core/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:CMSIS/Core/Include/core_cm4.h **** 
  44:CMSIS/Core/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:CMSIS/Core/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:CMSIS/Core/Include/core_cm4.h **** 
  47:CMSIS/Core/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:CMSIS/Core/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:CMSIS/Core/Include/core_cm4.h **** 
  50:CMSIS/Core/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:CMSIS/Core/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:CMSIS/Core/Include/core_cm4.h ****  */
  53:CMSIS/Core/Include/core_cm4.h **** 
  54:CMSIS/Core/Include/core_cm4.h **** 
  55:CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
  56:CMSIS/Core/Include/core_cm4.h ****  *                 CMSIS definitions
  57:CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
  58:CMSIS/Core/Include/core_cm4.h **** /**
  59:CMSIS/Core/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:CMSIS/Core/Include/core_cm4.h ****   @{
  61:CMSIS/Core/Include/core_cm4.h ****  */
  62:CMSIS/Core/Include/core_cm4.h **** 
  63:CMSIS/Core/Include/core_cm4.h **** #include "cmsis_version.h"
  64:CMSIS/Core/Include/core_cm4.h **** 
  65:CMSIS/Core/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:CMSIS/Core/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:CMSIS/Core/Include/core_cm4.h **** 
  71:CMSIS/Core/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:CMSIS/Core/Include/core_cm4.h **** 
  73:CMSIS/Core/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:CMSIS/Core/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:CMSIS/Core/Include/core_cm4.h **** */
  76:CMSIS/Core/Include/core_cm4.h **** #if defined ( __CC_ARM )
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 6


  77:CMSIS/Core/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:CMSIS/Core/Include/core_cm4.h ****     #else
  81:CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:CMSIS/Core/Include/core_cm4.h ****     #endif
  84:CMSIS/Core/Include/core_cm4.h ****   #else
  85:CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:CMSIS/Core/Include/core_cm4.h ****   #endif
  87:CMSIS/Core/Include/core_cm4.h **** 
  88:CMSIS/Core/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:CMSIS/Core/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:CMSIS/Core/Include/core_cm4.h ****     #else
  93:CMSIS/Core/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:CMSIS/Core/Include/core_cm4.h ****     #endif
  96:CMSIS/Core/Include/core_cm4.h ****   #else
  97:CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:CMSIS/Core/Include/core_cm4.h ****   #endif
  99:CMSIS/Core/Include/core_cm4.h **** 
 100:CMSIS/Core/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:CMSIS/Core/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:CMSIS/Core/Include/core_cm4.h ****     #else
 105:CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:CMSIS/Core/Include/core_cm4.h ****     #endif
 108:CMSIS/Core/Include/core_cm4.h ****   #else
 109:CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:CMSIS/Core/Include/core_cm4.h ****   #endif
 111:CMSIS/Core/Include/core_cm4.h **** 
 112:CMSIS/Core/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:CMSIS/Core/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:CMSIS/Core/Include/core_cm4.h ****     #else
 117:CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:CMSIS/Core/Include/core_cm4.h ****     #endif
 120:CMSIS/Core/Include/core_cm4.h ****   #else
 121:CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:CMSIS/Core/Include/core_cm4.h ****   #endif
 123:CMSIS/Core/Include/core_cm4.h **** 
 124:CMSIS/Core/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:CMSIS/Core/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:CMSIS/Core/Include/core_cm4.h ****     #else
 129:CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:CMSIS/Core/Include/core_cm4.h ****     #endif
 132:CMSIS/Core/Include/core_cm4.h ****   #else
 133:CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 7


 134:CMSIS/Core/Include/core_cm4.h ****   #endif
 135:CMSIS/Core/Include/core_cm4.h **** 
 136:CMSIS/Core/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:CMSIS/Core/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:CMSIS/Core/Include/core_cm4.h ****     #else
 141:CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:CMSIS/Core/Include/core_cm4.h ****     #endif
 144:CMSIS/Core/Include/core_cm4.h ****   #else
 145:CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:CMSIS/Core/Include/core_cm4.h ****   #endif
 147:CMSIS/Core/Include/core_cm4.h **** 
 148:CMSIS/Core/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:CMSIS/Core/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:CMSIS/Core/Include/core_cm4.h ****     #else
 153:CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:CMSIS/Core/Include/core_cm4.h ****     #endif
 156:CMSIS/Core/Include/core_cm4.h ****   #else
 157:CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:CMSIS/Core/Include/core_cm4.h ****   #endif
 159:CMSIS/Core/Include/core_cm4.h **** 
 160:CMSIS/Core/Include/core_cm4.h **** #endif
 161:CMSIS/Core/Include/core_cm4.h **** 
 162:CMSIS/Core/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:CMSIS/Core/Include/core_cm4.h **** 
 164:CMSIS/Core/Include/core_cm4.h **** 
 165:CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 166:CMSIS/Core/Include/core_cm4.h **** }
 167:CMSIS/Core/Include/core_cm4.h **** #endif
 168:CMSIS/Core/Include/core_cm4.h **** 
 169:CMSIS/Core/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:CMSIS/Core/Include/core_cm4.h **** 
 171:CMSIS/Core/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:CMSIS/Core/Include/core_cm4.h **** 
 173:CMSIS/Core/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:CMSIS/Core/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:CMSIS/Core/Include/core_cm4.h **** 
 176:CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 177:CMSIS/Core/Include/core_cm4.h ****  extern "C" {
 178:CMSIS/Core/Include/core_cm4.h **** #endif
 179:CMSIS/Core/Include/core_cm4.h **** 
 180:CMSIS/Core/Include/core_cm4.h **** /* check device defines and use defaults */
 181:CMSIS/Core/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:CMSIS/Core/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:CMSIS/Core/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:CMSIS/Core/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:CMSIS/Core/Include/core_cm4.h ****   #endif
 186:CMSIS/Core/Include/core_cm4.h **** 
 187:CMSIS/Core/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:CMSIS/Core/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:CMSIS/Core/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:CMSIS/Core/Include/core_cm4.h ****   #endif
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 8


 191:CMSIS/Core/Include/core_cm4.h **** 
 192:CMSIS/Core/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:CMSIS/Core/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:CMSIS/Core/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:CMSIS/Core/Include/core_cm4.h ****   #endif
 196:CMSIS/Core/Include/core_cm4.h **** 
 197:CMSIS/Core/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:CMSIS/Core/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:CMSIS/Core/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:CMSIS/Core/Include/core_cm4.h ****   #endif
 201:CMSIS/Core/Include/core_cm4.h **** 
 202:CMSIS/Core/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:CMSIS/Core/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:CMSIS/Core/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:CMSIS/Core/Include/core_cm4.h ****   #endif
 206:CMSIS/Core/Include/core_cm4.h **** #endif
 207:CMSIS/Core/Include/core_cm4.h **** 
 208:CMSIS/Core/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:CMSIS/Core/Include/core_cm4.h **** /**
 210:CMSIS/Core/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:CMSIS/Core/Include/core_cm4.h **** 
 212:CMSIS/Core/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:CMSIS/Core/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:CMSIS/Core/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:CMSIS/Core/Include/core_cm4.h **** */
 216:CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 217:CMSIS/Core/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:CMSIS/Core/Include/core_cm4.h **** #else
 219:CMSIS/Core/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:CMSIS/Core/Include/core_cm4.h **** #endif
 221:CMSIS/Core/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:CMSIS/Core/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:CMSIS/Core/Include/core_cm4.h **** 
 224:CMSIS/Core/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:CMSIS/Core/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:CMSIS/Core/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:CMSIS/Core/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:CMSIS/Core/Include/core_cm4.h **** 
 229:CMSIS/Core/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:CMSIS/Core/Include/core_cm4.h **** 
 231:CMSIS/Core/Include/core_cm4.h **** 
 232:CMSIS/Core/Include/core_cm4.h **** 
 233:CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
 234:CMSIS/Core/Include/core_cm4.h ****  *                 Register Abstraction
 235:CMSIS/Core/Include/core_cm4.h ****   Core Register contain:
 236:CMSIS/Core/Include/core_cm4.h ****   - Core Register
 237:CMSIS/Core/Include/core_cm4.h ****   - Core NVIC Register
 238:CMSIS/Core/Include/core_cm4.h ****   - Core SCB Register
 239:CMSIS/Core/Include/core_cm4.h ****   - Core SysTick Register
 240:CMSIS/Core/Include/core_cm4.h ****   - Core Debug Register
 241:CMSIS/Core/Include/core_cm4.h ****   - Core MPU Register
 242:CMSIS/Core/Include/core_cm4.h ****   - Core FPU Register
 243:CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
 244:CMSIS/Core/Include/core_cm4.h **** /**
 245:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:CMSIS/Core/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:CMSIS/Core/Include/core_cm4.h **** */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 9


 248:CMSIS/Core/Include/core_cm4.h **** 
 249:CMSIS/Core/Include/core_cm4.h **** /**
 250:CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:CMSIS/Core/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:CMSIS/Core/Include/core_cm4.h ****   @{
 254:CMSIS/Core/Include/core_cm4.h ****  */
 255:CMSIS/Core/Include/core_cm4.h **** 
 256:CMSIS/Core/Include/core_cm4.h **** /**
 257:CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:CMSIS/Core/Include/core_cm4.h ****  */
 259:CMSIS/Core/Include/core_cm4.h **** typedef union
 260:CMSIS/Core/Include/core_cm4.h **** {
 261:CMSIS/Core/Include/core_cm4.h ****   struct
 262:CMSIS/Core/Include/core_cm4.h ****   {
 263:CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:CMSIS/Core/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:CMSIS/Core/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:CMSIS/Core/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:CMSIS/Core/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:CMSIS/Core/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:CMSIS/Core/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:CMSIS/Core/Include/core_cm4.h **** } APSR_Type;
 274:CMSIS/Core/Include/core_cm4.h **** 
 275:CMSIS/Core/Include/core_cm4.h **** /* APSR Register Definitions */
 276:CMSIS/Core/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:CMSIS/Core/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:CMSIS/Core/Include/core_cm4.h **** 
 279:CMSIS/Core/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:CMSIS/Core/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:CMSIS/Core/Include/core_cm4.h **** 
 282:CMSIS/Core/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:CMSIS/Core/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:CMSIS/Core/Include/core_cm4.h **** 
 285:CMSIS/Core/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:CMSIS/Core/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:CMSIS/Core/Include/core_cm4.h **** 
 288:CMSIS/Core/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:CMSIS/Core/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:CMSIS/Core/Include/core_cm4.h **** 
 291:CMSIS/Core/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:CMSIS/Core/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:CMSIS/Core/Include/core_cm4.h **** 
 294:CMSIS/Core/Include/core_cm4.h **** 
 295:CMSIS/Core/Include/core_cm4.h **** /**
 296:CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:CMSIS/Core/Include/core_cm4.h ****  */
 298:CMSIS/Core/Include/core_cm4.h **** typedef union
 299:CMSIS/Core/Include/core_cm4.h **** {
 300:CMSIS/Core/Include/core_cm4.h ****   struct
 301:CMSIS/Core/Include/core_cm4.h ****   {
 302:CMSIS/Core/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 10


 305:CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:CMSIS/Core/Include/core_cm4.h **** } IPSR_Type;
 307:CMSIS/Core/Include/core_cm4.h **** 
 308:CMSIS/Core/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:CMSIS/Core/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:CMSIS/Core/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:CMSIS/Core/Include/core_cm4.h **** 
 312:CMSIS/Core/Include/core_cm4.h **** 
 313:CMSIS/Core/Include/core_cm4.h **** /**
 314:CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:CMSIS/Core/Include/core_cm4.h ****  */
 316:CMSIS/Core/Include/core_cm4.h **** typedef union
 317:CMSIS/Core/Include/core_cm4.h **** {
 318:CMSIS/Core/Include/core_cm4.h ****   struct
 319:CMSIS/Core/Include/core_cm4.h ****   {
 320:CMSIS/Core/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:CMSIS/Core/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:CMSIS/Core/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:CMSIS/Core/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:CMSIS/Core/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:CMSIS/Core/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:CMSIS/Core/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:CMSIS/Core/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:CMSIS/Core/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:CMSIS/Core/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:CMSIS/Core/Include/core_cm4.h **** } xPSR_Type;
 335:CMSIS/Core/Include/core_cm4.h **** 
 336:CMSIS/Core/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:CMSIS/Core/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:CMSIS/Core/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:CMSIS/Core/Include/core_cm4.h **** 
 340:CMSIS/Core/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:CMSIS/Core/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:CMSIS/Core/Include/core_cm4.h **** 
 343:CMSIS/Core/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:CMSIS/Core/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:CMSIS/Core/Include/core_cm4.h **** 
 346:CMSIS/Core/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:CMSIS/Core/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:CMSIS/Core/Include/core_cm4.h **** 
 349:CMSIS/Core/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:CMSIS/Core/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:CMSIS/Core/Include/core_cm4.h **** 
 352:CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:CMSIS/Core/Include/core_cm4.h **** 
 355:CMSIS/Core/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:CMSIS/Core/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:CMSIS/Core/Include/core_cm4.h **** 
 358:CMSIS/Core/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:CMSIS/Core/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:CMSIS/Core/Include/core_cm4.h **** 
 361:CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 11


 362:CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:CMSIS/Core/Include/core_cm4.h **** 
 364:CMSIS/Core/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:CMSIS/Core/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:CMSIS/Core/Include/core_cm4.h **** 
 367:CMSIS/Core/Include/core_cm4.h **** 
 368:CMSIS/Core/Include/core_cm4.h **** /**
 369:CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:CMSIS/Core/Include/core_cm4.h ****  */
 371:CMSIS/Core/Include/core_cm4.h **** typedef union
 372:CMSIS/Core/Include/core_cm4.h **** {
 373:CMSIS/Core/Include/core_cm4.h ****   struct
 374:CMSIS/Core/Include/core_cm4.h ****   {
 375:CMSIS/Core/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:CMSIS/Core/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:CMSIS/Core/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:CMSIS/Core/Include/core_cm4.h **** } CONTROL_Type;
 382:CMSIS/Core/Include/core_cm4.h **** 
 383:CMSIS/Core/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:CMSIS/Core/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:CMSIS/Core/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:CMSIS/Core/Include/core_cm4.h **** 
 387:CMSIS/Core/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:CMSIS/Core/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:CMSIS/Core/Include/core_cm4.h **** 
 390:CMSIS/Core/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:CMSIS/Core/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:CMSIS/Core/Include/core_cm4.h **** 
 393:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:CMSIS/Core/Include/core_cm4.h **** 
 395:CMSIS/Core/Include/core_cm4.h **** 
 396:CMSIS/Core/Include/core_cm4.h **** /**
 397:CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:CMSIS/Core/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:CMSIS/Core/Include/core_cm4.h ****   @{
 401:CMSIS/Core/Include/core_cm4.h ****  */
 402:CMSIS/Core/Include/core_cm4.h **** 
 403:CMSIS/Core/Include/core_cm4.h **** /**
 404:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:CMSIS/Core/Include/core_cm4.h ****  */
 406:CMSIS/Core/Include/core_cm4.h **** typedef struct
 407:CMSIS/Core/Include/core_cm4.h **** {
 408:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:CMSIS/Core/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:CMSIS/Core/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 12


 419:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:CMSIS/Core/Include/core_cm4.h **** }  NVIC_Type;
 422:CMSIS/Core/Include/core_cm4.h **** 
 423:CMSIS/Core/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:CMSIS/Core/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:CMSIS/Core/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:CMSIS/Core/Include/core_cm4.h **** 
 427:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:CMSIS/Core/Include/core_cm4.h **** 
 429:CMSIS/Core/Include/core_cm4.h **** 
 430:CMSIS/Core/Include/core_cm4.h **** /**
 431:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:CMSIS/Core/Include/core_cm4.h ****   @{
 435:CMSIS/Core/Include/core_cm4.h ****  */
 436:CMSIS/Core/Include/core_cm4.h **** 
 437:CMSIS/Core/Include/core_cm4.h **** /**
 438:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:CMSIS/Core/Include/core_cm4.h ****  */
 440:CMSIS/Core/Include/core_cm4.h **** typedef struct
 441:CMSIS/Core/Include/core_cm4.h **** {
 442:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:CMSIS/Core/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:CMSIS/Core/Include/core_cm4.h **** } SCB_Type;
 464:CMSIS/Core/Include/core_cm4.h **** 
 465:CMSIS/Core/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:CMSIS/Core/Include/core_cm4.h **** 
 469:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:CMSIS/Core/Include/core_cm4.h **** 
 472:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:CMSIS/Core/Include/core_cm4.h **** 
 475:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 13


 476:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:CMSIS/Core/Include/core_cm4.h **** 
 478:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:CMSIS/Core/Include/core_cm4.h **** 
 481:CMSIS/Core/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:CMSIS/Core/Include/core_cm4.h **** 
 485:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:CMSIS/Core/Include/core_cm4.h **** 
 488:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:CMSIS/Core/Include/core_cm4.h **** 
 491:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:CMSIS/Core/Include/core_cm4.h **** 
 494:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:CMSIS/Core/Include/core_cm4.h **** 
 497:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:CMSIS/Core/Include/core_cm4.h **** 
 500:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:CMSIS/Core/Include/core_cm4.h **** 
 503:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:CMSIS/Core/Include/core_cm4.h **** 
 506:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:CMSIS/Core/Include/core_cm4.h **** 
 509:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:CMSIS/Core/Include/core_cm4.h **** 
 512:CMSIS/Core/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:CMSIS/Core/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:CMSIS/Core/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:CMSIS/Core/Include/core_cm4.h **** 
 516:CMSIS/Core/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:CMSIS/Core/Include/core_cm4.h **** 
 520:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:CMSIS/Core/Include/core_cm4.h **** 
 523:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:CMSIS/Core/Include/core_cm4.h **** 
 526:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:CMSIS/Core/Include/core_cm4.h **** 
 529:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:CMSIS/Core/Include/core_cm4.h **** 
 532:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 14


 533:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:CMSIS/Core/Include/core_cm4.h **** 
 535:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:CMSIS/Core/Include/core_cm4.h **** 
 538:CMSIS/Core/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:CMSIS/Core/Include/core_cm4.h **** 
 542:CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:CMSIS/Core/Include/core_cm4.h **** 
 545:CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:CMSIS/Core/Include/core_cm4.h **** 
 548:CMSIS/Core/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:CMSIS/Core/Include/core_cm4.h **** 
 552:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:CMSIS/Core/Include/core_cm4.h **** 
 555:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:CMSIS/Core/Include/core_cm4.h **** 
 558:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:CMSIS/Core/Include/core_cm4.h **** 
 561:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:CMSIS/Core/Include/core_cm4.h **** 
 564:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:CMSIS/Core/Include/core_cm4.h **** 
 567:CMSIS/Core/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:CMSIS/Core/Include/core_cm4.h **** 
 571:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:CMSIS/Core/Include/core_cm4.h **** 
 574:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:CMSIS/Core/Include/core_cm4.h **** 
 577:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:CMSIS/Core/Include/core_cm4.h **** 
 580:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:CMSIS/Core/Include/core_cm4.h **** 
 583:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:CMSIS/Core/Include/core_cm4.h **** 
 586:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:CMSIS/Core/Include/core_cm4.h **** 
 589:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 15


 590:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:CMSIS/Core/Include/core_cm4.h **** 
 592:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:CMSIS/Core/Include/core_cm4.h **** 
 595:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:CMSIS/Core/Include/core_cm4.h **** 
 598:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:CMSIS/Core/Include/core_cm4.h **** 
 601:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:CMSIS/Core/Include/core_cm4.h **** 
 604:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:CMSIS/Core/Include/core_cm4.h **** 
 607:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:CMSIS/Core/Include/core_cm4.h **** 
 610:CMSIS/Core/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:CMSIS/Core/Include/core_cm4.h **** 
 614:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:CMSIS/Core/Include/core_cm4.h **** 
 617:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:CMSIS/Core/Include/core_cm4.h **** 
 620:CMSIS/Core/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:CMSIS/Core/Include/core_cm4.h **** 
 624:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:CMSIS/Core/Include/core_cm4.h **** 
 627:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:CMSIS/Core/Include/core_cm4.h **** 
 630:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:CMSIS/Core/Include/core_cm4.h **** 
 633:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:CMSIS/Core/Include/core_cm4.h **** 
 636:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:CMSIS/Core/Include/core_cm4.h **** 
 639:CMSIS/Core/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:CMSIS/Core/Include/core_cm4.h **** 
 643:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:CMSIS/Core/Include/core_cm4.h **** 
 646:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 16


 647:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:CMSIS/Core/Include/core_cm4.h **** 
 649:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:CMSIS/Core/Include/core_cm4.h **** 
 652:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:CMSIS/Core/Include/core_cm4.h **** 
 655:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:CMSIS/Core/Include/core_cm4.h **** 
 658:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:CMSIS/Core/Include/core_cm4.h **** 
 661:CMSIS/Core/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:CMSIS/Core/Include/core_cm4.h **** 
 665:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:CMSIS/Core/Include/core_cm4.h **** 
 668:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:CMSIS/Core/Include/core_cm4.h **** 
 671:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:CMSIS/Core/Include/core_cm4.h **** 
 674:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:CMSIS/Core/Include/core_cm4.h **** 
 677:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:CMSIS/Core/Include/core_cm4.h **** 
 680:CMSIS/Core/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:CMSIS/Core/Include/core_cm4.h **** 
 684:CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:CMSIS/Core/Include/core_cm4.h **** 
 687:CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:CMSIS/Core/Include/core_cm4.h **** 
 690:CMSIS/Core/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:CMSIS/Core/Include/core_cm4.h **** 
 694:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:CMSIS/Core/Include/core_cm4.h **** 
 697:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:CMSIS/Core/Include/core_cm4.h **** 
 700:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:CMSIS/Core/Include/core_cm4.h **** 
 703:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 17


 704:CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:CMSIS/Core/Include/core_cm4.h **** 
 706:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:CMSIS/Core/Include/core_cm4.h **** 
 708:CMSIS/Core/Include/core_cm4.h **** 
 709:CMSIS/Core/Include/core_cm4.h **** /**
 710:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:CMSIS/Core/Include/core_cm4.h ****   @{
 714:CMSIS/Core/Include/core_cm4.h ****  */
 715:CMSIS/Core/Include/core_cm4.h **** 
 716:CMSIS/Core/Include/core_cm4.h **** /**
 717:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:CMSIS/Core/Include/core_cm4.h ****  */
 719:CMSIS/Core/Include/core_cm4.h **** typedef struct
 720:CMSIS/Core/Include/core_cm4.h **** {
 721:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:CMSIS/Core/Include/core_cm4.h **** } SCnSCB_Type;
 725:CMSIS/Core/Include/core_cm4.h **** 
 726:CMSIS/Core/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:CMSIS/Core/Include/core_cm4.h **** 
 730:CMSIS/Core/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:CMSIS/Core/Include/core_cm4.h **** 
 734:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:CMSIS/Core/Include/core_cm4.h **** 
 737:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:CMSIS/Core/Include/core_cm4.h **** 
 740:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:CMSIS/Core/Include/core_cm4.h **** 
 743:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:CMSIS/Core/Include/core_cm4.h **** 
 746:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:CMSIS/Core/Include/core_cm4.h **** 
 748:CMSIS/Core/Include/core_cm4.h **** 
 749:CMSIS/Core/Include/core_cm4.h **** /**
 750:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:CMSIS/Core/Include/core_cm4.h ****   @{
 754:CMSIS/Core/Include/core_cm4.h ****  */
 755:CMSIS/Core/Include/core_cm4.h **** 
 756:CMSIS/Core/Include/core_cm4.h **** /**
 757:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:CMSIS/Core/Include/core_cm4.h ****  */
 759:CMSIS/Core/Include/core_cm4.h **** typedef struct
 760:CMSIS/Core/Include/core_cm4.h **** {
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 18


 761:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:CMSIS/Core/Include/core_cm4.h **** } SysTick_Type;
 766:CMSIS/Core/Include/core_cm4.h **** 
 767:CMSIS/Core/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:CMSIS/Core/Include/core_cm4.h **** 
 771:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:CMSIS/Core/Include/core_cm4.h **** 
 774:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:CMSIS/Core/Include/core_cm4.h **** 
 777:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:CMSIS/Core/Include/core_cm4.h **** 
 780:CMSIS/Core/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:CMSIS/Core/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:CMSIS/Core/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:CMSIS/Core/Include/core_cm4.h **** 
 784:CMSIS/Core/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:CMSIS/Core/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:CMSIS/Core/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:CMSIS/Core/Include/core_cm4.h **** 
 788:CMSIS/Core/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:CMSIS/Core/Include/core_cm4.h **** 
 792:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:CMSIS/Core/Include/core_cm4.h **** 
 795:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:CMSIS/Core/Include/core_cm4.h **** 
 798:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:CMSIS/Core/Include/core_cm4.h **** 
 800:CMSIS/Core/Include/core_cm4.h **** 
 801:CMSIS/Core/Include/core_cm4.h **** /**
 802:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:CMSIS/Core/Include/core_cm4.h ****   @{
 806:CMSIS/Core/Include/core_cm4.h ****  */
 807:CMSIS/Core/Include/core_cm4.h **** 
 808:CMSIS/Core/Include/core_cm4.h **** /**
 809:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:CMSIS/Core/Include/core_cm4.h ****  */
 811:CMSIS/Core/Include/core_cm4.h **** typedef struct
 812:CMSIS/Core/Include/core_cm4.h **** {
 813:CMSIS/Core/Include/core_cm4.h ****   __OM  union
 814:CMSIS/Core/Include/core_cm4.h ****   {
 815:CMSIS/Core/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:CMSIS/Core/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:CMSIS/Core/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 19


 818:CMSIS/Core/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 829:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 830:CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:CMSIS/Core/Include/core_cm4.h **** } ITM_Type;
 846:CMSIS/Core/Include/core_cm4.h **** 
 847:CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:CMSIS/Core/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:CMSIS/Core/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:CMSIS/Core/Include/core_cm4.h **** 
 851:CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:CMSIS/Core/Include/core_cm4.h **** 
 855:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:CMSIS/Core/Include/core_cm4.h **** 
 858:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:CMSIS/Core/Include/core_cm4.h **** 
 861:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:CMSIS/Core/Include/core_cm4.h **** 
 864:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:CMSIS/Core/Include/core_cm4.h **** 
 867:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:CMSIS/Core/Include/core_cm4.h **** 
 870:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:CMSIS/Core/Include/core_cm4.h **** 
 873:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 20


 875:CMSIS/Core/Include/core_cm4.h **** 
 876:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:CMSIS/Core/Include/core_cm4.h **** 
 879:CMSIS/Core/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:CMSIS/Core/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:CMSIS/Core/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:CMSIS/Core/Include/core_cm4.h **** 
 883:CMSIS/Core/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:CMSIS/Core/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:CMSIS/Core/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 886:CMSIS/Core/Include/core_cm4.h **** 
 887:CMSIS/Core/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:CMSIS/Core/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:CMSIS/Core/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:CMSIS/Core/Include/core_cm4.h **** 
 891:CMSIS/Core/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:CMSIS/Core/Include/core_cm4.h **** 
 895:CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:CMSIS/Core/Include/core_cm4.h **** 
 898:CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:CMSIS/Core/Include/core_cm4.h **** 
 901:CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:CMSIS/Core/Include/core_cm4.h **** 
 903:CMSIS/Core/Include/core_cm4.h **** 
 904:CMSIS/Core/Include/core_cm4.h **** /**
 905:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:CMSIS/Core/Include/core_cm4.h ****   @{
 909:CMSIS/Core/Include/core_cm4.h ****  */
 910:CMSIS/Core/Include/core_cm4.h **** 
 911:CMSIS/Core/Include/core_cm4.h **** /**
 912:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:CMSIS/Core/Include/core_cm4.h ****  */
 914:CMSIS/Core/Include/core_cm4.h **** typedef struct
 915:CMSIS/Core/Include/core_cm4.h **** {
 916:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 21


 932:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:CMSIS/Core/Include/core_cm4.h **** } DWT_Type;
 940:CMSIS/Core/Include/core_cm4.h **** 
 941:CMSIS/Core/Include/core_cm4.h **** /* DWT Control Register Definitions */
 942:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 943:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:CMSIS/Core/Include/core_cm4.h **** 
 945:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:CMSIS/Core/Include/core_cm4.h **** 
 948:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:CMSIS/Core/Include/core_cm4.h **** 
 951:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:CMSIS/Core/Include/core_cm4.h **** 
 954:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:CMSIS/Core/Include/core_cm4.h **** 
 957:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:CMSIS/Core/Include/core_cm4.h **** 
 960:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:CMSIS/Core/Include/core_cm4.h **** 
 963:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:CMSIS/Core/Include/core_cm4.h **** 
 966:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:CMSIS/Core/Include/core_cm4.h **** 
 969:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:CMSIS/Core/Include/core_cm4.h **** 
 972:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:CMSIS/Core/Include/core_cm4.h **** 
 975:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:CMSIS/Core/Include/core_cm4.h **** 
 978:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:CMSIS/Core/Include/core_cm4.h **** 
 981:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:CMSIS/Core/Include/core_cm4.h **** 
 984:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:CMSIS/Core/Include/core_cm4.h **** 
 987:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 22


 989:CMSIS/Core/Include/core_cm4.h **** 
 990:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:CMSIS/Core/Include/core_cm4.h **** 
 993:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:CMSIS/Core/Include/core_cm4.h **** 
 996:CMSIS/Core/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:CMSIS/Core/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:CMSIS/Core/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:CMSIS/Core/Include/core_cm4.h **** 
1000:CMSIS/Core/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:CMSIS/Core/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:CMSIS/Core/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:CMSIS/Core/Include/core_cm4.h **** 
1004:CMSIS/Core/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:CMSIS/Core/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:CMSIS/Core/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:CMSIS/Core/Include/core_cm4.h **** 
1008:CMSIS/Core/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:CMSIS/Core/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:CMSIS/Core/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:CMSIS/Core/Include/core_cm4.h **** 
1012:CMSIS/Core/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:CMSIS/Core/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:CMSIS/Core/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:CMSIS/Core/Include/core_cm4.h **** 
1016:CMSIS/Core/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:CMSIS/Core/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:CMSIS/Core/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:CMSIS/Core/Include/core_cm4.h **** 
1020:CMSIS/Core/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:CMSIS/Core/Include/core_cm4.h **** 
1024:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:CMSIS/Core/Include/core_cm4.h **** 
1027:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:CMSIS/Core/Include/core_cm4.h **** 
1030:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:CMSIS/Core/Include/core_cm4.h **** 
1033:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:CMSIS/Core/Include/core_cm4.h **** 
1036:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:CMSIS/Core/Include/core_cm4.h **** 
1039:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:CMSIS/Core/Include/core_cm4.h **** 
1042:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:CMSIS/Core/Include/core_cm4.h **** 
1045:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 23


1046:CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:CMSIS/Core/Include/core_cm4.h **** 
1048:CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:CMSIS/Core/Include/core_cm4.h **** 
1050:CMSIS/Core/Include/core_cm4.h **** 
1051:CMSIS/Core/Include/core_cm4.h **** /**
1052:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:CMSIS/Core/Include/core_cm4.h ****   @{
1056:CMSIS/Core/Include/core_cm4.h ****  */
1057:CMSIS/Core/Include/core_cm4.h **** 
1058:CMSIS/Core/Include/core_cm4.h **** /**
1059:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:CMSIS/Core/Include/core_cm4.h ****  */
1061:CMSIS/Core/Include/core_cm4.h **** typedef struct
1062:CMSIS/Core/Include/core_cm4.h **** {
1063:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1074:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1075:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:CMSIS/Core/Include/core_cm4.h **** } TPI_Type;
1088:CMSIS/Core/Include/core_cm4.h **** 
1089:CMSIS/Core/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:CMSIS/Core/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:CMSIS/Core/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:CMSIS/Core/Include/core_cm4.h **** 
1093:CMSIS/Core/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:CMSIS/Core/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:CMSIS/Core/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:CMSIS/Core/Include/core_cm4.h **** 
1097:CMSIS/Core/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:CMSIS/Core/Include/core_cm4.h **** 
1101:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 24


1103:CMSIS/Core/Include/core_cm4.h **** 
1104:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:CMSIS/Core/Include/core_cm4.h **** 
1107:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1109:CMSIS/Core/Include/core_cm4.h **** 
1110:CMSIS/Core/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:CMSIS/Core/Include/core_cm4.h **** 
1114:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1115:CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:CMSIS/Core/Include/core_cm4.h **** 
1117:CMSIS/Core/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:CMSIS/Core/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:CMSIS/Core/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:CMSIS/Core/Include/core_cm4.h **** 
1121:CMSIS/Core/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:CMSIS/Core/Include/core_cm4.h **** 
1125:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:CMSIS/Core/Include/core_cm4.h **** 
1128:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:CMSIS/Core/Include/core_cm4.h **** 
1131:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:CMSIS/Core/Include/core_cm4.h **** 
1134:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:CMSIS/Core/Include/core_cm4.h **** 
1137:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:CMSIS/Core/Include/core_cm4.h **** 
1140:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:CMSIS/Core/Include/core_cm4.h **** 
1143:CMSIS/Core/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1145:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1146:CMSIS/Core/Include/core_cm4.h **** 
1147:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1148:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1149:CMSIS/Core/Include/core_cm4.h **** 
1150:CMSIS/Core/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:CMSIS/Core/Include/core_cm4.h **** 
1154:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:CMSIS/Core/Include/core_cm4.h **** 
1157:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 25


1160:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:CMSIS/Core/Include/core_cm4.h **** 
1163:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:CMSIS/Core/Include/core_cm4.h **** 
1166:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:CMSIS/Core/Include/core_cm4.h **** 
1169:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1171:CMSIS/Core/Include/core_cm4.h **** 
1172:CMSIS/Core/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1174:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1175:CMSIS/Core/Include/core_cm4.h **** 
1176:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1177:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1178:CMSIS/Core/Include/core_cm4.h **** 
1179:CMSIS/Core/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1180:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1181:CMSIS/Core/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1182:CMSIS/Core/Include/core_cm4.h **** 
1183:CMSIS/Core/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1184:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1185:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1186:CMSIS/Core/Include/core_cm4.h **** 
1187:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1188:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1189:CMSIS/Core/Include/core_cm4.h **** 
1190:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1191:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1192:CMSIS/Core/Include/core_cm4.h **** 
1193:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1194:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1195:CMSIS/Core/Include/core_cm4.h **** 
1196:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1197:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1198:CMSIS/Core/Include/core_cm4.h **** 
1199:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1200:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1201:CMSIS/Core/Include/core_cm4.h **** 
1202:CMSIS/Core/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1203:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1204:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:CMSIS/Core/Include/core_cm4.h **** 
1206:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1207:CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1208:CMSIS/Core/Include/core_cm4.h **** 
1209:CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1210:CMSIS/Core/Include/core_cm4.h **** 
1211:CMSIS/Core/Include/core_cm4.h **** 
1212:CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1213:CMSIS/Core/Include/core_cm4.h **** /**
1214:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1215:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1216:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 26


1217:CMSIS/Core/Include/core_cm4.h ****   @{
1218:CMSIS/Core/Include/core_cm4.h ****  */
1219:CMSIS/Core/Include/core_cm4.h **** 
1220:CMSIS/Core/Include/core_cm4.h **** /**
1221:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1222:CMSIS/Core/Include/core_cm4.h ****  */
1223:CMSIS/Core/Include/core_cm4.h **** typedef struct
1224:CMSIS/Core/Include/core_cm4.h **** {
1225:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1226:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1227:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1228:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1229:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1230:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1231:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1232:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1233:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1234:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1235:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1236:CMSIS/Core/Include/core_cm4.h **** } MPU_Type;
1237:CMSIS/Core/Include/core_cm4.h **** 
1238:CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1239:CMSIS/Core/Include/core_cm4.h **** 
1240:CMSIS/Core/Include/core_cm4.h **** /* MPU Type Register Definitions */
1241:CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1242:CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1243:CMSIS/Core/Include/core_cm4.h **** 
1244:CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1245:CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1246:CMSIS/Core/Include/core_cm4.h **** 
1247:CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1248:CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1249:CMSIS/Core/Include/core_cm4.h **** 
1250:CMSIS/Core/Include/core_cm4.h **** /* MPU Control Register Definitions */
1251:CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1252:CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1253:CMSIS/Core/Include/core_cm4.h **** 
1254:CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1255:CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1256:CMSIS/Core/Include/core_cm4.h **** 
1257:CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1258:CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1259:CMSIS/Core/Include/core_cm4.h **** 
1260:CMSIS/Core/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1261:CMSIS/Core/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1262:CMSIS/Core/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1263:CMSIS/Core/Include/core_cm4.h **** 
1264:CMSIS/Core/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1265:CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1266:CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1267:CMSIS/Core/Include/core_cm4.h **** 
1268:CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1269:CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1270:CMSIS/Core/Include/core_cm4.h **** 
1271:CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1272:CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1273:CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 27


1274:CMSIS/Core/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1275:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1276:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1277:CMSIS/Core/Include/core_cm4.h **** 
1278:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1279:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1280:CMSIS/Core/Include/core_cm4.h **** 
1281:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1282:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1283:CMSIS/Core/Include/core_cm4.h **** 
1284:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1285:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1286:CMSIS/Core/Include/core_cm4.h **** 
1287:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1288:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1289:CMSIS/Core/Include/core_cm4.h **** 
1290:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1291:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1292:CMSIS/Core/Include/core_cm4.h **** 
1293:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1294:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1295:CMSIS/Core/Include/core_cm4.h **** 
1296:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1297:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1298:CMSIS/Core/Include/core_cm4.h **** 
1299:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1300:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1301:CMSIS/Core/Include/core_cm4.h **** 
1302:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1303:CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1304:CMSIS/Core/Include/core_cm4.h **** 
1305:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1306:CMSIS/Core/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1307:CMSIS/Core/Include/core_cm4.h **** 
1308:CMSIS/Core/Include/core_cm4.h **** 
1309:CMSIS/Core/Include/core_cm4.h **** /**
1310:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1311:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1312:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1313:CMSIS/Core/Include/core_cm4.h ****   @{
1314:CMSIS/Core/Include/core_cm4.h ****  */
1315:CMSIS/Core/Include/core_cm4.h **** 
1316:CMSIS/Core/Include/core_cm4.h **** /**
1317:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1318:CMSIS/Core/Include/core_cm4.h ****  */
1319:CMSIS/Core/Include/core_cm4.h **** typedef struct
1320:CMSIS/Core/Include/core_cm4.h **** {
1321:CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1322:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1323:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1324:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1325:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1326:CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1327:CMSIS/Core/Include/core_cm4.h **** } FPU_Type;
1328:CMSIS/Core/Include/core_cm4.h **** 
1329:CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1330:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 28


1331:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1332:CMSIS/Core/Include/core_cm4.h **** 
1333:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1334:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1335:CMSIS/Core/Include/core_cm4.h **** 
1336:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1337:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1338:CMSIS/Core/Include/core_cm4.h **** 
1339:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1340:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1341:CMSIS/Core/Include/core_cm4.h **** 
1342:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1343:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1344:CMSIS/Core/Include/core_cm4.h **** 
1345:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1346:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1347:CMSIS/Core/Include/core_cm4.h **** 
1348:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1349:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1350:CMSIS/Core/Include/core_cm4.h **** 
1351:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1352:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1353:CMSIS/Core/Include/core_cm4.h **** 
1354:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1355:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1356:CMSIS/Core/Include/core_cm4.h **** 
1357:CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1358:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1359:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1360:CMSIS/Core/Include/core_cm4.h **** 
1361:CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1362:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1363:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1364:CMSIS/Core/Include/core_cm4.h **** 
1365:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1366:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1367:CMSIS/Core/Include/core_cm4.h **** 
1368:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1369:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1370:CMSIS/Core/Include/core_cm4.h **** 
1371:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1372:CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1373:CMSIS/Core/Include/core_cm4.h **** 
1374:CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1375:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1376:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1377:CMSIS/Core/Include/core_cm4.h **** 
1378:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1379:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1380:CMSIS/Core/Include/core_cm4.h **** 
1381:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1382:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1383:CMSIS/Core/Include/core_cm4.h **** 
1384:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1385:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1386:CMSIS/Core/Include/core_cm4.h **** 
1387:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 29


1388:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1389:CMSIS/Core/Include/core_cm4.h **** 
1390:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1391:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1392:CMSIS/Core/Include/core_cm4.h **** 
1393:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1394:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1395:CMSIS/Core/Include/core_cm4.h **** 
1396:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1397:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1398:CMSIS/Core/Include/core_cm4.h **** 
1399:CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1400:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1401:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1402:CMSIS/Core/Include/core_cm4.h **** 
1403:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1404:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1405:CMSIS/Core/Include/core_cm4.h **** 
1406:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1407:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1408:CMSIS/Core/Include/core_cm4.h **** 
1409:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1410:CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1411:CMSIS/Core/Include/core_cm4.h **** 
1412:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1413:CMSIS/Core/Include/core_cm4.h **** 
1414:CMSIS/Core/Include/core_cm4.h **** 
1415:CMSIS/Core/Include/core_cm4.h **** /**
1416:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1417:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1418:CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1419:CMSIS/Core/Include/core_cm4.h ****   @{
1420:CMSIS/Core/Include/core_cm4.h ****  */
1421:CMSIS/Core/Include/core_cm4.h **** 
1422:CMSIS/Core/Include/core_cm4.h **** /**
1423:CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1424:CMSIS/Core/Include/core_cm4.h ****  */
1425:CMSIS/Core/Include/core_cm4.h **** typedef struct
1426:CMSIS/Core/Include/core_cm4.h **** {
1427:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1428:CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1429:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1430:CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1431:CMSIS/Core/Include/core_cm4.h **** } CoreDebug_Type;
1432:CMSIS/Core/Include/core_cm4.h **** 
1433:CMSIS/Core/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1434:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1435:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1436:CMSIS/Core/Include/core_cm4.h **** 
1437:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1438:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1439:CMSIS/Core/Include/core_cm4.h **** 
1440:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1441:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1442:CMSIS/Core/Include/core_cm4.h **** 
1443:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1444:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 30


1445:CMSIS/Core/Include/core_cm4.h **** 
1446:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1447:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1448:CMSIS/Core/Include/core_cm4.h **** 
1449:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1450:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1451:CMSIS/Core/Include/core_cm4.h **** 
1452:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1453:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1454:CMSIS/Core/Include/core_cm4.h **** 
1455:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1456:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1457:CMSIS/Core/Include/core_cm4.h **** 
1458:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1459:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1460:CMSIS/Core/Include/core_cm4.h **** 
1461:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1462:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1463:CMSIS/Core/Include/core_cm4.h **** 
1464:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1465:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1466:CMSIS/Core/Include/core_cm4.h **** 
1467:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1468:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1469:CMSIS/Core/Include/core_cm4.h **** 
1470:CMSIS/Core/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1471:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1472:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1473:CMSIS/Core/Include/core_cm4.h **** 
1474:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1475:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1476:CMSIS/Core/Include/core_cm4.h **** 
1477:CMSIS/Core/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1478:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1479:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1480:CMSIS/Core/Include/core_cm4.h **** 
1481:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1482:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1483:CMSIS/Core/Include/core_cm4.h **** 
1484:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1485:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1486:CMSIS/Core/Include/core_cm4.h **** 
1487:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1488:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1489:CMSIS/Core/Include/core_cm4.h **** 
1490:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1491:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1492:CMSIS/Core/Include/core_cm4.h **** 
1493:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1494:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1495:CMSIS/Core/Include/core_cm4.h **** 
1496:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1497:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1498:CMSIS/Core/Include/core_cm4.h **** 
1499:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1500:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1501:CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 31


1502:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1503:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1504:CMSIS/Core/Include/core_cm4.h **** 
1505:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1506:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1507:CMSIS/Core/Include/core_cm4.h **** 
1508:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1509:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1510:CMSIS/Core/Include/core_cm4.h **** 
1511:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1512:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1513:CMSIS/Core/Include/core_cm4.h **** 
1514:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1515:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1516:CMSIS/Core/Include/core_cm4.h **** 
1517:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1518:CMSIS/Core/Include/core_cm4.h **** 
1519:CMSIS/Core/Include/core_cm4.h **** 
1520:CMSIS/Core/Include/core_cm4.h **** /**
1521:CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1522:CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1523:CMSIS/Core/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1524:CMSIS/Core/Include/core_cm4.h ****   @{
1525:CMSIS/Core/Include/core_cm4.h ****  */
1526:CMSIS/Core/Include/core_cm4.h **** 
1527:CMSIS/Core/Include/core_cm4.h **** /**
1528:CMSIS/Core/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1529:CMSIS/Core/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1530:CMSIS/Core/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1531:CMSIS/Core/Include/core_cm4.h ****   \return           Masked and shifted value.
1532:CMSIS/Core/Include/core_cm4.h **** */
1533:CMSIS/Core/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1534:CMSIS/Core/Include/core_cm4.h **** 
1535:CMSIS/Core/Include/core_cm4.h **** /**
1536:CMSIS/Core/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1537:CMSIS/Core/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:CMSIS/Core/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1539:CMSIS/Core/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1540:CMSIS/Core/Include/core_cm4.h **** */
1541:CMSIS/Core/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1542:CMSIS/Core/Include/core_cm4.h **** 
1543:CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1544:CMSIS/Core/Include/core_cm4.h **** 
1545:CMSIS/Core/Include/core_cm4.h **** 
1546:CMSIS/Core/Include/core_cm4.h **** /**
1547:CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1548:CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1549:CMSIS/Core/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1550:CMSIS/Core/Include/core_cm4.h ****   @{
1551:CMSIS/Core/Include/core_cm4.h ****  */
1552:CMSIS/Core/Include/core_cm4.h **** 
1553:CMSIS/Core/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1554:CMSIS/Core/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1555:CMSIS/Core/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1556:CMSIS/Core/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1557:CMSIS/Core/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1558:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 32


1559:CMSIS/Core/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1560:CMSIS/Core/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1561:CMSIS/Core/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1562:CMSIS/Core/Include/core_cm4.h **** 
1563:CMSIS/Core/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1564:CMSIS/Core/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1565:CMSIS/Core/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1566:CMSIS/Core/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1567:CMSIS/Core/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1568:CMSIS/Core/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1569:CMSIS/Core/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1570:CMSIS/Core/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1571:CMSIS/Core/Include/core_cm4.h **** 
1572:CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1573:CMSIS/Core/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1574:CMSIS/Core/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1575:CMSIS/Core/Include/core_cm4.h **** #endif
1576:CMSIS/Core/Include/core_cm4.h **** 
1577:CMSIS/Core/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1578:CMSIS/Core/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1579:CMSIS/Core/Include/core_cm4.h **** 
1580:CMSIS/Core/Include/core_cm4.h **** /*@} */
1581:CMSIS/Core/Include/core_cm4.h **** 
1582:CMSIS/Core/Include/core_cm4.h **** 
1583:CMSIS/Core/Include/core_cm4.h **** 
1584:CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
1585:CMSIS/Core/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1586:CMSIS/Core/Include/core_cm4.h ****   Core Function Interface contains:
1587:CMSIS/Core/Include/core_cm4.h ****   - Core NVIC Functions
1588:CMSIS/Core/Include/core_cm4.h ****   - Core SysTick Functions
1589:CMSIS/Core/Include/core_cm4.h ****   - Core Debug Functions
1590:CMSIS/Core/Include/core_cm4.h ****   - Core Register Access Functions
1591:CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
1592:CMSIS/Core/Include/core_cm4.h **** /**
1593:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1594:CMSIS/Core/Include/core_cm4.h **** */
1595:CMSIS/Core/Include/core_cm4.h **** 
1596:CMSIS/Core/Include/core_cm4.h **** 
1597:CMSIS/Core/Include/core_cm4.h **** 
1598:CMSIS/Core/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1599:CMSIS/Core/Include/core_cm4.h **** /**
1600:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1601:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1602:CMSIS/Core/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1603:CMSIS/Core/Include/core_cm4.h ****   @{
1604:CMSIS/Core/Include/core_cm4.h ****  */
1605:CMSIS/Core/Include/core_cm4.h **** 
1606:CMSIS/Core/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1607:CMSIS/Core/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:CMSIS/Core/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1609:CMSIS/Core/Include/core_cm4.h ****   #endif
1610:CMSIS/Core/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1611:CMSIS/Core/Include/core_cm4.h **** #else
1612:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1613:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1614:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1615:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 33


1616:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1617:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1618:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1619:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1620:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1621:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1622:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1623:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1624:CMSIS/Core/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1625:CMSIS/Core/Include/core_cm4.h **** 
1626:CMSIS/Core/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1627:CMSIS/Core/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:CMSIS/Core/Include/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1629:CMSIS/Core/Include/core_cm4.h ****   #endif
1630:CMSIS/Core/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1631:CMSIS/Core/Include/core_cm4.h **** #else
1632:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1633:CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1634:CMSIS/Core/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1635:CMSIS/Core/Include/core_cm4.h **** 
1636:CMSIS/Core/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1637:CMSIS/Core/Include/core_cm4.h **** 
1638:CMSIS/Core/Include/core_cm4.h **** 
1639:CMSIS/Core/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1640:CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1641:CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1642:CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1643:CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1644:CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1645:CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1646:CMSIS/Core/Include/core_cm4.h **** 
1647:CMSIS/Core/Include/core_cm4.h **** 
1648:CMSIS/Core/Include/core_cm4.h **** /**
1649:CMSIS/Core/Include/core_cm4.h ****   \brief   Set Priority Grouping
1650:CMSIS/Core/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1651:CMSIS/Core/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1652:CMSIS/Core/Include/core_cm4.h ****            Only values from 0..7 are used.
1653:CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1654:CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1655:CMSIS/Core/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1656:CMSIS/Core/Include/core_cm4.h ****  */
1657:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
  56              		.loc 2 1657 22 view .LVU4
  57              	.LBB39:
1658:CMSIS/Core/Include/core_cm4.h **** {
1659:CMSIS/Core/Include/core_cm4.h ****   uint32_t reg_value;
  58              		.loc 2 1659 3 view .LVU5
1660:CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  59              		.loc 2 1660 3 view .LVU6
1661:CMSIS/Core/Include/core_cm4.h **** 
1662:CMSIS/Core/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  60              		.loc 2 1662 3 view .LVU7
  61              		.loc 2 1662 14 is_stmt 0 view .LVU8
  62 000a 0A4A     		ldr	r2, .L5
  63 000c D368     		ldr	r3, [r2, #12]
  64              	.LVL2:
1663:CMSIS/Core/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 34


  65              		.loc 2 1663 3 is_stmt 1 view .LVU9
  66              		.loc 2 1663 13 is_stmt 0 view .LVU10
  67 000e 23F4E063 		bic	r3, r3, #1792
  68              	.LVL3:
  69              		.loc 2 1663 13 view .LVU11
  70 0012 1B04     		lsls	r3, r3, #16
  71 0014 1B0C     		lsrs	r3, r3, #16
  72              	.LVL4:
1664:CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  73              		.loc 2 1664 3 is_stmt 1 view .LVU12
1665:CMSIS/Core/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1666:CMSIS/Core/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
  74              		.loc 2 1666 35 is_stmt 0 view .LVU13
  75 0016 2402     		lsls	r4, r4, #8
  76              	.LVL5:
  77              		.loc 2 1666 35 view .LVU14
  78 0018 04F4E064 		and	r4, r4, #1792
1665:CMSIS/Core/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
  79              		.loc 2 1665 62 view .LVU15
  80 001c 2343     		orrs	r3, r3, r4
  81              	.LVL6:
1664:CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  82              		.loc 2 1664 14 view .LVU16
  83 001e 43F0BF63 		orr	r3, r3, #100139008
  84 0022 43F40033 		orr	r3, r3, #131072
  85              	.LVL7:
1667:CMSIS/Core/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  86              		.loc 2 1667 3 is_stmt 1 view .LVU17
  87              		.loc 2 1667 14 is_stmt 0 view .LVU18
  88 0026 D360     		str	r3, [r2, #12]
  89              	.LVL8:
  90              		.loc 2 1667 14 view .LVU19
  91              	.LBE39:
  92              	.LBE38:
 150:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
  93              		.loc 1 150 1 view .LVU20
  94 0028 10BD     		pop	{r4, pc}
  95              	.LVL9:
  96              	.L4:
 146:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
  97              		.loc 1 146 3 discriminator 1 view .LVU21
  98 002a 9221     		movs	r1, #146
  99 002c 0248     		ldr	r0, .L5+4
 100              	.LVL10:
 146:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 101              		.loc 1 146 3 discriminator 1 view .LVU22
 102 002e FFF7FEFF 		bl	assert_failed
 103              	.LVL11:
 104 0032 EAE7     		b	.L2
 105              	.L6:
 106              		.align	2
 107              	.L5:
 108 0034 00ED00E0 		.word	-536810240
 109 0038 00000000 		.word	.LC0
 110              		.cfi_endproc
 111              	.LFE130:
 113              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 35


 114              		.align	1
 115              		.global	HAL_NVIC_SetPriority
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 120              	HAL_NVIC_SetPriority:
 121              	.LVL12:
 122              	.LFB131:
 151:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 152:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 153:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 154:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 155:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 156:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 157:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 158:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 159:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 160:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 161:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 162:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
 163:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 164:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 165:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 166:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** { 
 123              		.loc 1 166 1 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		.loc 1 166 1 is_stmt 0 view .LVU24
 128 0000 70B5     		push	{r4, r5, r6, lr}
 129              	.LCFI1:
 130              		.cfi_def_cfa_offset 16
 131              		.cfi_offset 4, -16
 132              		.cfi_offset 5, -12
 133              		.cfi_offset 6, -8
 134              		.cfi_offset 14, -4
 135 0002 0546     		mov	r5, r0
 136 0004 0C46     		mov	r4, r1
 137 0006 1646     		mov	r6, r2
 167:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00U;
 138              		.loc 1 167 3 is_stmt 1 view .LVU25
 139              	.LVL13:
 168:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 169:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 170:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 140              		.loc 1 170 3 view .LVU26
 141 0008 0F2A     		cmp	r2, #15
 142 000a 25D8     		bhi	.L15
 143              	.LVL14:
 144              	.L8:
 171:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 145              		.loc 1 171 3 view .LVU27
 146 000c 0F2C     		cmp	r4, #15
 147 000e 28D8     		bhi	.L16
 148              	.L9:
 172:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 173:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 36


 149              		.loc 1 173 3 view .LVU28
 150              	.LBB46:
 151              	.LBI46:
1668:CMSIS/Core/Include/core_cm4.h **** }
1669:CMSIS/Core/Include/core_cm4.h **** 
1670:CMSIS/Core/Include/core_cm4.h **** 
1671:CMSIS/Core/Include/core_cm4.h **** /**
1672:CMSIS/Core/Include/core_cm4.h ****   \brief   Get Priority Grouping
1673:CMSIS/Core/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1674:CMSIS/Core/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1675:CMSIS/Core/Include/core_cm4.h ****  */
1676:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
 152              		.loc 2 1676 26 view .LVU29
 153              	.LBB47:
1677:CMSIS/Core/Include/core_cm4.h **** {
1678:CMSIS/Core/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 154              		.loc 2 1678 3 view .LVU30
 155              		.loc 2 1678 26 is_stmt 0 view .LVU31
 156 0010 1B4B     		ldr	r3, .L17
 157 0012 DB68     		ldr	r3, [r3, #12]
 158              		.loc 2 1678 11 view .LVU32
 159 0014 C3F30223 		ubfx	r3, r3, #8, #3
 160              	.LVL15:
 161              		.loc 2 1678 11 view .LVU33
 162              	.LBE47:
 163              	.LBE46:
 174:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 175:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 164              		.loc 1 175 3 is_stmt 1 view .LVU34
 165              	.LBB48:
 166              	.LBI48:
1679:CMSIS/Core/Include/core_cm4.h **** }
1680:CMSIS/Core/Include/core_cm4.h **** 
1681:CMSIS/Core/Include/core_cm4.h **** 
1682:CMSIS/Core/Include/core_cm4.h **** /**
1683:CMSIS/Core/Include/core_cm4.h ****   \brief   Enable Interrupt
1684:CMSIS/Core/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1685:CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1686:CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1687:CMSIS/Core/Include/core_cm4.h ****  */
1688:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1689:CMSIS/Core/Include/core_cm4.h **** {
1690:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1691:CMSIS/Core/Include/core_cm4.h ****   {
1692:CMSIS/Core/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1693:CMSIS/Core/Include/core_cm4.h ****   }
1694:CMSIS/Core/Include/core_cm4.h **** }
1695:CMSIS/Core/Include/core_cm4.h **** 
1696:CMSIS/Core/Include/core_cm4.h **** 
1697:CMSIS/Core/Include/core_cm4.h **** /**
1698:CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1699:CMSIS/Core/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1700:CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1701:CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1702:CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1703:CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1704:CMSIS/Core/Include/core_cm4.h ****  */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 37


1705:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1706:CMSIS/Core/Include/core_cm4.h **** {
1707:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1708:CMSIS/Core/Include/core_cm4.h ****   {
1709:CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1710:CMSIS/Core/Include/core_cm4.h ****   }
1711:CMSIS/Core/Include/core_cm4.h ****   else
1712:CMSIS/Core/Include/core_cm4.h ****   {
1713:CMSIS/Core/Include/core_cm4.h ****     return(0U);
1714:CMSIS/Core/Include/core_cm4.h ****   }
1715:CMSIS/Core/Include/core_cm4.h **** }
1716:CMSIS/Core/Include/core_cm4.h **** 
1717:CMSIS/Core/Include/core_cm4.h **** 
1718:CMSIS/Core/Include/core_cm4.h **** /**
1719:CMSIS/Core/Include/core_cm4.h ****   \brief   Disable Interrupt
1720:CMSIS/Core/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1721:CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1722:CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1723:CMSIS/Core/Include/core_cm4.h ****  */
1724:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1725:CMSIS/Core/Include/core_cm4.h **** {
1726:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1727:CMSIS/Core/Include/core_cm4.h ****   {
1728:CMSIS/Core/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1729:CMSIS/Core/Include/core_cm4.h ****     __DSB();
1730:CMSIS/Core/Include/core_cm4.h ****     __ISB();
1731:CMSIS/Core/Include/core_cm4.h ****   }
1732:CMSIS/Core/Include/core_cm4.h **** }
1733:CMSIS/Core/Include/core_cm4.h **** 
1734:CMSIS/Core/Include/core_cm4.h **** 
1735:CMSIS/Core/Include/core_cm4.h **** /**
1736:CMSIS/Core/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1737:CMSIS/Core/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1738:CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1739:CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1740:CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1741:CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1742:CMSIS/Core/Include/core_cm4.h ****  */
1743:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1744:CMSIS/Core/Include/core_cm4.h **** {
1745:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1746:CMSIS/Core/Include/core_cm4.h ****   {
1747:CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1748:CMSIS/Core/Include/core_cm4.h ****   }
1749:CMSIS/Core/Include/core_cm4.h ****   else
1750:CMSIS/Core/Include/core_cm4.h ****   {
1751:CMSIS/Core/Include/core_cm4.h ****     return(0U);
1752:CMSIS/Core/Include/core_cm4.h ****   }
1753:CMSIS/Core/Include/core_cm4.h **** }
1754:CMSIS/Core/Include/core_cm4.h **** 
1755:CMSIS/Core/Include/core_cm4.h **** 
1756:CMSIS/Core/Include/core_cm4.h **** /**
1757:CMSIS/Core/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1758:CMSIS/Core/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1759:CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1760:CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1761:CMSIS/Core/Include/core_cm4.h ****  */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 38


1762:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1763:CMSIS/Core/Include/core_cm4.h **** {
1764:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1765:CMSIS/Core/Include/core_cm4.h ****   {
1766:CMSIS/Core/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1767:CMSIS/Core/Include/core_cm4.h ****   }
1768:CMSIS/Core/Include/core_cm4.h **** }
1769:CMSIS/Core/Include/core_cm4.h **** 
1770:CMSIS/Core/Include/core_cm4.h **** 
1771:CMSIS/Core/Include/core_cm4.h **** /**
1772:CMSIS/Core/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1773:CMSIS/Core/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1774:CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1775:CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1776:CMSIS/Core/Include/core_cm4.h ****  */
1777:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1778:CMSIS/Core/Include/core_cm4.h **** {
1779:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1780:CMSIS/Core/Include/core_cm4.h ****   {
1781:CMSIS/Core/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1782:CMSIS/Core/Include/core_cm4.h ****   }
1783:CMSIS/Core/Include/core_cm4.h **** }
1784:CMSIS/Core/Include/core_cm4.h **** 
1785:CMSIS/Core/Include/core_cm4.h **** 
1786:CMSIS/Core/Include/core_cm4.h **** /**
1787:CMSIS/Core/Include/core_cm4.h ****   \brief   Get Active Interrupt
1788:CMSIS/Core/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1789:CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1790:CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1791:CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1792:CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1793:CMSIS/Core/Include/core_cm4.h ****  */
1794:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1795:CMSIS/Core/Include/core_cm4.h **** {
1796:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1797:CMSIS/Core/Include/core_cm4.h ****   {
1798:CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1799:CMSIS/Core/Include/core_cm4.h ****   }
1800:CMSIS/Core/Include/core_cm4.h ****   else
1801:CMSIS/Core/Include/core_cm4.h ****   {
1802:CMSIS/Core/Include/core_cm4.h ****     return(0U);
1803:CMSIS/Core/Include/core_cm4.h ****   }
1804:CMSIS/Core/Include/core_cm4.h **** }
1805:CMSIS/Core/Include/core_cm4.h **** 
1806:CMSIS/Core/Include/core_cm4.h **** 
1807:CMSIS/Core/Include/core_cm4.h **** /**
1808:CMSIS/Core/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1809:CMSIS/Core/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1810:CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1811:CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1812:CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1813:CMSIS/Core/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1814:CMSIS/Core/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1815:CMSIS/Core/Include/core_cm4.h ****  */
1816:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1817:CMSIS/Core/Include/core_cm4.h **** {
1818:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 39


1819:CMSIS/Core/Include/core_cm4.h ****   {
1820:CMSIS/Core/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1821:CMSIS/Core/Include/core_cm4.h ****   }
1822:CMSIS/Core/Include/core_cm4.h ****   else
1823:CMSIS/Core/Include/core_cm4.h ****   {
1824:CMSIS/Core/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1825:CMSIS/Core/Include/core_cm4.h ****   }
1826:CMSIS/Core/Include/core_cm4.h **** }
1827:CMSIS/Core/Include/core_cm4.h **** 
1828:CMSIS/Core/Include/core_cm4.h **** 
1829:CMSIS/Core/Include/core_cm4.h **** /**
1830:CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1831:CMSIS/Core/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1832:CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1833:CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1834:CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1835:CMSIS/Core/Include/core_cm4.h ****   \return             Interrupt Priority.
1836:CMSIS/Core/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1837:CMSIS/Core/Include/core_cm4.h ****  */
1838:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1839:CMSIS/Core/Include/core_cm4.h **** {
1840:CMSIS/Core/Include/core_cm4.h **** 
1841:CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1842:CMSIS/Core/Include/core_cm4.h ****   {
1843:CMSIS/Core/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1844:CMSIS/Core/Include/core_cm4.h ****   }
1845:CMSIS/Core/Include/core_cm4.h ****   else
1846:CMSIS/Core/Include/core_cm4.h ****   {
1847:CMSIS/Core/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1848:CMSIS/Core/Include/core_cm4.h ****   }
1849:CMSIS/Core/Include/core_cm4.h **** }
1850:CMSIS/Core/Include/core_cm4.h **** 
1851:CMSIS/Core/Include/core_cm4.h **** 
1852:CMSIS/Core/Include/core_cm4.h **** /**
1853:CMSIS/Core/Include/core_cm4.h ****   \brief   Encode Priority
1854:CMSIS/Core/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1855:CMSIS/Core/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1856:CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1857:CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1858:CMSIS/Core/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1859:CMSIS/Core/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1860:CMSIS/Core/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1861:CMSIS/Core/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1862:CMSIS/Core/Include/core_cm4.h ****  */
1863:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 167              		.loc 2 1863 26 view .LVU35
 168              	.LBB49:
1864:CMSIS/Core/Include/core_cm4.h **** {
1865:CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 169              		.loc 2 1865 3 view .LVU36
1866:CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 170              		.loc 2 1866 3 view .LVU37
1867:CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 171              		.loc 2 1867 3 view .LVU38
1868:CMSIS/Core/Include/core_cm4.h **** 
1869:CMSIS/Core/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 172              		.loc 2 1869 3 view .LVU39
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 40


 173              		.loc 2 1869 31 is_stmt 0 view .LVU40
 174 0018 C3F10701 		rsb	r1, r3, #7
 175              		.loc 2 1869 23 view .LVU41
 176 001c 0429     		cmp	r1, #4
 177 001e 28BF     		it	cs
 178 0020 0421     		movcs	r1, #4
 179              	.LVL16:
1870:CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 180              		.loc 2 1870 3 is_stmt 1 view .LVU42
 181              		.loc 2 1870 44 is_stmt 0 view .LVU43
 182 0022 1A1D     		adds	r2, r3, #4
 183              		.loc 2 1870 109 view .LVU44
 184 0024 062A     		cmp	r2, #6
 185 0026 21D9     		bls	.L13
 186 0028 033B     		subs	r3, r3, #3
 187              	.LVL17:
 188              	.L10:
1871:CMSIS/Core/Include/core_cm4.h **** 
1872:CMSIS/Core/Include/core_cm4.h ****   return (
 189              		.loc 2 1872 3 is_stmt 1 view .LVU45
1873:CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 190              		.loc 2 1873 30 is_stmt 0 view .LVU46
 191 002a 4FF0FF32 		mov	r2, #-1
 192              	.LVL18:
 193              		.loc 2 1873 30 view .LVU47
 194 002e 02FA01F1 		lsl	r1, r2, r1
 195              	.LVL19:
 196              		.loc 2 1873 30 view .LVU48
 197 0032 24EA0104 		bic	r4, r4, r1
 198              	.LVL20:
 199              		.loc 2 1873 82 view .LVU49
 200 0036 9C40     		lsls	r4, r4, r3
1874:CMSIS/Core/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 201              		.loc 2 1874 30 view .LVU50
 202 0038 02FA03F3 		lsl	r3, r2, r3
 203              	.LVL21:
 204              		.loc 2 1874 30 view .LVU51
 205 003c 26EA0306 		bic	r6, r6, r3
 206              	.LVL22:
1873:CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 207              		.loc 2 1873 102 view .LVU52
 208 0040 3443     		orrs	r4, r4, r6
 209              	.LVL23:
1873:CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 210              		.loc 2 1873 102 view .LVU53
 211              	.LBE49:
 212              	.LBE48:
 213              	.LBB51:
 214              	.LBI51:
1816:CMSIS/Core/Include/core_cm4.h **** {
 215              		.loc 2 1816 22 is_stmt 1 view .LVU54
 216              	.LBB52:
1818:CMSIS/Core/Include/core_cm4.h ****   {
 217              		.loc 2 1818 3 view .LVU55
1818:CMSIS/Core/Include/core_cm4.h ****   {
 218              		.loc 2 1818 6 is_stmt 0 view .LVU56
 219 0042 002D     		cmp	r5, #0
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 41


 220 0044 14DB     		blt	.L11
1820:CMSIS/Core/Include/core_cm4.h ****   }
 221              		.loc 2 1820 5 is_stmt 1 view .LVU57
1820:CMSIS/Core/Include/core_cm4.h ****   }
 222              		.loc 2 1820 48 is_stmt 0 view .LVU58
 223 0046 2401     		lsls	r4, r4, #4
 224              	.LVL24:
1820:CMSIS/Core/Include/core_cm4.h ****   }
 225              		.loc 2 1820 48 view .LVU59
 226 0048 E4B2     		uxtb	r4, r4
1820:CMSIS/Core/Include/core_cm4.h ****   }
 227              		.loc 2 1820 46 view .LVU60
 228 004a 05F16045 		add	r5, r5, #-536870912
 229              	.LVL25:
1820:CMSIS/Core/Include/core_cm4.h ****   }
 230              		.loc 2 1820 46 view .LVU61
 231 004e 05F56145 		add	r5, r5, #57600
 232 0052 85F80043 		strb	r4, [r5, #768]
 233              	.L7:
1820:CMSIS/Core/Include/core_cm4.h ****   }
 234              		.loc 2 1820 46 view .LVU62
 235              	.LBE52:
 236              	.LBE51:
 176:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 237              		.loc 1 176 1 view .LVU63
 238 0056 70BD     		pop	{r4, r5, r6, pc}
 239              	.LVL26:
 240              	.L15:
 170:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 241              		.loc 1 170 3 discriminator 1 view .LVU64
 242 0058 AA21     		movs	r1, #170
 243              	.LVL27:
 170:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 244              		.loc 1 170 3 discriminator 1 view .LVU65
 245 005a 0A48     		ldr	r0, .L17+4
 246              	.LVL28:
 170:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 247              		.loc 1 170 3 discriminator 1 view .LVU66
 248 005c FFF7FEFF 		bl	assert_failed
 249              	.LVL29:
 170:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 250              		.loc 1 170 3 discriminator 1 view .LVU67
 251 0060 D4E7     		b	.L8
 252              	.L16:
 171:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 253              		.loc 1 171 3 discriminator 1 view .LVU68
 254 0062 AB21     		movs	r1, #171
 255 0064 0748     		ldr	r0, .L17+4
 256 0066 FFF7FEFF 		bl	assert_failed
 257              	.LVL30:
 258 006a D1E7     		b	.L9
 259              	.LVL31:
 260              	.L13:
 261              	.LBB54:
 262              	.LBB50:
1870:CMSIS/Core/Include/core_cm4.h **** 
 263              		.loc 2 1870 109 view .LVU69
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 42


 264 006c 0023     		movs	r3, #0
 265              	.LVL32:
1870:CMSIS/Core/Include/core_cm4.h **** 
 266              		.loc 2 1870 109 view .LVU70
 267 006e DCE7     		b	.L10
 268              	.LVL33:
 269              	.L11:
1870:CMSIS/Core/Include/core_cm4.h **** 
 270              		.loc 2 1870 109 view .LVU71
 271              	.LBE50:
 272              	.LBE54:
 273              	.LBB55:
 274              	.LBB53:
1824:CMSIS/Core/Include/core_cm4.h ****   }
 275              		.loc 2 1824 5 is_stmt 1 view .LVU72
1824:CMSIS/Core/Include/core_cm4.h ****   }
 276              		.loc 2 1824 32 is_stmt 0 view .LVU73
 277 0070 05F00F05 		and	r5, r5, #15
 278              	.LVL34:
1824:CMSIS/Core/Include/core_cm4.h ****   }
 279              		.loc 2 1824 48 view .LVU74
 280 0074 2401     		lsls	r4, r4, #4
 281              	.LVL35:
1824:CMSIS/Core/Include/core_cm4.h ****   }
 282              		.loc 2 1824 48 view .LVU75
 283 0076 E4B2     		uxtb	r4, r4
1824:CMSIS/Core/Include/core_cm4.h ****   }
 284              		.loc 2 1824 46 view .LVU76
 285 0078 034B     		ldr	r3, .L17+8
 286 007a 5C55     		strb	r4, [r3, r5]
1824:CMSIS/Core/Include/core_cm4.h ****   }
 287              		.loc 2 1824 46 view .LVU77
 288              	.LBE53:
 289              	.LBE55:
 290              		.loc 1 176 1 view .LVU78
 291 007c EBE7     		b	.L7
 292              	.L18:
 293 007e 00BF     		.align	2
 294              	.L17:
 295 0080 00ED00E0 		.word	-536810240
 296 0084 00000000 		.word	.LC0
 297 0088 14ED00E0 		.word	-536810220
 298              		.cfi_endproc
 299              	.LFE131:
 301              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 302              		.align	1
 303              		.global	HAL_NVIC_EnableIRQ
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	HAL_NVIC_EnableIRQ:
 309              	.LVL36:
 310              	.LFB132:
 177:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 178:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 179:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 180:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 43


 181:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         function should be called before. 
 182:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 183:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 184:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 185:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 186:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 187:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 188:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 311              		.loc 1 188 1 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		.loc 1 188 1 is_stmt 0 view .LVU80
 316 0000 10B5     		push	{r4, lr}
 317              	.LCFI2:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 189:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 190:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 321              		.loc 1 190 3 is_stmt 1 view .LVU81
 322 0002 041E     		subs	r4, r0, #0
 323 0004 0ADB     		blt	.L23
 324              	.LVL37:
 325              	.L20:
 191:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 192:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Enable interrupt */
 193:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 326              		.loc 1 193 3 view .LVU82
 327              	.LBB56:
 328              	.LBI56:
1688:CMSIS/Core/Include/core_cm4.h **** {
 329              		.loc 2 1688 22 view .LVU83
 330              	.LBB57:
1690:CMSIS/Core/Include/core_cm4.h ****   {
 331              		.loc 2 1690 3 view .LVU84
1690:CMSIS/Core/Include/core_cm4.h ****   {
 332              		.loc 2 1690 6 is_stmt 0 view .LVU85
 333 0006 002C     		cmp	r4, #0
 334 0008 07DB     		blt	.L19
1692:CMSIS/Core/Include/core_cm4.h ****   }
 335              		.loc 2 1692 5 is_stmt 1 view .LVU86
1692:CMSIS/Core/Include/core_cm4.h ****   }
 336              		.loc 2 1692 81 is_stmt 0 view .LVU87
 337 000a 04F01F02 		and	r2, r4, #31
1692:CMSIS/Core/Include/core_cm4.h ****   }
 338              		.loc 2 1692 34 view .LVU88
 339 000e 6409     		lsrs	r4, r4, #5
 340              	.LVL38:
1692:CMSIS/Core/Include/core_cm4.h ****   }
 341              		.loc 2 1692 45 view .LVU89
 342 0010 0123     		movs	r3, #1
 343 0012 9340     		lsls	r3, r3, r2
1692:CMSIS/Core/Include/core_cm4.h ****   }
 344              		.loc 2 1692 43 view .LVU90
 345 0014 044A     		ldr	r2, .L24
 346 0016 42F82430 		str	r3, [r2, r4, lsl #2]
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 44


 347              	.L19:
1692:CMSIS/Core/Include/core_cm4.h ****   }
 348              		.loc 2 1692 43 view .LVU91
 349              	.LBE57:
 350              	.LBE56:
 194:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 351              		.loc 1 194 1 view .LVU92
 352 001a 10BD     		pop	{r4, pc}
 353              	.LVL39:
 354              	.L23:
 190:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 355              		.loc 1 190 3 discriminator 1 view .LVU93
 356 001c BE21     		movs	r1, #190
 357 001e 0348     		ldr	r0, .L24+4
 358              	.LVL40:
 190:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 359              		.loc 1 190 3 discriminator 1 view .LVU94
 360 0020 FFF7FEFF 		bl	assert_failed
 361              	.LVL41:
 362 0024 EFE7     		b	.L20
 363              	.L25:
 364 0026 00BF     		.align	2
 365              	.L24:
 366 0028 00E100E0 		.word	-536813312
 367 002c 00000000 		.word	.LC0
 368              		.cfi_endproc
 369              	.LFE132:
 371              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 372              		.align	1
 373              		.global	HAL_NVIC_DisableIRQ
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	HAL_NVIC_DisableIRQ:
 379              	.LVL42:
 380              	.LFB133:
 195:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 196:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 197:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 198:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 199:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 200:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 201:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 202:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 203:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 204:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 381              		.loc 1 204 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		.loc 1 204 1 is_stmt 0 view .LVU96
 386 0000 10B5     		push	{r4, lr}
 387              	.LCFI3:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 14, -4
 205:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 45


 206:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 391              		.loc 1 206 3 is_stmt 1 view .LVU97
 392 0002 041E     		subs	r4, r0, #0
 393 0004 0FDB     		blt	.L30
 394              	.LVL43:
 395              	.L27:
 207:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 208:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable interrupt */
 209:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 396              		.loc 1 209 3 view .LVU98
 397              	.LBB64:
 398              	.LBI64:
1724:CMSIS/Core/Include/core_cm4.h **** {
 399              		.loc 2 1724 22 view .LVU99
 400              	.LBB65:
1726:CMSIS/Core/Include/core_cm4.h ****   {
 401              		.loc 2 1726 3 view .LVU100
1726:CMSIS/Core/Include/core_cm4.h ****   {
 402              		.loc 2 1726 6 is_stmt 0 view .LVU101
 403 0006 002C     		cmp	r4, #0
 404 0008 0CDB     		blt	.L26
1728:CMSIS/Core/Include/core_cm4.h ****     __DSB();
 405              		.loc 2 1728 5 is_stmt 1 view .LVU102
1728:CMSIS/Core/Include/core_cm4.h ****     __DSB();
 406              		.loc 2 1728 81 is_stmt 0 view .LVU103
 407 000a 04F01F02 		and	r2, r4, #31
1728:CMSIS/Core/Include/core_cm4.h ****     __DSB();
 408              		.loc 2 1728 34 view .LVU104
 409 000e 6409     		lsrs	r4, r4, #5
 410              	.LVL44:
1728:CMSIS/Core/Include/core_cm4.h ****     __DSB();
 411              		.loc 2 1728 45 view .LVU105
 412 0010 0123     		movs	r3, #1
 413 0012 9340     		lsls	r3, r3, r2
1728:CMSIS/Core/Include/core_cm4.h ****     __DSB();
 414              		.loc 2 1728 43 view .LVU106
 415 0014 2034     		adds	r4, r4, #32
 416 0016 064A     		ldr	r2, .L31
 417 0018 42F82430 		str	r3, [r2, r4, lsl #2]
1729:CMSIS/Core/Include/core_cm4.h ****     __ISB();
 418              		.loc 2 1729 5 is_stmt 1 view .LVU107
 419              	.LBB66:
 420              	.LBI66:
 421              		.file 3 "CMSIS/Core/Include/cmsis_gcc.h"
   1:CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 46


  14:CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:CMSIS/Core/Include/cmsis_gcc.h **** 
  25:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:CMSIS/Core/Include/cmsis_gcc.h **** 
  28:CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:CMSIS/Core/Include/cmsis_gcc.h **** 
  34:CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:CMSIS/Core/Include/cmsis_gcc.h **** 
  39:CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 47


  71:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:CMSIS/Core/Include/cmsis_gcc.h **** 
 117:CMSIS/Core/Include/cmsis_gcc.h **** 
 118:CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:CMSIS/Core/Include/cmsis_gcc.h **** 
 124:CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 48


 128:CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:CMSIS/Core/Include/cmsis_gcc.h **** {
 131:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:CMSIS/Core/Include/cmsis_gcc.h **** }
 133:CMSIS/Core/Include/cmsis_gcc.h **** 
 134:CMSIS/Core/Include/cmsis_gcc.h **** 
 135:CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:CMSIS/Core/Include/cmsis_gcc.h **** {
 142:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:CMSIS/Core/Include/cmsis_gcc.h **** }
 144:CMSIS/Core/Include/cmsis_gcc.h **** 
 145:CMSIS/Core/Include/cmsis_gcc.h **** 
 146:CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:CMSIS/Core/Include/cmsis_gcc.h **** {
 153:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:CMSIS/Core/Include/cmsis_gcc.h **** 
 155:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:CMSIS/Core/Include/cmsis_gcc.h **** }
 158:CMSIS/Core/Include/cmsis_gcc.h **** 
 159:CMSIS/Core/Include/cmsis_gcc.h **** 
 160:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:CMSIS/Core/Include/cmsis_gcc.h **** {
 168:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:CMSIS/Core/Include/cmsis_gcc.h **** 
 170:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:CMSIS/Core/Include/cmsis_gcc.h **** }
 173:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:CMSIS/Core/Include/cmsis_gcc.h **** 
 175:CMSIS/Core/Include/cmsis_gcc.h **** 
 176:CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:CMSIS/Core/Include/cmsis_gcc.h **** {
 183:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 49


 185:CMSIS/Core/Include/cmsis_gcc.h **** 
 186:CMSIS/Core/Include/cmsis_gcc.h **** 
 187:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:CMSIS/Core/Include/cmsis_gcc.h **** {
 195:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:CMSIS/Core/Include/cmsis_gcc.h **** }
 197:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:CMSIS/Core/Include/cmsis_gcc.h **** 
 199:CMSIS/Core/Include/cmsis_gcc.h **** 
 200:CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:CMSIS/Core/Include/cmsis_gcc.h **** {
 207:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:CMSIS/Core/Include/cmsis_gcc.h **** 
 209:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:CMSIS/Core/Include/cmsis_gcc.h **** }
 212:CMSIS/Core/Include/cmsis_gcc.h **** 
 213:CMSIS/Core/Include/cmsis_gcc.h **** 
 214:CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:CMSIS/Core/Include/cmsis_gcc.h **** {
 221:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:CMSIS/Core/Include/cmsis_gcc.h **** 
 223:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:CMSIS/Core/Include/cmsis_gcc.h **** }
 226:CMSIS/Core/Include/cmsis_gcc.h **** 
 227:CMSIS/Core/Include/cmsis_gcc.h **** 
 228:CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:CMSIS/Core/Include/cmsis_gcc.h **** {
 235:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:CMSIS/Core/Include/cmsis_gcc.h **** 
 237:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:CMSIS/Core/Include/cmsis_gcc.h **** }
 240:CMSIS/Core/Include/cmsis_gcc.h **** 
 241:CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 50


 242:CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:CMSIS/Core/Include/cmsis_gcc.h **** {
 249:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:CMSIS/Core/Include/cmsis_gcc.h **** 
 251:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:CMSIS/Core/Include/cmsis_gcc.h **** }
 254:CMSIS/Core/Include/cmsis_gcc.h **** 
 255:CMSIS/Core/Include/cmsis_gcc.h **** 
 256:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:CMSIS/Core/Include/cmsis_gcc.h **** {
 264:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:CMSIS/Core/Include/cmsis_gcc.h **** 
 266:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:CMSIS/Core/Include/cmsis_gcc.h **** }
 269:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:CMSIS/Core/Include/cmsis_gcc.h **** 
 271:CMSIS/Core/Include/cmsis_gcc.h **** 
 272:CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:CMSIS/Core/Include/cmsis_gcc.h **** {
 279:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:CMSIS/Core/Include/cmsis_gcc.h **** }
 281:CMSIS/Core/Include/cmsis_gcc.h **** 
 282:CMSIS/Core/Include/cmsis_gcc.h **** 
 283:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:CMSIS/Core/Include/cmsis_gcc.h **** {
 291:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:CMSIS/Core/Include/cmsis_gcc.h **** }
 293:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:CMSIS/Core/Include/cmsis_gcc.h **** 
 295:CMSIS/Core/Include/cmsis_gcc.h **** 
 296:CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 51


 299:CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:CMSIS/Core/Include/cmsis_gcc.h **** {
 303:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:CMSIS/Core/Include/cmsis_gcc.h **** 
 305:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:CMSIS/Core/Include/cmsis_gcc.h **** }
 308:CMSIS/Core/Include/cmsis_gcc.h **** 
 309:CMSIS/Core/Include/cmsis_gcc.h **** 
 310:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:CMSIS/Core/Include/cmsis_gcc.h **** {
 318:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:CMSIS/Core/Include/cmsis_gcc.h **** 
 320:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:CMSIS/Core/Include/cmsis_gcc.h **** }
 323:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:CMSIS/Core/Include/cmsis_gcc.h **** 
 325:CMSIS/Core/Include/cmsis_gcc.h **** 
 326:CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:CMSIS/Core/Include/cmsis_gcc.h **** {
 333:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:CMSIS/Core/Include/cmsis_gcc.h **** }
 335:CMSIS/Core/Include/cmsis_gcc.h **** 
 336:CMSIS/Core/Include/cmsis_gcc.h **** 
 337:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:CMSIS/Core/Include/cmsis_gcc.h **** {
 345:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:CMSIS/Core/Include/cmsis_gcc.h **** }
 347:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:CMSIS/Core/Include/cmsis_gcc.h **** 
 349:CMSIS/Core/Include/cmsis_gcc.h **** 
 350:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 52


 356:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:CMSIS/Core/Include/cmsis_gcc.h **** {
 358:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:CMSIS/Core/Include/cmsis_gcc.h **** 
 360:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:CMSIS/Core/Include/cmsis_gcc.h **** }
 363:CMSIS/Core/Include/cmsis_gcc.h **** 
 364:CMSIS/Core/Include/cmsis_gcc.h **** 
 365:CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:CMSIS/Core/Include/cmsis_gcc.h **** {
 372:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:CMSIS/Core/Include/cmsis_gcc.h **** }
 374:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:CMSIS/Core/Include/cmsis_gcc.h **** 
 376:CMSIS/Core/Include/cmsis_gcc.h **** 
 377:CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:CMSIS/Core/Include/cmsis_gcc.h **** {
 384:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:CMSIS/Core/Include/cmsis_gcc.h **** 
 386:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:CMSIS/Core/Include/cmsis_gcc.h **** }
 389:CMSIS/Core/Include/cmsis_gcc.h **** 
 390:CMSIS/Core/Include/cmsis_gcc.h **** 
 391:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:CMSIS/Core/Include/cmsis_gcc.h **** {
 399:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:CMSIS/Core/Include/cmsis_gcc.h **** 
 401:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:CMSIS/Core/Include/cmsis_gcc.h **** }
 404:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:CMSIS/Core/Include/cmsis_gcc.h **** 
 406:CMSIS/Core/Include/cmsis_gcc.h **** 
 407:CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 53


 413:CMSIS/Core/Include/cmsis_gcc.h **** {
 414:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:CMSIS/Core/Include/cmsis_gcc.h **** }
 416:CMSIS/Core/Include/cmsis_gcc.h **** 
 417:CMSIS/Core/Include/cmsis_gcc.h **** 
 418:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:CMSIS/Core/Include/cmsis_gcc.h **** {
 426:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:CMSIS/Core/Include/cmsis_gcc.h **** }
 428:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:CMSIS/Core/Include/cmsis_gcc.h **** 
 430:CMSIS/Core/Include/cmsis_gcc.h **** 
 431:CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:CMSIS/Core/Include/cmsis_gcc.h **** {
 441:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:CMSIS/Core/Include/cmsis_gcc.h **** }
 443:CMSIS/Core/Include/cmsis_gcc.h **** 
 444:CMSIS/Core/Include/cmsis_gcc.h **** 
 445:CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:CMSIS/Core/Include/cmsis_gcc.h **** {
 452:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:CMSIS/Core/Include/cmsis_gcc.h **** }
 454:CMSIS/Core/Include/cmsis_gcc.h **** 
 455:CMSIS/Core/Include/cmsis_gcc.h **** 
 456:CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:CMSIS/Core/Include/cmsis_gcc.h **** {
 463:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:CMSIS/Core/Include/cmsis_gcc.h **** 
 465:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:CMSIS/Core/Include/cmsis_gcc.h **** }
 468:CMSIS/Core/Include/cmsis_gcc.h **** 
 469:CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 54


 470:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:CMSIS/Core/Include/cmsis_gcc.h **** {
 478:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:CMSIS/Core/Include/cmsis_gcc.h **** 
 480:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:CMSIS/Core/Include/cmsis_gcc.h **** }
 483:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:CMSIS/Core/Include/cmsis_gcc.h **** 
 485:CMSIS/Core/Include/cmsis_gcc.h **** 
 486:CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:CMSIS/Core/Include/cmsis_gcc.h **** {
 493:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:CMSIS/Core/Include/cmsis_gcc.h **** }
 495:CMSIS/Core/Include/cmsis_gcc.h **** 
 496:CMSIS/Core/Include/cmsis_gcc.h **** 
 497:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:CMSIS/Core/Include/cmsis_gcc.h **** /**
 499:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:CMSIS/Core/Include/cmsis_gcc.h ****  */
 503:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:CMSIS/Core/Include/cmsis_gcc.h **** {
 505:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:CMSIS/Core/Include/cmsis_gcc.h **** }
 507:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 508:CMSIS/Core/Include/cmsis_gcc.h **** 
 509:CMSIS/Core/Include/cmsis_gcc.h **** 
 510:CMSIS/Core/Include/cmsis_gcc.h **** /**
 511:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:CMSIS/Core/Include/cmsis_gcc.h ****  */
 516:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:CMSIS/Core/Include/cmsis_gcc.h **** {
 518:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:CMSIS/Core/Include/cmsis_gcc.h **** }
 520:CMSIS/Core/Include/cmsis_gcc.h **** 
 521:CMSIS/Core/Include/cmsis_gcc.h **** 
 522:CMSIS/Core/Include/cmsis_gcc.h **** /**
 523:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 55


 527:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:CMSIS/Core/Include/cmsis_gcc.h **** {
 529:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 530:CMSIS/Core/Include/cmsis_gcc.h **** 
 531:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 533:CMSIS/Core/Include/cmsis_gcc.h **** }
 534:CMSIS/Core/Include/cmsis_gcc.h **** 
 535:CMSIS/Core/Include/cmsis_gcc.h **** 
 536:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:CMSIS/Core/Include/cmsis_gcc.h **** /**
 538:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:CMSIS/Core/Include/cmsis_gcc.h ****  */
 542:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:CMSIS/Core/Include/cmsis_gcc.h **** {
 544:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 545:CMSIS/Core/Include/cmsis_gcc.h **** 
 546:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 548:CMSIS/Core/Include/cmsis_gcc.h **** }
 549:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 550:CMSIS/Core/Include/cmsis_gcc.h **** 
 551:CMSIS/Core/Include/cmsis_gcc.h **** 
 552:CMSIS/Core/Include/cmsis_gcc.h **** /**
 553:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:CMSIS/Core/Include/cmsis_gcc.h ****  */
 557:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:CMSIS/Core/Include/cmsis_gcc.h **** {
 559:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:CMSIS/Core/Include/cmsis_gcc.h **** }
 561:CMSIS/Core/Include/cmsis_gcc.h **** 
 562:CMSIS/Core/Include/cmsis_gcc.h **** 
 563:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:CMSIS/Core/Include/cmsis_gcc.h **** /**
 565:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:CMSIS/Core/Include/cmsis_gcc.h ****  */
 569:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:CMSIS/Core/Include/cmsis_gcc.h **** {
 571:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:CMSIS/Core/Include/cmsis_gcc.h **** }
 573:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 574:CMSIS/Core/Include/cmsis_gcc.h **** 
 575:CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:CMSIS/Core/Include/cmsis_gcc.h **** 
 579:CMSIS/Core/Include/cmsis_gcc.h **** 
 580:CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:CMSIS/Core/Include/cmsis_gcc.h **** 
 583:CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 56


 584:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 588:CMSIS/Core/Include/cmsis_gcc.h ****   
 589:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:CMSIS/Core/Include/cmsis_gcc.h ****  */
 592:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:CMSIS/Core/Include/cmsis_gcc.h **** {
 594:CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 598:CMSIS/Core/Include/cmsis_gcc.h **** #else
 599:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 600:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 602:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 603:CMSIS/Core/Include/cmsis_gcc.h **** }
 604:CMSIS/Core/Include/cmsis_gcc.h **** 
 605:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:CMSIS/Core/Include/cmsis_gcc.h **** /**
 607:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:CMSIS/Core/Include/cmsis_gcc.h **** 
 611:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:CMSIS/Core/Include/cmsis_gcc.h ****  */
 614:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:CMSIS/Core/Include/cmsis_gcc.h **** {
 616:CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 619:CMSIS/Core/Include/cmsis_gcc.h **** #else
 620:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 621:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 623:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 624:CMSIS/Core/Include/cmsis_gcc.h **** }
 625:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 626:CMSIS/Core/Include/cmsis_gcc.h **** 
 627:CMSIS/Core/Include/cmsis_gcc.h **** 
 628:CMSIS/Core/Include/cmsis_gcc.h **** /**
 629:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 633:CMSIS/Core/Include/cmsis_gcc.h ****   
 634:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:CMSIS/Core/Include/cmsis_gcc.h ****  */
 637:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:CMSIS/Core/Include/cmsis_gcc.h **** {
 639:CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 57


 641:CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:CMSIS/Core/Include/cmsis_gcc.h **** #else
 644:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 646:CMSIS/Core/Include/cmsis_gcc.h **** }
 647:CMSIS/Core/Include/cmsis_gcc.h **** 
 648:CMSIS/Core/Include/cmsis_gcc.h **** 
 649:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:CMSIS/Core/Include/cmsis_gcc.h **** 
 655:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:CMSIS/Core/Include/cmsis_gcc.h ****  */
 658:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:CMSIS/Core/Include/cmsis_gcc.h **** {
 660:CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:CMSIS/Core/Include/cmsis_gcc.h **** #else
 664:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 666:CMSIS/Core/Include/cmsis_gcc.h **** }
 667:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 668:CMSIS/Core/Include/cmsis_gcc.h **** 
 669:CMSIS/Core/Include/cmsis_gcc.h **** 
 670:CMSIS/Core/Include/cmsis_gcc.h **** /**
 671:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 675:CMSIS/Core/Include/cmsis_gcc.h **** 
 676:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:CMSIS/Core/Include/cmsis_gcc.h ****  */
 679:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:CMSIS/Core/Include/cmsis_gcc.h **** {
 681:CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 685:CMSIS/Core/Include/cmsis_gcc.h **** #else
 686:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 687:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 689:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 690:CMSIS/Core/Include/cmsis_gcc.h **** }
 691:CMSIS/Core/Include/cmsis_gcc.h **** 
 692:CMSIS/Core/Include/cmsis_gcc.h **** 
 693:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:CMSIS/Core/Include/cmsis_gcc.h **** /**
 695:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 58


 698:CMSIS/Core/Include/cmsis_gcc.h **** 
 699:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:CMSIS/Core/Include/cmsis_gcc.h ****  */
 702:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:CMSIS/Core/Include/cmsis_gcc.h **** {
 704:CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 707:CMSIS/Core/Include/cmsis_gcc.h **** #else
 708:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 709:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 711:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 712:CMSIS/Core/Include/cmsis_gcc.h **** }
 713:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 714:CMSIS/Core/Include/cmsis_gcc.h **** 
 715:CMSIS/Core/Include/cmsis_gcc.h **** 
 716:CMSIS/Core/Include/cmsis_gcc.h **** /**
 717:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 721:CMSIS/Core/Include/cmsis_gcc.h **** 
 722:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:CMSIS/Core/Include/cmsis_gcc.h **** {
 727:CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:CMSIS/Core/Include/cmsis_gcc.h **** #else
 732:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 734:CMSIS/Core/Include/cmsis_gcc.h **** }
 735:CMSIS/Core/Include/cmsis_gcc.h **** 
 736:CMSIS/Core/Include/cmsis_gcc.h **** 
 737:CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:CMSIS/Core/Include/cmsis_gcc.h **** /**
 739:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:CMSIS/Core/Include/cmsis_gcc.h **** 
 743:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:CMSIS/Core/Include/cmsis_gcc.h **** {
 748:CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:CMSIS/Core/Include/cmsis_gcc.h **** #else
 752:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 754:CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 59


 755:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 756:CMSIS/Core/Include/cmsis_gcc.h **** 
 757:CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:CMSIS/Core/Include/cmsis_gcc.h **** 
 760:CMSIS/Core/Include/cmsis_gcc.h **** 
 761:CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:CMSIS/Core/Include/cmsis_gcc.h ****  */
 766:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:CMSIS/Core/Include/cmsis_gcc.h **** {
 768:CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:CMSIS/Core/Include/cmsis_gcc.h **** #else
 776:CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 777:CMSIS/Core/Include/cmsis_gcc.h **** 
 778:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 780:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:CMSIS/Core/Include/cmsis_gcc.h **** #else
 782:CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 783:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 784:CMSIS/Core/Include/cmsis_gcc.h **** }
 785:CMSIS/Core/Include/cmsis_gcc.h **** 
 786:CMSIS/Core/Include/cmsis_gcc.h **** 
 787:CMSIS/Core/Include/cmsis_gcc.h **** /**
 788:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:CMSIS/Core/Include/cmsis_gcc.h **** {
 794:CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:CMSIS/Core/Include/cmsis_gcc.h **** #else
 802:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 804:CMSIS/Core/Include/cmsis_gcc.h **** #else
 805:CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 806:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 807:CMSIS/Core/Include/cmsis_gcc.h **** }
 808:CMSIS/Core/Include/cmsis_gcc.h **** 
 809:CMSIS/Core/Include/cmsis_gcc.h **** 
 810:CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 60


 812:CMSIS/Core/Include/cmsis_gcc.h **** 
 813:CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:CMSIS/Core/Include/cmsis_gcc.h ****   @{
 817:CMSIS/Core/Include/cmsis_gcc.h **** */
 818:CMSIS/Core/Include/cmsis_gcc.h **** 
 819:CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:CMSIS/Core/Include/cmsis_gcc.h **** #else
 827:CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:CMSIS/Core/Include/cmsis_gcc.h **** #endif
 831:CMSIS/Core/Include/cmsis_gcc.h **** 
 832:CMSIS/Core/Include/cmsis_gcc.h **** /**
 833:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 834:CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:CMSIS/Core/Include/cmsis_gcc.h ****  */
 836:CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:CMSIS/Core/Include/cmsis_gcc.h **** 
 838:CMSIS/Core/Include/cmsis_gcc.h **** /**
 839:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:CMSIS/Core/Include/cmsis_gcc.h ****  */
 842:CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:CMSIS/Core/Include/cmsis_gcc.h **** 
 844:CMSIS/Core/Include/cmsis_gcc.h **** 
 845:CMSIS/Core/Include/cmsis_gcc.h **** /**
 846:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:CMSIS/Core/Include/cmsis_gcc.h ****  */
 850:CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:CMSIS/Core/Include/cmsis_gcc.h **** 
 852:CMSIS/Core/Include/cmsis_gcc.h **** 
 853:CMSIS/Core/Include/cmsis_gcc.h **** /**
 854:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 855:CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:CMSIS/Core/Include/cmsis_gcc.h ****  */
 857:CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:CMSIS/Core/Include/cmsis_gcc.h **** 
 859:CMSIS/Core/Include/cmsis_gcc.h **** 
 860:CMSIS/Core/Include/cmsis_gcc.h **** /**
 861:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:CMSIS/Core/Include/cmsis_gcc.h ****  */
 866:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:CMSIS/Core/Include/cmsis_gcc.h **** {
 868:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 61


 869:CMSIS/Core/Include/cmsis_gcc.h **** }
 870:CMSIS/Core/Include/cmsis_gcc.h **** 
 871:CMSIS/Core/Include/cmsis_gcc.h **** 
 872:CMSIS/Core/Include/cmsis_gcc.h **** /**
 873:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:CMSIS/Core/Include/cmsis_gcc.h ****  */
 877:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 422              		.loc 3 877 27 view .LVU108
 423              	.LBB67:
 878:CMSIS/Core/Include/cmsis_gcc.h **** {
 879:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 424              		.loc 3 879 3 view .LVU109
 425              		.syntax unified
 426              	@ 879 "CMSIS/Core/Include/cmsis_gcc.h" 1
 427 001c BFF34F8F 		dsb 0xF
 428              	@ 0 "" 2
 429              		.thumb
 430              		.syntax unified
 431              	.LBE67:
 432              	.LBE66:
1730:CMSIS/Core/Include/core_cm4.h ****   }
 433              		.loc 2 1730 5 view .LVU110
 434              	.LBB68:
 435              	.LBI68:
 866:CMSIS/Core/Include/cmsis_gcc.h **** {
 436              		.loc 3 866 27 view .LVU111
 437              	.LBB69:
 868:CMSIS/Core/Include/cmsis_gcc.h **** }
 438              		.loc 3 868 3 view .LVU112
 439              		.syntax unified
 440              	@ 868 "CMSIS/Core/Include/cmsis_gcc.h" 1
 441 0020 BFF36F8F 		isb 0xF
 442              	@ 0 "" 2
 443              		.thumb
 444              		.syntax unified
 445              	.L26:
 868:CMSIS/Core/Include/cmsis_gcc.h **** }
 446              		.loc 3 868 3 is_stmt 0 view .LVU113
 447              	.LBE69:
 448              	.LBE68:
 449              	.LBE65:
 450              	.LBE64:
 210:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 451              		.loc 1 210 1 view .LVU114
 452 0024 10BD     		pop	{r4, pc}
 453              	.LVL45:
 454              	.L30:
 206:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 455              		.loc 1 206 3 discriminator 1 view .LVU115
 456 0026 CE21     		movs	r1, #206
 457 0028 0248     		ldr	r0, .L31+4
 458              	.LVL46:
 206:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 459              		.loc 1 206 3 discriminator 1 view .LVU116
 460 002a FFF7FEFF 		bl	assert_failed
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 62


 461              	.LVL47:
 462 002e EAE7     		b	.L27
 463              	.L32:
 464              		.align	2
 465              	.L31:
 466 0030 00E100E0 		.word	-536813312
 467 0034 00000000 		.word	.LC0
 468              		.cfi_endproc
 469              	.LFE133:
 471              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 472              		.align	1
 473              		.global	HAL_NVIC_SystemReset
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 478              	HAL_NVIC_SystemReset:
 479              	.LFB134:
 211:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 212:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 213:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 214:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 215:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 216:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 217:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 480              		.loc 1 217 1 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ Volatile: function does not return.
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 218:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* System Reset */
 219:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SystemReset();
 486              		.loc 1 219 3 view .LVU118
 487              	.LBB76:
 488              	.LBI76:
1875:CMSIS/Core/Include/core_cm4.h ****          );
1876:CMSIS/Core/Include/core_cm4.h **** }
1877:CMSIS/Core/Include/core_cm4.h **** 
1878:CMSIS/Core/Include/core_cm4.h **** 
1879:CMSIS/Core/Include/core_cm4.h **** /**
1880:CMSIS/Core/Include/core_cm4.h ****   \brief   Decode Priority
1881:CMSIS/Core/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1882:CMSIS/Core/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1883:CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1884:CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1885:CMSIS/Core/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1886:CMSIS/Core/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1887:CMSIS/Core/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1888:CMSIS/Core/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1889:CMSIS/Core/Include/core_cm4.h ****  */
1890:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1891:CMSIS/Core/Include/core_cm4.h **** {
1892:CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1893:CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1894:CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1895:CMSIS/Core/Include/core_cm4.h **** 
1896:CMSIS/Core/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 63


1897:CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1898:CMSIS/Core/Include/core_cm4.h **** 
1899:CMSIS/Core/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1900:CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1901:CMSIS/Core/Include/core_cm4.h **** }
1902:CMSIS/Core/Include/core_cm4.h **** 
1903:CMSIS/Core/Include/core_cm4.h **** 
1904:CMSIS/Core/Include/core_cm4.h **** /**
1905:CMSIS/Core/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1906:CMSIS/Core/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1907:CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1908:CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1909:CMSIS/Core/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1910:CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1911:CMSIS/Core/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1912:CMSIS/Core/Include/core_cm4.h ****  */
1913:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1914:CMSIS/Core/Include/core_cm4.h **** {
1915:CMSIS/Core/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1916:CMSIS/Core/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1917:CMSIS/Core/Include/core_cm4.h **** }
1918:CMSIS/Core/Include/core_cm4.h **** 
1919:CMSIS/Core/Include/core_cm4.h **** 
1920:CMSIS/Core/Include/core_cm4.h **** /**
1921:CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1922:CMSIS/Core/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1923:CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1924:CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1925:CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1926:CMSIS/Core/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1927:CMSIS/Core/Include/core_cm4.h ****  */
1928:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1929:CMSIS/Core/Include/core_cm4.h **** {
1930:CMSIS/Core/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1931:CMSIS/Core/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1932:CMSIS/Core/Include/core_cm4.h **** }
1933:CMSIS/Core/Include/core_cm4.h **** 
1934:CMSIS/Core/Include/core_cm4.h **** 
1935:CMSIS/Core/Include/core_cm4.h **** /**
1936:CMSIS/Core/Include/core_cm4.h ****   \brief   System Reset
1937:CMSIS/Core/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1938:CMSIS/Core/Include/core_cm4.h ****  */
1939:CMSIS/Core/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 489              		.loc 2 1939 34 view .LVU119
 490              	.LBB77:
1940:CMSIS/Core/Include/core_cm4.h **** {
1941:CMSIS/Core/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 491              		.loc 2 1941 3 view .LVU120
 492              	.LBB78:
 493              	.LBI78:
 877:CMSIS/Core/Include/cmsis_gcc.h **** {
 494              		.loc 3 877 27 view .LVU121
 495              	.LBB79:
 496              		.loc 3 879 3 view .LVU122
 497              		.syntax unified
 498              	@ 879 "CMSIS/Core/Include/cmsis_gcc.h" 1
 499 0000 BFF34F8F 		dsb 0xF
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 64


 500              	@ 0 "" 2
 501              		.thumb
 502              		.syntax unified
 503              	.LBE79:
 504              	.LBE78:
1942:CMSIS/Core/Include/core_cm4.h ****                                                                        buffered write are completed
1943:CMSIS/Core/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 505              		.loc 2 1943 3 view .LVU123
1944:CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 506              		.loc 2 1944 32 is_stmt 0 view .LVU124
 507 0004 0549     		ldr	r1, .L35
 508 0006 CA68     		ldr	r2, [r1, #12]
 509              		.loc 2 1944 40 view .LVU125
 510 0008 02F4E062 		and	r2, r2, #1792
1943:CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 511              		.loc 2 1943 17 view .LVU126
 512 000c 044B     		ldr	r3, .L35+4
 513 000e 1343     		orrs	r3, r3, r2
1943:CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 514              		.loc 2 1943 15 view .LVU127
 515 0010 CB60     		str	r3, [r1, #12]
1945:CMSIS/Core/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1946:CMSIS/Core/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 516              		.loc 2 1946 3 is_stmt 1 view .LVU128
 517              	.LBB80:
 518              	.LBI80:
 877:CMSIS/Core/Include/cmsis_gcc.h **** {
 519              		.loc 3 877 27 view .LVU129
 520              	.LBB81:
 521              		.loc 3 879 3 view .LVU130
 522              		.syntax unified
 523              	@ 879 "CMSIS/Core/Include/cmsis_gcc.h" 1
 524 0012 BFF34F8F 		dsb 0xF
 525              	@ 0 "" 2
 526              		.thumb
 527              		.syntax unified
 528              	.L34:
 529              	.LBE81:
 530              	.LBE80:
1947:CMSIS/Core/Include/core_cm4.h **** 
1948:CMSIS/Core/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 531              		.loc 2 1948 3 view .LVU131
1949:CMSIS/Core/Include/core_cm4.h ****   {
1950:CMSIS/Core/Include/core_cm4.h ****     __NOP();
 532              		.loc 2 1950 5 view .LVU132
 533              		.syntax unified
 534              	@ 1950 "CMSIS/Core/Include/core_cm4.h" 1
 535 0016 00BF     		nop
 536              	@ 0 "" 2
1948:CMSIS/Core/Include/core_cm4.h ****   {
 537              		.loc 2 1948 8 view .LVU133
 538              		.thumb
 539              		.syntax unified
 540 0018 FDE7     		b	.L34
 541              	.L36:
 542 001a 00BF     		.align	2
 543              	.L35:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 65


 544 001c 00ED00E0 		.word	-536810240
 545 0020 0400FA05 		.word	100270084
 546              	.LBE77:
 547              	.LBE76:
 548              		.cfi_endproc
 549              	.LFE134:
 551              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 552              		.align	1
 553              		.global	HAL_SYSTICK_Config
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 558              	HAL_SYSTICK_Config:
 559              	.LVL48:
 560              	.LFB135:
 220:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 221:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 222:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 223:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 224:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 225:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 226:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 227:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                  - 1  Function failed.
 228:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 229:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 230:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 561              		.loc 1 230 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 231:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 566              		.loc 1 231 4 view .LVU135
 567              	.LBB82:
 568              	.LBI82:
1951:CMSIS/Core/Include/core_cm4.h ****   }
1952:CMSIS/Core/Include/core_cm4.h **** }
1953:CMSIS/Core/Include/core_cm4.h **** 
1954:CMSIS/Core/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1955:CMSIS/Core/Include/core_cm4.h **** 
1956:CMSIS/Core/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1957:CMSIS/Core/Include/core_cm4.h **** 
1958:CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1959:CMSIS/Core/Include/core_cm4.h **** 
1960:CMSIS/Core/Include/core_cm4.h **** #include "mpu_armv7.h"
1961:CMSIS/Core/Include/core_cm4.h **** 
1962:CMSIS/Core/Include/core_cm4.h **** #endif
1963:CMSIS/Core/Include/core_cm4.h **** 
1964:CMSIS/Core/Include/core_cm4.h **** 
1965:CMSIS/Core/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1966:CMSIS/Core/Include/core_cm4.h **** /**
1967:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1968:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1969:CMSIS/Core/Include/core_cm4.h ****   \brief    Function that provides FPU type.
1970:CMSIS/Core/Include/core_cm4.h ****   @{
1971:CMSIS/Core/Include/core_cm4.h ****  */
1972:CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 66


1973:CMSIS/Core/Include/core_cm4.h **** /**
1974:CMSIS/Core/Include/core_cm4.h ****   \brief   get FPU type
1975:CMSIS/Core/Include/core_cm4.h ****   \details returns the FPU type
1976:CMSIS/Core/Include/core_cm4.h ****   \returns
1977:CMSIS/Core/Include/core_cm4.h ****    - \b  0: No FPU
1978:CMSIS/Core/Include/core_cm4.h ****    - \b  1: Single precision FPU
1979:CMSIS/Core/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
1980:CMSIS/Core/Include/core_cm4.h ****  */
1981:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1982:CMSIS/Core/Include/core_cm4.h **** {
1983:CMSIS/Core/Include/core_cm4.h ****   uint32_t mvfr0;
1984:CMSIS/Core/Include/core_cm4.h **** 
1985:CMSIS/Core/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1986:CMSIS/Core/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1987:CMSIS/Core/Include/core_cm4.h ****   {
1988:CMSIS/Core/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
1989:CMSIS/Core/Include/core_cm4.h ****   }
1990:CMSIS/Core/Include/core_cm4.h ****   else
1991:CMSIS/Core/Include/core_cm4.h ****   {
1992:CMSIS/Core/Include/core_cm4.h ****     return 0U;           /* No FPU */
1993:CMSIS/Core/Include/core_cm4.h ****   }
1994:CMSIS/Core/Include/core_cm4.h **** }
1995:CMSIS/Core/Include/core_cm4.h **** 
1996:CMSIS/Core/Include/core_cm4.h **** 
1997:CMSIS/Core/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1998:CMSIS/Core/Include/core_cm4.h **** 
1999:CMSIS/Core/Include/core_cm4.h **** 
2000:CMSIS/Core/Include/core_cm4.h **** 
2001:CMSIS/Core/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
2002:CMSIS/Core/Include/core_cm4.h **** /**
2003:CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2004:CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2005:CMSIS/Core/Include/core_cm4.h ****   \brief    Functions that configure the System.
2006:CMSIS/Core/Include/core_cm4.h ****   @{
2007:CMSIS/Core/Include/core_cm4.h ****  */
2008:CMSIS/Core/Include/core_cm4.h **** 
2009:CMSIS/Core/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2010:CMSIS/Core/Include/core_cm4.h **** 
2011:CMSIS/Core/Include/core_cm4.h **** /**
2012:CMSIS/Core/Include/core_cm4.h ****   \brief   System Tick Configuration
2013:CMSIS/Core/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2014:CMSIS/Core/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2015:CMSIS/Core/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2016:CMSIS/Core/Include/core_cm4.h ****   \return          0  Function succeeded.
2017:CMSIS/Core/Include/core_cm4.h ****   \return          1  Function failed.
2018:CMSIS/Core/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2019:CMSIS/Core/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2020:CMSIS/Core/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2021:CMSIS/Core/Include/core_cm4.h ****  */
2022:CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 569              		.loc 2 2022 26 view .LVU136
 570              	.LBB83:
2023:CMSIS/Core/Include/core_cm4.h **** {
2024:CMSIS/Core/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 571              		.loc 2 2024 3 view .LVU137
 572              		.loc 2 2024 14 is_stmt 0 view .LVU138
 573 0000 0138     		subs	r0, r0, #1
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 67


 574              	.LVL49:
 575              		.loc 2 2024 6 view .LVU139
 576 0002 B0F1807F 		cmp	r0, #16777216
 577 0006 0BD2     		bcs	.L39
2025:CMSIS/Core/Include/core_cm4.h ****   {
2026:CMSIS/Core/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2027:CMSIS/Core/Include/core_cm4.h ****   }
2028:CMSIS/Core/Include/core_cm4.h **** 
2029:CMSIS/Core/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 578              		.loc 2 2029 3 is_stmt 1 view .LVU140
 579              		.loc 2 2029 18 is_stmt 0 view .LVU141
 580 0008 4FF0E023 		mov	r3, #-536813568
 581 000c 5861     		str	r0, [r3, #20]
2030:CMSIS/Core/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 582              		.loc 2 2030 3 is_stmt 1 view .LVU142
 583              	.LVL50:
 584              	.LBB84:
 585              	.LBI84:
1816:CMSIS/Core/Include/core_cm4.h **** {
 586              		.loc 2 1816 22 view .LVU143
 587              	.LBB85:
1818:CMSIS/Core/Include/core_cm4.h ****   {
 588              		.loc 2 1818 3 view .LVU144
1824:CMSIS/Core/Include/core_cm4.h ****   }
 589              		.loc 2 1824 5 view .LVU145
1824:CMSIS/Core/Include/core_cm4.h ****   }
 590              		.loc 2 1824 46 is_stmt 0 view .LVU146
 591 000e 054A     		ldr	r2, .L40
 592 0010 F021     		movs	r1, #240
 593 0012 82F82310 		strb	r1, [r2, #35]
 594              	.LVL51:
1824:CMSIS/Core/Include/core_cm4.h ****   }
 595              		.loc 2 1824 46 view .LVU147
 596              	.LBE85:
 597              	.LBE84:
2031:CMSIS/Core/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 598              		.loc 2 2031 3 is_stmt 1 view .LVU148
 599              		.loc 2 2031 18 is_stmt 0 view .LVU149
 600 0016 0020     		movs	r0, #0
 601              	.LVL52:
 602              		.loc 2 2031 18 view .LVU150
 603 0018 9861     		str	r0, [r3, #24]
2032:CMSIS/Core/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 604              		.loc 2 2032 3 is_stmt 1 view .LVU151
 605              		.loc 2 2032 18 is_stmt 0 view .LVU152
 606 001a 0722     		movs	r2, #7
 607 001c 1A61     		str	r2, [r3, #16]
2033:CMSIS/Core/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2034:CMSIS/Core/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2035:CMSIS/Core/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 608              		.loc 2 2035 3 is_stmt 1 view .LVU153
 609              		.loc 2 2035 10 is_stmt 0 view .LVU154
 610 001e 7047     		bx	lr
 611              	.L39:
2026:CMSIS/Core/Include/core_cm4.h ****   }
 612              		.loc 2 2026 12 view .LVU155
 613 0020 0120     		movs	r0, #1
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 68


 614              	.LVL53:
2026:CMSIS/Core/Include/core_cm4.h ****   }
 615              		.loc 2 2026 12 view .LVU156
 616              	.LBE83:
 617              	.LBE82:
 232:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 618              		.loc 1 232 1 view .LVU157
 619 0022 7047     		bx	lr
 620              	.L41:
 621              		.align	2
 622              	.L40:
 623 0024 00ED00E0 		.word	-536810240
 624              		.cfi_endproc
 625              	.LFE135:
 627              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 628              		.align	1
 629              		.global	HAL_MPU_Disable
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 634              	HAL_MPU_Disable:
 635              	.LFB136:
 233:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 234:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @}
 235:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 236:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 237:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 238:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  *  @brief   Cortex control functions 
 239:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  *
 240:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** @verbatim   
 241:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 242:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 243:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================  
 244:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     [..]
 245:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 246:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities. 
 247:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  
 248:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****       
 249:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** @endverbatim
 250:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 251:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 252:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 253:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** #if (__MPU_PRESENT == 1U)
 254:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 255:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Disables the MPU
 256:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 257:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 258:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 259:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 636              		.loc 1 259 1 is_stmt 1 view -0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 260:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 261:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   __DMB();
 641              		.loc 1 261 3 view .LVU159
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 69


 642              	.LBB86:
 643              	.LBI86:
 880:CMSIS/Core/Include/cmsis_gcc.h **** }
 881:CMSIS/Core/Include/cmsis_gcc.h **** 
 882:CMSIS/Core/Include/cmsis_gcc.h **** 
 883:CMSIS/Core/Include/cmsis_gcc.h **** /**
 884:CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:CMSIS/Core/Include/cmsis_gcc.h ****  */
 888:CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 644              		.loc 3 888 27 view .LVU160
 645              	.LBB87:
 889:CMSIS/Core/Include/cmsis_gcc.h **** {
 890:CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 646              		.loc 3 890 3 view .LVU161
 647              		.syntax unified
 648              	@ 890 "CMSIS/Core/Include/cmsis_gcc.h" 1
 649 0000 BFF35F8F 		dmb 0xF
 650              	@ 0 "" 2
 651              		.thumb
 652              		.syntax unified
 653              	.LBE87:
 654              	.LBE86:
 262:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 263:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable fault exceptions */
 264:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 655              		.loc 1 264 3 view .LVU162
 656              		.loc 1 264 14 is_stmt 0 view .LVU163
 657 0004 044B     		ldr	r3, .L43
 658 0006 5A6A     		ldr	r2, [r3, #36]
 659 0008 22F48032 		bic	r2, r2, #65536
 660 000c 5A62     		str	r2, [r3, #36]
 265:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 266:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 267:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   MPU->CTRL = 0U;
 661              		.loc 1 267 3 is_stmt 1 view .LVU164
 662              		.loc 1 267 13 is_stmt 0 view .LVU165
 663 000e 0022     		movs	r2, #0
 664 0010 C3F89420 		str	r2, [r3, #148]
 268:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 665              		.loc 1 268 1 view .LVU166
 666 0014 7047     		bx	lr
 667              	.L44:
 668 0016 00BF     		.align	2
 669              	.L43:
 670 0018 00ED00E0 		.word	-536810240
 671              		.cfi_endproc
 672              	.LFE136:
 674              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 675              		.align	1
 676              		.global	HAL_MPU_Enable
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 681              	HAL_MPU_Enable:
 682              	.LVL54:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 70


 683              	.LFB137:
 269:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 270:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 271:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Enable the MPU.
 272:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault, 
 273:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory 
 274:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 275:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 276:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 277:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 278:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 279:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 280:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 281:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 282:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 684              		.loc 1 282 1 is_stmt 1 view -0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 283:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Enable the MPU */
 284:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 689              		.loc 1 284 3 view .LVU168
 690              		.loc 1 284 27 is_stmt 0 view .LVU169
 691 0000 40F00100 		orr	r0, r0, #1
 692              	.LVL55:
 693              		.loc 1 284 13 view .LVU170
 694 0004 054B     		ldr	r3, .L46
 695 0006 C3F89400 		str	r0, [r3, #148]
 285:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 286:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Enable fault exceptions */
 287:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 696              		.loc 1 287 3 is_stmt 1 view .LVU171
 697              		.loc 1 287 14 is_stmt 0 view .LVU172
 698 000a 5A6A     		ldr	r2, [r3, #36]
 699 000c 42F48032 		orr	r2, r2, #65536
 700 0010 5A62     		str	r2, [r3, #36]
 288:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 289:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 290:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   __DSB();
 701              		.loc 1 290 3 is_stmt 1 view .LVU173
 702              	.LBB88:
 703              	.LBI88:
 877:CMSIS/Core/Include/cmsis_gcc.h **** {
 704              		.loc 3 877 27 view .LVU174
 705              	.LBB89:
 879:CMSIS/Core/Include/cmsis_gcc.h **** }
 706              		.loc 3 879 3 view .LVU175
 707              		.syntax unified
 708              	@ 879 "CMSIS/Core/Include/cmsis_gcc.h" 1
 709 0012 BFF34F8F 		dsb 0xF
 710              	@ 0 "" 2
 711              		.thumb
 712              		.syntax unified
 713              	.LBE89:
 714              	.LBE88:
 291:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   __ISB();
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 71


 715              		.loc 1 291 3 view .LVU176
 716              	.LBB90:
 717              	.LBI90:
 866:CMSIS/Core/Include/cmsis_gcc.h **** {
 718              		.loc 3 866 27 view .LVU177
 719              	.LBB91:
 868:CMSIS/Core/Include/cmsis_gcc.h **** }
 720              		.loc 3 868 3 view .LVU178
 721              		.syntax unified
 722              	@ 868 "CMSIS/Core/Include/cmsis_gcc.h" 1
 723 0016 BFF36F8F 		isb 0xF
 724              	@ 0 "" 2
 725              		.thumb
 726              		.syntax unified
 727              	.LBE91:
 728              	.LBE90:
 292:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 729              		.loc 1 292 1 is_stmt 0 view .LVU179
 730 001a 7047     		bx	lr
 731              	.L47:
 732              		.align	2
 733              	.L46:
 734 001c 00ED00E0 		.word	-536810240
 735              		.cfi_endproc
 736              	.LFE137:
 738              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 739              		.align	1
 740              		.global	HAL_MPU_ConfigRegion
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	HAL_MPU_ConfigRegion:
 746              	.LVL56:
 747              	.LFB138:
 293:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 294:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 295:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 296:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 297:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                the initialization and configuration information.
 298:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 299:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 300:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 301:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 748              		.loc 1 301 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		.loc 1 301 1 is_stmt 0 view .LVU181
 753 0000 10B5     		push	{r4, lr}
 754              	.LCFI4:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 4, -8
 757              		.cfi_offset 14, -4
 758 0002 0446     		mov	r4, r0
 302:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 303:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 759              		.loc 1 303 3 is_stmt 1 view .LVU182
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 72


 760 0004 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 761 0006 072B     		cmp	r3, #7
 762 0008 47D8     		bhi	.L62
 763              	.LVL57:
 764              	.L49:
 304:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 765              		.loc 1 304 3 view .LVU183
 766 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 767 000c 012B     		cmp	r3, #1
 768 000e 4AD8     		bhi	.L63
 769              	.L50:
 305:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 306:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Set the Region number */
 307:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 770              		.loc 1 307 3 view .LVU184
 771              		.loc 1 307 22 is_stmt 0 view .LVU185
 772 0010 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 773              		.loc 1 307 12 view .LVU186
 774 0012 434B     		ldr	r3, .L72
 775 0014 C3F89820 		str	r2, [r3, #152]
 308:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 309:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 776              		.loc 1 309 3 is_stmt 1 view .LVU187
 777              		.loc 1 309 16 is_stmt 0 view .LVU188
 778 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 779              		.loc 1 309 6 view .LVU189
 780 001a 002B     		cmp	r3, #0
 781 001c 79D0     		beq	.L51
 310:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   {
 311:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     /* Check the parameters */
 312:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 782              		.loc 1 312 5 is_stmt 1 view .LVU190
 783 001e 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 784 0020 012B     		cmp	r3, #1
 785 0022 46D8     		bhi	.L64
 786              	.L52:
 313:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 787              		.loc 1 313 5 view .LVU191
 788 0024 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 789 0026 032B     		cmp	r3, #3
 790 0028 03D9     		bls	.L53
 791              		.loc 1 313 5 is_stmt 0 discriminator 1 view .LVU192
 792 002a 052B     		cmp	r3, #5
 793 002c 01D0     		beq	.L53
 794              		.loc 1 313 5 discriminator 2 view .LVU193
 795 002e 062B     		cmp	r3, #6
 796 0030 45D1     		bne	.L65
 797              	.L53:
 314:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 798              		.loc 1 314 5 is_stmt 1 view .LVU194
 799 0032 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 800 0034 022B     		cmp	r3, #2
 801 0036 48D8     		bhi	.L66
 802              	.L54:
 315:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 803              		.loc 1 315 5 view .LVU195
 804 0038 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 73


 805 003a 012B     		cmp	r3, #1
 806 003c 4BD8     		bhi	.L67
 807              	.L55:
 316:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 808              		.loc 1 316 5 view .LVU196
 809 003e A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 810 0040 012B     		cmp	r3, #1
 811 0042 4ED8     		bhi	.L68
 812              	.L56:
 317:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 813              		.loc 1 317 5 view .LVU197
 814 0044 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 815 0046 012B     		cmp	r3, #1
 816 0048 51D8     		bhi	.L69
 817              	.L57:
 318:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 818              		.loc 1 318 5 view .LVU198
 819 004a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 820 004c FF2B     		cmp	r3, #255
 821 004e 54D0     		beq	.L70
 822              	.L58:
 319:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 823              		.loc 1 319 5 view .LVU199
 824 0050 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 825 0052 043B     		subs	r3, r3, #4
 826 0054 DBB2     		uxtb	r3, r3
 827 0056 1B2B     		cmp	r3, #27
 828 0058 55D8     		bhi	.L71
 829              	.L59:
 320:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     
 321:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 830              		.loc 1 321 5 view .LVU200
 831              		.loc 1 321 25 is_stmt 0 view .LVU201
 832 005a 6368     		ldr	r3, [r4, #4]
 833              		.loc 1 321 15 view .LVU202
 834 005c 304A     		ldr	r2, .L72
 835 005e C2F89C30 		str	r3, [r2, #156]
 322:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 836              		.loc 1 322 5 is_stmt 1 view .LVU203
 837              		.loc 1 322 36 is_stmt 0 view .LVU204
 838 0062 217B     		ldrb	r1, [r4, #12]	@ zero_extendqisi2
 323:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 839              		.loc 1 323 36 view .LVU205
 840 0064 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 841              		.loc 1 323 62 view .LVU206
 842 0066 1B06     		lsls	r3, r3, #24
 322:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 843              		.loc 1 322 84 view .LVU207
 844 0068 43EA0173 		orr	r3, r3, r1, lsl #28
 324:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 845              		.loc 1 324 36 view .LVU208
 846 006c A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 323:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 847              		.loc 1 323 84 view .LVU209
 848 006e 43EAC143 		orr	r3, r3, r1, lsl #19
 325:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 849              		.loc 1 325 36 view .LVU210
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 74


 850 0072 617B     		ldrb	r1, [r4, #13]	@ zero_extendqisi2
 324:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 851              		.loc 1 324 84 view .LVU211
 852 0074 43EA8143 		orr	r3, r3, r1, lsl #18
 326:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 853              		.loc 1 326 36 view .LVU212
 854 0078 A17B     		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 325:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 855              		.loc 1 325 84 view .LVU213
 856 007a 43EA4143 		orr	r3, r3, r1, lsl #17
 327:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 857              		.loc 1 327 36 view .LVU214
 858 007e E17B     		ldrb	r1, [r4, #15]	@ zero_extendqisi2
 326:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 859              		.loc 1 326 84 view .LVU215
 860 0080 43EA0143 		orr	r3, r3, r1, lsl #16
 328:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 861              		.loc 1 328 36 view .LVU216
 862 0084 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 327:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 863              		.loc 1 327 84 view .LVU217
 864 0086 43EA0123 		orr	r3, r3, r1, lsl #8
 329:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 865              		.loc 1 329 36 view .LVU218
 866 008a 217A     		ldrb	r1, [r4, #8]	@ zero_extendqisi2
 328:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 867              		.loc 1 328 84 view .LVU219
 868 008c 43EA4103 		orr	r3, r3, r1, lsl #1
 330:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 869              		.loc 1 330 36 view .LVU220
 870 0090 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 329:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 871              		.loc 1 329 84 view .LVU221
 872 0092 0B43     		orrs	r3, r3, r1
 322:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 873              		.loc 1 322 15 view .LVU222
 874 0094 C2F8A030 		str	r3, [r2, #160]
 875              	.L48:
 331:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 332:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   else
 333:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   {
 334:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     MPU->RBAR = 0x00U;
 335:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     MPU->RASR = 0x00U;
 336:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 337:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 876              		.loc 1 337 1 view .LVU223
 877 0098 10BD     		pop	{r4, pc}
 878              	.LVL58:
 879              	.L62:
 303:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 880              		.loc 1 303 3 discriminator 1 view .LVU224
 881 009a 40F22F11 		movw	r1, #303
 882 009e 2148     		ldr	r0, .L72+4
 883              	.LVL59:
 303:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 884              		.loc 1 303 3 discriminator 1 view .LVU225
 885 00a0 FFF7FEFF 		bl	assert_failed
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 75


 886              	.LVL60:
 887 00a4 B1E7     		b	.L49
 888              	.L63:
 304:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 889              		.loc 1 304 3 discriminator 1 view .LVU226
 890 00a6 4FF49871 		mov	r1, #304
 891 00aa 1E48     		ldr	r0, .L72+4
 892 00ac FFF7FEFF 		bl	assert_failed
 893              	.LVL61:
 894 00b0 AEE7     		b	.L50
 895              	.L64:
 312:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 896              		.loc 1 312 5 discriminator 1 view .LVU227
 897 00b2 4FF49C71 		mov	r1, #312
 898 00b6 1B48     		ldr	r0, .L72+4
 899 00b8 FFF7FEFF 		bl	assert_failed
 900              	.LVL62:
 901 00bc B2E7     		b	.L52
 902              	.L65:
 313:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 903              		.loc 1 313 5 discriminator 3 view .LVU228
 904 00be 40F23911 		movw	r1, #313
 905 00c2 1848     		ldr	r0, .L72+4
 906 00c4 FFF7FEFF 		bl	assert_failed
 907              	.LVL63:
 908 00c8 B3E7     		b	.L53
 909              	.L66:
 314:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 910              		.loc 1 314 5 discriminator 1 view .LVU229
 911 00ca 4FF49D71 		mov	r1, #314
 912 00ce 1548     		ldr	r0, .L72+4
 913 00d0 FFF7FEFF 		bl	assert_failed
 914              	.LVL64:
 915 00d4 B0E7     		b	.L54
 916              	.L67:
 315:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 917              		.loc 1 315 5 discriminator 1 view .LVU230
 918 00d6 40F23B11 		movw	r1, #315
 919 00da 1248     		ldr	r0, .L72+4
 920 00dc FFF7FEFF 		bl	assert_failed
 921              	.LVL65:
 922 00e0 ADE7     		b	.L55
 923              	.L68:
 316:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 924              		.loc 1 316 5 discriminator 1 view .LVU231
 925 00e2 4FF49E71 		mov	r1, #316
 926 00e6 0F48     		ldr	r0, .L72+4
 927 00e8 FFF7FEFF 		bl	assert_failed
 928              	.LVL66:
 929 00ec AAE7     		b	.L56
 930              	.L69:
 317:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 931              		.loc 1 317 5 discriminator 1 view .LVU232
 932 00ee 40F23D11 		movw	r1, #317
 933 00f2 0C48     		ldr	r0, .L72+4
 934 00f4 FFF7FEFF 		bl	assert_failed
 935              	.LVL67:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 76


 936 00f8 A7E7     		b	.L57
 937              	.L70:
 318:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 938              		.loc 1 318 5 discriminator 1 view .LVU233
 939 00fa 4FF49F71 		mov	r1, #318
 940 00fe 0948     		ldr	r0, .L72+4
 941 0100 FFF7FEFF 		bl	assert_failed
 942              	.LVL68:
 943 0104 A4E7     		b	.L58
 944              	.L71:
 319:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     
 945              		.loc 1 319 5 discriminator 1 view .LVU234
 946 0106 40F23F11 		movw	r1, #319
 947 010a 0648     		ldr	r0, .L72+4
 948 010c FFF7FEFF 		bl	assert_failed
 949              	.LVL69:
 950 0110 A3E7     		b	.L59
 951              	.L51:
 334:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     MPU->RASR = 0x00U;
 952              		.loc 1 334 5 is_stmt 1 view .LVU235
 334:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     MPU->RASR = 0x00U;
 953              		.loc 1 334 15 is_stmt 0 view .LVU236
 954 0112 034B     		ldr	r3, .L72
 955 0114 0022     		movs	r2, #0
 956 0116 C3F89C20 		str	r2, [r3, #156]
 335:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 957              		.loc 1 335 5 is_stmt 1 view .LVU237
 335:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 958              		.loc 1 335 15 is_stmt 0 view .LVU238
 959 011a C3F8A020 		str	r2, [r3, #160]
 960              		.loc 1 337 1 view .LVU239
 961 011e BBE7     		b	.L48
 962              	.L73:
 963              		.align	2
 964              	.L72:
 965 0120 00ED00E0 		.word	-536810240
 966 0124 00000000 		.word	.LC0
 967              		.cfi_endproc
 968              	.LFE138:
 970              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 971              		.align	1
 972              		.global	HAL_NVIC_GetPriorityGrouping
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 977              	HAL_NVIC_GetPriorityGrouping:
 978              	.LFB139:
 338:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 339:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 340:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 341:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 342:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 343:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 344:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 345:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 979              		.loc 1 345 1 is_stmt 1 view -0
 980              		.cfi_startproc
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 77


 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 346:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 347:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 984              		.loc 1 347 3 view .LVU241
 985              	.LBB92:
 986              	.LBI92:
1676:CMSIS/Core/Include/core_cm4.h **** {
 987              		.loc 2 1676 26 view .LVU242
 988              	.LBB93:
1678:CMSIS/Core/Include/core_cm4.h **** }
 989              		.loc 2 1678 3 view .LVU243
1678:CMSIS/Core/Include/core_cm4.h **** }
 990              		.loc 2 1678 26 is_stmt 0 view .LVU244
 991 0000 024B     		ldr	r3, .L75
 992 0002 D868     		ldr	r0, [r3, #12]
 993              	.LBE93:
 994              	.LBE92:
 348:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 995              		.loc 1 348 1 view .LVU245
 996 0004 C0F30220 		ubfx	r0, r0, #8, #3
 997 0008 7047     		bx	lr
 998              	.L76:
 999 000a 00BF     		.align	2
 1000              	.L75:
 1001 000c 00ED00E0 		.word	-536810240
 1002              		.cfi_endproc
 1003              	.LFE139:
 1005              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 1006              		.align	1
 1007              		.global	HAL_NVIC_GetPriority
 1008              		.syntax unified
 1009              		.thumb
 1010              		.thumb_func
 1012              	HAL_NVIC_GetPriority:
 1013              	.LVL70:
 1014              	.LFB140:
 349:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 350:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 351:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 352:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 353:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 354:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 355:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 356:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 357:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 358:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      4 bits for subpriority
 359:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 360:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 361:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 362:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 363:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 364:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      1 bits for subpriority
 365:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 366:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                                      0 bits for subpriority
 367:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 78


 368:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 369:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 370:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 371:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 372:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 1015              		.loc 1 372 1 is_stmt 1 view -0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		.loc 1 372 1 is_stmt 0 view .LVU247
 1020 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1021              	.LCFI5:
 1022              		.cfi_def_cfa_offset 24
 1023              		.cfi_offset 3, -24
 1024              		.cfi_offset 4, -20
 1025              		.cfi_offset 5, -16
 1026              		.cfi_offset 6, -12
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 0546     		mov	r5, r0
 1030 0004 0C46     		mov	r4, r1
 1031 0006 1746     		mov	r7, r2
 1032 0008 1E46     		mov	r6, r3
 373:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 374:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 1033              		.loc 1 374 3 is_stmt 1 view .LVU248
 1034 000a CB1E     		subs	r3, r1, #3
 1035              	.LVL71:
 1036              		.loc 1 374 3 is_stmt 0 view .LVU249
 1037 000c 042B     		cmp	r3, #4
 1038 000e 22D8     		bhi	.L84
 1039              	.LVL72:
 1040              	.L78:
 375:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 376:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1041              		.loc 1 376 3 is_stmt 1 view .LVU250
 1042              	.LBB98:
 1043              	.LBI98:
1838:CMSIS/Core/Include/core_cm4.h **** {
 1044              		.loc 2 1838 26 view .LVU251
 1045              	.LBB99:
1841:CMSIS/Core/Include/core_cm4.h ****   {
 1046              		.loc 2 1841 3 view .LVU252
1841:CMSIS/Core/Include/core_cm4.h ****   {
 1047              		.loc 2 1841 6 is_stmt 0 view .LVU253
 1048 0010 002D     		cmp	r5, #0
 1049 0012 26DB     		blt	.L79
1843:CMSIS/Core/Include/core_cm4.h ****   }
 1050              		.loc 2 1843 5 is_stmt 1 view .LVU254
1843:CMSIS/Core/Include/core_cm4.h ****   }
 1051              		.loc 2 1843 31 is_stmt 0 view .LVU255
 1052 0014 05F16045 		add	r5, r5, #-536870912
 1053              	.LVL73:
1843:CMSIS/Core/Include/core_cm4.h ****   }
 1054              		.loc 2 1843 31 view .LVU256
 1055 0018 05F56145 		add	r5, r5, #57600
 1056 001c 95F80033 		ldrb	r3, [r5, #768]	@ zero_extendqisi2
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 79


1843:CMSIS/Core/Include/core_cm4.h ****   }
 1057              		.loc 2 1843 64 view .LVU257
 1058 0020 1B09     		lsrs	r3, r3, #4
 1059              	.L80:
 1060              	.LVL74:
1843:CMSIS/Core/Include/core_cm4.h ****   }
 1061              		.loc 2 1843 64 view .LVU258
 1062              	.LBE99:
 1063              	.LBE98:
 1064              	.LBB101:
 1065              	.LBI101:
1890:CMSIS/Core/Include/core_cm4.h **** {
 1066              		.loc 2 1890 22 is_stmt 1 view .LVU259
 1067              	.LBB102:
1892:CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 1068              		.loc 2 1892 3 view .LVU260
1892:CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 1069              		.loc 2 1892 12 is_stmt 0 view .LVU261
 1070 0022 04F00701 		and	r1, r4, #7
 1071              	.LVL75:
1893:CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 1072              		.loc 2 1893 3 is_stmt 1 view .LVU262
1894:CMSIS/Core/Include/core_cm4.h **** 
 1073              		.loc 2 1894 3 view .LVU263
1896:CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 1074              		.loc 2 1896 3 view .LVU264
1896:CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 1075              		.loc 2 1896 31 is_stmt 0 view .LVU265
 1076 0026 C1F10702 		rsb	r2, r1, #7
1896:CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 1077              		.loc 2 1896 23 view .LVU266
 1078 002a 042A     		cmp	r2, #4
 1079 002c 28BF     		it	cs
 1080 002e 0422     		movcs	r2, #4
 1081              	.LVL76:
1897:CMSIS/Core/Include/core_cm4.h **** 
 1082              		.loc 2 1897 3 is_stmt 1 view .LVU267
1897:CMSIS/Core/Include/core_cm4.h **** 
 1083              		.loc 2 1897 44 is_stmt 0 view .LVU268
 1084 0030 081D     		adds	r0, r1, #4
1897:CMSIS/Core/Include/core_cm4.h **** 
 1085              		.loc 2 1897 109 view .LVU269
 1086 0032 0628     		cmp	r0, #6
 1087 0034 1BD9     		bls	.L82
 1088 0036 0339     		subs	r1, r1, #3
 1089              	.LVL77:
 1090              	.L81:
1899:CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 1091              		.loc 2 1899 3 is_stmt 1 view .LVU270
1899:CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 1092              		.loc 2 1899 33 is_stmt 0 view .LVU271
 1093 0038 23FA01F4 		lsr	r4, r3, r1
 1094              	.LVL78:
1899:CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 1095              		.loc 2 1899 53 view .LVU272
 1096 003c 4FF0FF30 		mov	r0, #-1
 1097              	.LVL79:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 80


1899:CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 1098              		.loc 2 1899 53 view .LVU273
 1099 0040 00FA02F2 		lsl	r2, r0, r2
 1100              	.LVL80:
1899:CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 1101              		.loc 2 1899 53 view .LVU274
 1102 0044 24EA0202 		bic	r2, r4, r2
1899:CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 1103              		.loc 2 1899 21 view .LVU275
 1104 0048 3A60     		str	r2, [r7]
1900:CMSIS/Core/Include/core_cm4.h **** }
 1105              		.loc 2 1900 3 is_stmt 1 view .LVU276
1900:CMSIS/Core/Include/core_cm4.h **** }
 1106              		.loc 2 1900 53 is_stmt 0 view .LVU277
 1107 004a 00FA01F1 		lsl	r1, r0, r1
 1108              	.LVL81:
1900:CMSIS/Core/Include/core_cm4.h **** }
 1109              		.loc 2 1900 53 view .LVU278
 1110 004e 23EA0103 		bic	r3, r3, r1
 1111              	.LVL82:
1900:CMSIS/Core/Include/core_cm4.h **** }
 1112              		.loc 2 1900 21 view .LVU279
 1113 0052 3360     		str	r3, [r6]
 1114              	.LVL83:
1900:CMSIS/Core/Include/core_cm4.h **** }
 1115              		.loc 2 1900 21 view .LVU280
 1116              	.LBE102:
 1117              	.LBE101:
 377:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1118              		.loc 1 377 1 view .LVU281
 1119 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1120              	.LVL84:
 1121              	.L84:
 374:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 1122              		.loc 1 374 3 discriminator 1 view .LVU282
 1123 0056 4FF4BB71 		mov	r1, #374
 1124              	.LVL85:
 374:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 1125              		.loc 1 374 3 discriminator 1 view .LVU283
 1126 005a 0648     		ldr	r0, .L85
 1127              	.LVL86:
 374:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 1128              		.loc 1 374 3 discriminator 1 view .LVU284
 1129 005c FFF7FEFF 		bl	assert_failed
 1130              	.LVL87:
 374:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 1131              		.loc 1 374 3 discriminator 1 view .LVU285
 1132 0060 D6E7     		b	.L78
 1133              	.LVL88:
 1134              	.L79:
 1135              	.LBB104:
 1136              	.LBB100:
1847:CMSIS/Core/Include/core_cm4.h ****   }
 1137              		.loc 2 1847 5 is_stmt 1 view .LVU286
1847:CMSIS/Core/Include/core_cm4.h ****   }
 1138              		.loc 2 1847 50 is_stmt 0 view .LVU287
 1139 0062 05F00F05 		and	r5, r5, #15
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 81


 1140              	.LVL89:
1847:CMSIS/Core/Include/core_cm4.h ****   }
 1141              		.loc 2 1847 31 view .LVU288
 1142 0066 044B     		ldr	r3, .L85+4
 1143 0068 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
1847:CMSIS/Core/Include/core_cm4.h ****   }
 1144              		.loc 2 1847 64 view .LVU289
 1145 006a 1B09     		lsrs	r3, r3, #4
 1146 006c D9E7     		b	.L80
 1147              	.LVL90:
 1148              	.L82:
1847:CMSIS/Core/Include/core_cm4.h ****   }
 1149              		.loc 2 1847 64 view .LVU290
 1150              	.LBE100:
 1151              	.LBE104:
 1152              	.LBB105:
 1153              	.LBB103:
1897:CMSIS/Core/Include/core_cm4.h **** 
 1154              		.loc 2 1897 109 view .LVU291
 1155 006e 0021     		movs	r1, #0
 1156              	.LVL91:
1897:CMSIS/Core/Include/core_cm4.h **** 
 1157              		.loc 2 1897 109 view .LVU292
 1158 0070 E2E7     		b	.L81
 1159              	.L86:
 1160 0072 00BF     		.align	2
 1161              	.L85:
 1162 0074 00000000 		.word	.LC0
 1163 0078 14ED00E0 		.word	-536810220
 1164              	.LBE103:
 1165              	.LBE105:
 1166              		.cfi_endproc
 1167              	.LFE140:
 1169              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1170              		.align	1
 1171              		.global	HAL_NVIC_SetPendingIRQ
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1176              	HAL_NVIC_SetPendingIRQ:
 1177              	.LVL92:
 1178              	.LFB141:
 378:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 379:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 380:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 381:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 382:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 383:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 384:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 385:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 386:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 387:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 1179              		.loc 1 387 1 is_stmt 1 view -0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		.loc 1 387 1 is_stmt 0 view .LVU294
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 82


 1184 0000 10B5     		push	{r4, lr}
 1185              	.LCFI6:
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 4, -8
 1188              		.cfi_offset 14, -4
 388:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 389:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1189              		.loc 1 389 3 is_stmt 1 view .LVU295
 1190 0002 041E     		subs	r4, r0, #0
 1191 0004 0BDB     		blt	.L91
 1192              	.LVL93:
 1193              	.L88:
 390:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 391:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Set interrupt pending */
 392:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1194              		.loc 1 392 3 view .LVU296
 1195              	.LBB106:
 1196              	.LBI106:
1762:CMSIS/Core/Include/core_cm4.h **** {
 1197              		.loc 2 1762 22 view .LVU297
 1198              	.LBB107:
1764:CMSIS/Core/Include/core_cm4.h ****   {
 1199              		.loc 2 1764 3 view .LVU298
1764:CMSIS/Core/Include/core_cm4.h ****   {
 1200              		.loc 2 1764 6 is_stmt 0 view .LVU299
 1201 0006 002C     		cmp	r4, #0
 1202 0008 08DB     		blt	.L87
1766:CMSIS/Core/Include/core_cm4.h ****   }
 1203              		.loc 2 1766 5 is_stmt 1 view .LVU300
1766:CMSIS/Core/Include/core_cm4.h ****   }
 1204              		.loc 2 1766 81 is_stmt 0 view .LVU301
 1205 000a 04F01F02 		and	r2, r4, #31
1766:CMSIS/Core/Include/core_cm4.h ****   }
 1206              		.loc 2 1766 34 view .LVU302
 1207 000e 6409     		lsrs	r4, r4, #5
 1208              	.LVL94:
1766:CMSIS/Core/Include/core_cm4.h ****   }
 1209              		.loc 2 1766 45 view .LVU303
 1210 0010 0123     		movs	r3, #1
 1211 0012 9340     		lsls	r3, r3, r2
1766:CMSIS/Core/Include/core_cm4.h ****   }
 1212              		.loc 2 1766 43 view .LVU304
 1213 0014 4034     		adds	r4, r4, #64
 1214 0016 054A     		ldr	r2, .L92
 1215 0018 42F82430 		str	r3, [r2, r4, lsl #2]
 1216              	.L87:
1766:CMSIS/Core/Include/core_cm4.h ****   }
 1217              		.loc 2 1766 43 view .LVU305
 1218              	.LBE107:
 1219              	.LBE106:
 393:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1220              		.loc 1 393 1 view .LVU306
 1221 001c 10BD     		pop	{r4, pc}
 1222              	.LVL95:
 1223              	.L91:
 389:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 1224              		.loc 1 389 3 discriminator 1 view .LVU307
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 83


 1225 001e 40F28511 		movw	r1, #389
 1226 0022 0348     		ldr	r0, .L92+4
 1227              	.LVL96:
 389:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 1228              		.loc 1 389 3 discriminator 1 view .LVU308
 1229 0024 FFF7FEFF 		bl	assert_failed
 1230              	.LVL97:
 1231 0028 EDE7     		b	.L88
 1232              	.L93:
 1233 002a 00BF     		.align	2
 1234              	.L92:
 1235 002c 00E100E0 		.word	-536813312
 1236 0030 00000000 		.word	.LC0
 1237              		.cfi_endproc
 1238              	.LFE141:
 1240              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1241              		.align	1
 1242              		.global	HAL_NVIC_GetPendingIRQ
 1243              		.syntax unified
 1244              		.thumb
 1245              		.thumb_func
 1247              	HAL_NVIC_GetPendingIRQ:
 1248              	.LVL98:
 1249              	.LFB142:
 394:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 395:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 396:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC 
 397:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 398:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 399:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 400:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 401:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 402:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 403:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 404:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 405:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 1250              		.loc 1 405 1 is_stmt 1 view -0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254              		.loc 1 405 1 is_stmt 0 view .LVU310
 1255 0000 10B5     		push	{r4, lr}
 1256              	.LCFI7:
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 4, -8
 1259              		.cfi_offset 14, -4
 406:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 407:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1260              		.loc 1 407 3 is_stmt 1 view .LVU311
 1261 0002 041E     		subs	r4, r0, #0
 1262 0004 0DDB     		blt	.L99
 1263              	.LVL99:
 1264              	.L95:
 408:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 409:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 410:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1265              		.loc 1 410 3 view .LVU312
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 84


 1266              	.LBB108:
 1267              	.LBI108:
1743:CMSIS/Core/Include/core_cm4.h **** {
 1268              		.loc 2 1743 26 view .LVU313
 1269              	.LBB109:
1745:CMSIS/Core/Include/core_cm4.h ****   {
 1270              		.loc 2 1745 3 view .LVU314
1745:CMSIS/Core/Include/core_cm4.h ****   {
 1271              		.loc 2 1745 6 is_stmt 0 view .LVU315
 1272 0006 002C     		cmp	r4, #0
 1273 0008 11DB     		blt	.L97
1747:CMSIS/Core/Include/core_cm4.h ****   }
 1274              		.loc 2 1747 5 is_stmt 1 view .LVU316
1747:CMSIS/Core/Include/core_cm4.h ****   }
 1275              		.loc 2 1747 54 is_stmt 0 view .LVU317
 1276 000a 6309     		lsrs	r3, r4, #5
1747:CMSIS/Core/Include/core_cm4.h ****   }
 1277              		.loc 2 1747 35 view .LVU318
 1278 000c 4033     		adds	r3, r3, #64
 1279 000e 094A     		ldr	r2, .L100
 1280 0010 52F82300 		ldr	r0, [r2, r3, lsl #2]
1747:CMSIS/Core/Include/core_cm4.h ****   }
 1281              		.loc 2 1747 91 view .LVU319
 1282 0014 04F01F04 		and	r4, r4, #31
 1283              	.LVL100:
1747:CMSIS/Core/Include/core_cm4.h ****   }
 1284              		.loc 2 1747 103 view .LVU320
 1285 0018 20FA04F4 		lsr	r4, r0, r4
1747:CMSIS/Core/Include/core_cm4.h ****   }
 1286              		.loc 2 1747 12 view .LVU321
 1287 001c 04F00100 		and	r0, r4, #1
 1288              	.L94:
1747:CMSIS/Core/Include/core_cm4.h ****   }
 1289              		.loc 2 1747 12 view .LVU322
 1290              	.LBE109:
 1291              	.LBE108:
 411:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1292              		.loc 1 411 1 view .LVU323
 1293 0020 10BD     		pop	{r4, pc}
 1294              	.LVL101:
 1295              	.L99:
 407:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 1296              		.loc 1 407 3 discriminator 1 view .LVU324
 1297 0022 40F29711 		movw	r1, #407
 1298 0026 0448     		ldr	r0, .L100+4
 1299              	.LVL102:
 407:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 1300              		.loc 1 407 3 discriminator 1 view .LVU325
 1301 0028 FFF7FEFF 		bl	assert_failed
 1302              	.LVL103:
 1303 002c EBE7     		b	.L95
 1304              	.LVL104:
 1305              	.L97:
 1306              	.LBB111:
 1307              	.LBB110:
1751:CMSIS/Core/Include/core_cm4.h ****   }
 1308              		.loc 2 1751 11 view .LVU326
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 85


 1309 002e 0020     		movs	r0, #0
 1310              	.LVL105:
1751:CMSIS/Core/Include/core_cm4.h ****   }
 1311              		.loc 2 1751 11 view .LVU327
 1312              	.LBE110:
 1313              	.LBE111:
 410:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1314              		.loc 1 410 10 view .LVU328
 1315 0030 F6E7     		b	.L94
 1316              	.L101:
 1317 0032 00BF     		.align	2
 1318              	.L100:
 1319 0034 00E100E0 		.word	-536813312
 1320 0038 00000000 		.word	.LC0
 1321              		.cfi_endproc
 1322              	.LFE142:
 1324              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1325              		.align	1
 1326              		.global	HAL_NVIC_ClearPendingIRQ
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1331              	HAL_NVIC_ClearPendingIRQ:
 1332              	.LVL106:
 1333              	.LFB143:
 412:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 413:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 414:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 415:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 416:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 417:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 418:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 419:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 420:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 421:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 1334              		.loc 1 421 1 is_stmt 1 view -0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              		.loc 1 421 1 is_stmt 0 view .LVU330
 1339 0000 10B5     		push	{r4, lr}
 1340              	.LCFI8:
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 4, -8
 1343              		.cfi_offset 14, -4
 422:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 423:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1344              		.loc 1 423 3 is_stmt 1 view .LVU331
 1345 0002 041E     		subs	r4, r0, #0
 1346 0004 0BDB     		blt	.L106
 1347              	.LVL107:
 1348              	.L103:
 424:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 425:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Clear pending interrupt */
 426:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1349              		.loc 1 426 3 view .LVU332
 1350              	.LBB112:
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 86


 1351              	.LBI112:
1777:CMSIS/Core/Include/core_cm4.h **** {
 1352              		.loc 2 1777 22 view .LVU333
 1353              	.LBB113:
1779:CMSIS/Core/Include/core_cm4.h ****   {
 1354              		.loc 2 1779 3 view .LVU334
1779:CMSIS/Core/Include/core_cm4.h ****   {
 1355              		.loc 2 1779 6 is_stmt 0 view .LVU335
 1356 0006 002C     		cmp	r4, #0
 1357 0008 08DB     		blt	.L102
1781:CMSIS/Core/Include/core_cm4.h ****   }
 1358              		.loc 2 1781 5 is_stmt 1 view .LVU336
1781:CMSIS/Core/Include/core_cm4.h ****   }
 1359              		.loc 2 1781 81 is_stmt 0 view .LVU337
 1360 000a 04F01F02 		and	r2, r4, #31
1781:CMSIS/Core/Include/core_cm4.h ****   }
 1361              		.loc 2 1781 34 view .LVU338
 1362 000e 6409     		lsrs	r4, r4, #5
 1363              	.LVL108:
1781:CMSIS/Core/Include/core_cm4.h ****   }
 1364              		.loc 2 1781 45 view .LVU339
 1365 0010 0123     		movs	r3, #1
 1366 0012 9340     		lsls	r3, r3, r2
1781:CMSIS/Core/Include/core_cm4.h ****   }
 1367              		.loc 2 1781 43 view .LVU340
 1368 0014 6034     		adds	r4, r4, #96
 1369 0016 054A     		ldr	r2, .L107
 1370 0018 42F82430 		str	r3, [r2, r4, lsl #2]
 1371              	.L102:
1781:CMSIS/Core/Include/core_cm4.h ****   }
 1372              		.loc 2 1781 43 view .LVU341
 1373              	.LBE113:
 1374              	.LBE112:
 427:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1375              		.loc 1 427 1 view .LVU342
 1376 001c 10BD     		pop	{r4, pc}
 1377              	.LVL109:
 1378              	.L106:
 423:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 1379              		.loc 1 423 3 discriminator 1 view .LVU343
 1380 001e 40F2A711 		movw	r1, #423
 1381 0022 0348     		ldr	r0, .L107+4
 1382              	.LVL110:
 423:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 1383              		.loc 1 423 3 discriminator 1 view .LVU344
 1384 0024 FFF7FEFF 		bl	assert_failed
 1385              	.LVL111:
 1386 0028 EDE7     		b	.L103
 1387              	.L108:
 1388 002a 00BF     		.align	2
 1389              	.L107:
 1390 002c 00E100E0 		.word	-536813312
 1391 0030 00000000 		.word	.LC0
 1392              		.cfi_endproc
 1393              	.LFE143:
 1395              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1396              		.align	1
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 87


 1397              		.global	HAL_NVIC_GetActive
 1398              		.syntax unified
 1399              		.thumb
 1400              		.thumb_func
 1402              	HAL_NVIC_GetActive:
 1403              	.LVL112:
 1404              	.LFB144:
 428:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 429:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 430:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 431:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 432:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 433:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 434:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 435:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 436:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 437:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 438:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 1405              		.loc 1 438 1 is_stmt 1 view -0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              		.loc 1 438 1 is_stmt 0 view .LVU346
 1410 0000 10B5     		push	{r4, lr}
 1411              	.LCFI9:
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 4, -8
 1414              		.cfi_offset 14, -4
 439:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 440:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1415              		.loc 1 440 3 is_stmt 1 view .LVU347
 1416 0002 041E     		subs	r4, r0, #0
 1417 0004 0DDB     		blt	.L114
 1418              	.LVL113:
 1419              	.L110:
 441:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 442:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 443:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1420              		.loc 1 443 3 view .LVU348
 1421              	.LBB114:
 1422              	.LBI114:
1794:CMSIS/Core/Include/core_cm4.h **** {
 1423              		.loc 2 1794 26 view .LVU349
 1424              	.LBB115:
1796:CMSIS/Core/Include/core_cm4.h ****   {
 1425              		.loc 2 1796 3 view .LVU350
1796:CMSIS/Core/Include/core_cm4.h ****   {
 1426              		.loc 2 1796 6 is_stmt 0 view .LVU351
 1427 0006 002C     		cmp	r4, #0
 1428 0008 11DB     		blt	.L112
1798:CMSIS/Core/Include/core_cm4.h ****   }
 1429              		.loc 2 1798 5 is_stmt 1 view .LVU352
1798:CMSIS/Core/Include/core_cm4.h ****   }
 1430              		.loc 2 1798 54 is_stmt 0 view .LVU353
 1431 000a 6309     		lsrs	r3, r4, #5
1798:CMSIS/Core/Include/core_cm4.h ****   }
 1432              		.loc 2 1798 35 view .LVU354
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 88


 1433 000c 8033     		adds	r3, r3, #128
 1434 000e 094A     		ldr	r2, .L115
 1435 0010 52F82300 		ldr	r0, [r2, r3, lsl #2]
1798:CMSIS/Core/Include/core_cm4.h ****   }
 1436              		.loc 2 1798 91 view .LVU355
 1437 0014 04F01F04 		and	r4, r4, #31
 1438              	.LVL114:
1798:CMSIS/Core/Include/core_cm4.h ****   }
 1439              		.loc 2 1798 103 view .LVU356
 1440 0018 20FA04F4 		lsr	r4, r0, r4
1798:CMSIS/Core/Include/core_cm4.h ****   }
 1441              		.loc 2 1798 12 view .LVU357
 1442 001c 04F00100 		and	r0, r4, #1
 1443              	.L109:
1798:CMSIS/Core/Include/core_cm4.h ****   }
 1444              		.loc 2 1798 12 view .LVU358
 1445              	.LBE115:
 1446              	.LBE114:
 444:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1447              		.loc 1 444 1 view .LVU359
 1448 0020 10BD     		pop	{r4, pc}
 1449              	.LVL115:
 1450              	.L114:
 440:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 1451              		.loc 1 440 3 discriminator 1 view .LVU360
 1452 0022 4FF4DC71 		mov	r1, #440
 1453 0026 0448     		ldr	r0, .L115+4
 1454              	.LVL116:
 440:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   
 1455              		.loc 1 440 3 discriminator 1 view .LVU361
 1456 0028 FFF7FEFF 		bl	assert_failed
 1457              	.LVL117:
 1458 002c EBE7     		b	.L110
 1459              	.LVL118:
 1460              	.L112:
 1461              	.LBB117:
 1462              	.LBB116:
1802:CMSIS/Core/Include/core_cm4.h ****   }
 1463              		.loc 2 1802 11 view .LVU362
 1464 002e 0020     		movs	r0, #0
 1465              	.LVL119:
1802:CMSIS/Core/Include/core_cm4.h ****   }
 1466              		.loc 2 1802 11 view .LVU363
 1467              	.LBE116:
 1468              	.LBE117:
 443:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1469              		.loc 1 443 10 view .LVU364
 1470 0030 F6E7     		b	.L109
 1471              	.L116:
 1472 0032 00BF     		.align	2
 1473              	.L115:
 1474 0034 00E100E0 		.word	-536813312
 1475 0038 00000000 		.word	.LC0
 1476              		.cfi_endproc
 1477              	.LFE144:
 1479              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1480              		.align	1
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 89


 1481              		.global	HAL_SYSTICK_CLKSourceConfig
 1482              		.syntax unified
 1483              		.thumb
 1484              		.thumb_func
 1486              	HAL_SYSTICK_CLKSourceConfig:
 1487              	.LVL120:
 1488              	.LFB145:
 445:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 446:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 447:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 448:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 449:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 450:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 451:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 452:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 453:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 454:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 455:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 1489              		.loc 1 455 1 is_stmt 1 view -0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 0, uses_anonymous_args = 0
 1493              		.loc 1 455 1 is_stmt 0 view .LVU366
 1494 0000 10B5     		push	{r4, lr}
 1495              	.LCFI10:
 1496              		.cfi_def_cfa_offset 8
 1497              		.cfi_offset 4, -8
 1498              		.cfi_offset 14, -4
 1499 0002 0446     		mov	r4, r0
 456:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 457:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 1500              		.loc 1 457 3 is_stmt 1 view .LVU367
 1501 0004 0428     		cmp	r0, #4
 1502 0006 00D0     		beq	.L118
 1503              		.loc 1 457 3 is_stmt 0 discriminator 1 view .LVU368
 1504 0008 40B9     		cbnz	r0, .L122
 1505              	.LVL121:
 1506              	.L118:
 458:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1507              		.loc 1 458 3 is_stmt 1 view .LVU369
 1508              		.loc 1 458 6 is_stmt 0 view .LVU370
 1509 000a 042C     		cmp	r4, #4
 1510 000c 0CD0     		beq	.L123
 459:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   {
 460:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 461:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 462:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   else
 463:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   {
 464:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1511              		.loc 1 464 5 is_stmt 1 view .LVU371
 1512              		.loc 1 464 19 is_stmt 0 view .LVU372
 1513 000e 4FF0E022 		mov	r2, #-536813568
 1514 0012 1369     		ldr	r3, [r2, #16]
 1515 0014 23F00403 		bic	r3, r3, #4
 1516 0018 1361     		str	r3, [r2, #16]
 1517              	.L117:
 465:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 90


 466:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1518              		.loc 1 466 1 view .LVU373
 1519 001a 10BD     		pop	{r4, pc}
 1520              	.LVL122:
 1521              	.L122:
 457:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1522              		.loc 1 457 3 discriminator 2 view .LVU374
 1523 001c 40F2C911 		movw	r1, #457
 1524 0020 0548     		ldr	r0, .L124
 1525              	.LVL123:
 457:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1526              		.loc 1 457 3 discriminator 2 view .LVU375
 1527 0022 FFF7FEFF 		bl	assert_failed
 1528              	.LVL124:
 1529 0026 F0E7     		b	.L118
 1530              	.L123:
 460:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 1531              		.loc 1 460 5 is_stmt 1 view .LVU376
 460:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   }
 1532              		.loc 1 460 19 is_stmt 0 view .LVU377
 1533 0028 4FF0E022 		mov	r2, #-536813568
 1534 002c 1369     		ldr	r3, [r2, #16]
 1535 002e 43F00403 		orr	r3, r3, #4
 1536 0032 1361     		str	r3, [r2, #16]
 1537 0034 F1E7     		b	.L117
 1538              	.L125:
 1539 0036 00BF     		.align	2
 1540              	.L124:
 1541 0038 00000000 		.word	.LC0
 1542              		.cfi_endproc
 1543              	.LFE145:
 1545              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1546              		.align	1
 1547              		.weak	HAL_SYSTICK_Callback
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1552              	HAL_SYSTICK_Callback:
 1553              	.LFB147:
 467:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 468:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 469:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 470:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 471:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 472:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 473:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 474:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 475:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 476:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 477:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** /**
 478:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 479:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 480:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   */
 481:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 482:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** {
 1554              		.loc 1 482 1 is_stmt 1 view -0
 1555              		.cfi_startproc
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 91


 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558              		@ link register save eliminated.
 483:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 484:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 485:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****    */
 486:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1559              		.loc 1 486 1 view .LVU379
 1560 0000 7047     		bx	lr
 1561              		.cfi_endproc
 1562              	.LFE147:
 1564              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1565              		.align	1
 1566              		.global	HAL_SYSTICK_IRQHandler
 1567              		.syntax unified
 1568              		.thumb
 1569              		.thumb_func
 1571              	HAL_SYSTICK_IRQHandler:
 1572              	.LFB146:
 473:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1573              		.loc 1 473 1 view -0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 0, uses_anonymous_args = 0
 1577 0000 08B5     		push	{r3, lr}
 1578              	.LCFI11:
 1579              		.cfi_def_cfa_offset 8
 1580              		.cfi_offset 3, -8
 1581              		.cfi_offset 14, -4
 474:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** }
 1582              		.loc 1 474 3 view .LVU381
 1583 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 1584              	.LVL125:
 475:Vendor_HAL/ST/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c **** 
 1585              		.loc 1 475 1 is_stmt 0 view .LVU382
 1586 0006 08BD     		pop	{r3, pc}
 1587              		.cfi_endproc
 1588              	.LFE146:
 1590              		.text
 1591              	.Letext0:
 1592              		.file 4 "CMSIS/Vendor_Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1593              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1594              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1595              		.file 7 "CMSIS/Vendor_Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1596              		.file 8 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1597              		.file 9 "Vendor_HAL/ST/STM32F4xx_HAL_Driver/stm32f4xx_hal_conf.h"
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 92


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_cortex.c
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:20     .rodata.HAL_NVIC_SetPriorityGrouping.str1.4:00000000 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:25     .text.HAL_NVIC_SetPriorityGrouping:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:31     .text.HAL_NVIC_SetPriorityGrouping:00000000 HAL_NVIC_SetPriorityGrouping
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:108    .text.HAL_NVIC_SetPriorityGrouping:00000034 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:114    .text.HAL_NVIC_SetPriority:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:120    .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:295    .text.HAL_NVIC_SetPriority:00000080 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:302    .text.HAL_NVIC_EnableIRQ:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:308    .text.HAL_NVIC_EnableIRQ:00000000 HAL_NVIC_EnableIRQ
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:366    .text.HAL_NVIC_EnableIRQ:00000028 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:372    .text.HAL_NVIC_DisableIRQ:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:378    .text.HAL_NVIC_DisableIRQ:00000000 HAL_NVIC_DisableIRQ
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:466    .text.HAL_NVIC_DisableIRQ:00000030 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:472    .text.HAL_NVIC_SystemReset:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:478    .text.HAL_NVIC_SystemReset:00000000 HAL_NVIC_SystemReset
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:544    .text.HAL_NVIC_SystemReset:0000001c $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:552    .text.HAL_SYSTICK_Config:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:558    .text.HAL_SYSTICK_Config:00000000 HAL_SYSTICK_Config
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:623    .text.HAL_SYSTICK_Config:00000024 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:628    .text.HAL_MPU_Disable:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:634    .text.HAL_MPU_Disable:00000000 HAL_MPU_Disable
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:670    .text.HAL_MPU_Disable:00000018 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:675    .text.HAL_MPU_Enable:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:681    .text.HAL_MPU_Enable:00000000 HAL_MPU_Enable
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:734    .text.HAL_MPU_Enable:0000001c $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:739    .text.HAL_MPU_ConfigRegion:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:745    .text.HAL_MPU_ConfigRegion:00000000 HAL_MPU_ConfigRegion
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:965    .text.HAL_MPU_ConfigRegion:00000120 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:971    .text.HAL_NVIC_GetPriorityGrouping:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:977    .text.HAL_NVIC_GetPriorityGrouping:00000000 HAL_NVIC_GetPriorityGrouping
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1001   .text.HAL_NVIC_GetPriorityGrouping:0000000c $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1006   .text.HAL_NVIC_GetPriority:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1012   .text.HAL_NVIC_GetPriority:00000000 HAL_NVIC_GetPriority
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1162   .text.HAL_NVIC_GetPriority:00000074 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1170   .text.HAL_NVIC_SetPendingIRQ:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1176   .text.HAL_NVIC_SetPendingIRQ:00000000 HAL_NVIC_SetPendingIRQ
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1235   .text.HAL_NVIC_SetPendingIRQ:0000002c $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1241   .text.HAL_NVIC_GetPendingIRQ:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1247   .text.HAL_NVIC_GetPendingIRQ:00000000 HAL_NVIC_GetPendingIRQ
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1319   .text.HAL_NVIC_GetPendingIRQ:00000034 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1325   .text.HAL_NVIC_ClearPendingIRQ:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1331   .text.HAL_NVIC_ClearPendingIRQ:00000000 HAL_NVIC_ClearPendingIRQ
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1390   .text.HAL_NVIC_ClearPendingIRQ:0000002c $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1396   .text.HAL_NVIC_GetActive:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1402   .text.HAL_NVIC_GetActive:00000000 HAL_NVIC_GetActive
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1474   .text.HAL_NVIC_GetActive:00000034 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1480   .text.HAL_SYSTICK_CLKSourceConfig:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1486   .text.HAL_SYSTICK_CLKSourceConfig:00000000 HAL_SYSTICK_CLKSourceConfig
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1541   .text.HAL_SYSTICK_CLKSourceConfig:00000038 $d
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1546   .text.HAL_SYSTICK_Callback:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1552   .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1565   .text.HAL_SYSTICK_IRQHandler:00000000 $t
C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s:1571   .text.HAL_SYSTICK_IRQHandler:00000000 HAL_SYSTICK_IRQHandler

UNDEFINED SYMBOLS
ARM GAS  C:\Users\katre\AppData\Local\Temp\ccKAEpzd.s 			page 93


assert_failed
